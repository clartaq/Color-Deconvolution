(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    343136,       7128]
NotebookOptionsPosition[    317208,       6713]
NotebookOutlinePosition[    320343,       6784]
CellTagsIndexPosition[    320300,       6781]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Notes on \"A Framework for the Automated Analysis of \
Subcellular Patterns in Human Protein Atlas Images\"",
 FontFamily->"Calibri",
 FontSize->22]], "Title",
 CellChangeTimes->{{3.4742891466582317`*^9, 3.474289301755433*^9}, {
  3.474289524106206*^9, 3.474289556194205*^9}},
 TextAlignment->Left,ExpressionUUID->"fb470410-9932-4148-9767-d3996f587ffb"],

Cell[TextData[{
 StyleBox["This is a walkthrough of the \"unmixing\" path of the methods \
presented in \"A Framework for the Automated Analysis of Subcellular Patterns \
in Human Protein Atlas Images\", by Justin Newberg and Robert F. Murphy, \
published in the ",
  FontFamily->"Cambria"],
 StyleBox["Journal of Proteome Research",
  FontFamily->"Cambria",
  FontSlant->"Italic"],
 StyleBox[", vol. 7, no. 6. pp. 2300-2308, (2008).",
  FontFamily->"Cambria"]
}], "Text",
 CellChangeTimes->{{3.4742891466582317`*^9, 3.474289301755433*^9}, {
  3.474289524106206*^9, 3.474289556194205*^9}, {3.47428980355612*^9, 
  3.474289822177782*^9}, {3.47428998214911*^9, 3.47428998214911*^9}},
 TextJustification->0.,ExpressionUUID->"c141aa0d-de15-4c6f-b6d2-879819da1e81"],

Cell[TextData[{
 StyleBox["The authors kindly provided access to the source code and images \
used for the research presented in their paper. The web page for the paper is \
",
  FontFamily->"Cambria"],
 ButtonBox["http://murphylab.web.cmu.edu/software/2008_JProteomeResearch \
_HPA/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://murphylab.web.cmu.edu/software/2008_JProteomeResearch_HPA/"], 
    None},
  ButtonNote->
   "http://murphylab.web.cmu.edu/software/2008_JProteomeResearch_HPA/"],
 ". The code was written in MATLAB and is available at ",
 ButtonBox["http://murphylab.web.cmu.edu/software/2008_JProteomeResearch \
_HPA/JPRAtlasCode.tar.gz",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://murphylab.web.cmu.edu/software/2008_JProteomeResearch_HPA/\
JPRAtlasCode.tar.gz"], None},
  ButtonNote->
   "http://murphylab.web.cmu.edu/software/2008_JProteomeResearch_HPA/\
JPRAtlasCode.tar.gz"],
 ". The images (1.4 ",
 StyleBox["GB",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ") are available from the Human Protein Atlas at ",
 ButtonBox["http://proteinatlas.org/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://proteinatlas.org/"], None},
  ButtonNote->"http://proteinatlas.org/"],
 " or from the author's web site at ",
 ButtonBox["http://murphylab.web.cmu.edu/software/2008_JProteomeResearch \
_HPA/JPRAtlasImages.tar.gz",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://murphylab.web.cmu.edu/software/2008_JProteomeResearch_HPA/\
JPRAtlasImages.tar.gz"], None},
  ButtonNote->
   "http://murphylab.web.cmu.edu/software/2008_JProteomeResearch_HPA/\
JPRAtlasImages.tar.gz"],
 "."
}], "Text",
 CellChangeTimes->{{3.474289984476818*^9, 3.4742900267036247`*^9}, {
  3.4742900701333404`*^9, 3.4742900818656125`*^9}, {3.4742901776140766`*^9, 
  3.474290186721819*^9}, {3.474290219934616*^9, 3.474290240149743*^9}, {
  3.47429029068756*^9, 3.474290304763162*^9}, {3.474290341631554*^9, 
  3.4742903817962303`*^9}, {3.474290419961265*^9, 3.474290459954097*^9}, {
  3.474290529863442*^9, 3.4742905837909365`*^9}, {3.4742906284356422`*^9, 
  3.474290628545066*^9}, {3.474290757445713*^9, 3.474290779424165*^9}, {
  3.474290904467084*^9, 3.474290904467084*^9}},
 TextJustification->0.,ExpressionUUID->"1e9ec965-5a28-4436-b812-cfb2f1d6ad42"],

Cell[CellGroupData[{

Cell["System Requirements", "Section",
 CellChangeTimes->{{3.4742909058108945`*^9, 3.474290913670622*^9}},
 TextAlignment->Left,
 FontFamily->"Calibri",
 FontSize->16,ExpressionUUID->"92f745ba-b062-47ae-a2ba-14f94a45ff02"],

Cell["\<\
From the author's web site: \"The scripts were written for Matlab version 7.1 \
on Linux. The statistics, wavelet, and image processing toolboxes for Matlab \
are also required.\" Since we are only interested in the unmixing portion \
now, only the base MATLAB system and the image processing toolboxes are \
discussed.\
\>", "Text",
 CellChangeTimes->{{3.4742909147644205`*^9, 3.4742910449577527`*^9}, {
  3.474291145179437*^9, 3.474291145179437*^9}, {3.474300866806733*^9, 
  3.4743008799283733`*^9}},
 TextJustification->0.,ExpressionUUID->"5bd6001e-e4f5-4a7b-830a-afa72ea67f10"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structure of the Program", "Section",
 CellChangeTimes->{{3.4742911464605646`*^9, 3.4742911513663435`*^9}, {
  3.4742916172329397`*^9, 3.4742916172329397`*^9}},
 TextAlignment->Left,
 FontFamily->"Calibri",
 FontSize->16,ExpressionUUID->"92d0f821-9b7e-4e5a-811c-6d721322ec9f"],

Cell["\<\
The program is well structured and easily understood. At the top level are \
three functions, the first of which will download the images into the correct \
location for further processing. Since this is done only once it is not \
discussed further here. A second top-level function will generate all of the \
tables and figures once processing has been completed (see next.) That is not \
of interest now. The third function processes the image files. That is where \
our interest lies.\
\>", "Text",
 CellChangeTimes->{{3.4742916199512725`*^9, 
  3.4742917954079075`*^9}},ExpressionUUID->"c98e1b51-e8af-479b-9ebb-\
5a6223b52319"],

Cell["\<\
processData\[LineSeparator]\tsetup(dataroot)\[LineSeparator]\toptions = \
setOptions(inputs)
\toutputs = prepareData(method, params)
\thandleData(data, params)
\t\tprocessImage(readpath, writepath, params)
\t\t\tH = findH(V, W)
\t\t\t[W, H] = findWH(V, inputs)
\t\t\t[J, ma] = reconIH(I, H, IDX, sc)\
\>", "Program",
 CellChangeTimes->{
  3.474633980100915*^9},ExpressionUUID->"e09cea28-5c39-4dec-86b2-\
9ccc99f98cd8"],

Cell["\<\
In a translation, it is often easier to work \"from the inside out\" and so \
we shall here.\
\>", "Text",
 CellChangeTimes->{{3.474292244644294*^9, 3.474292245347297*^9}, {
  3.474292298260027*^9, 
  3.474292327036304*^9}},ExpressionUUID->"bc98d50b-0859-43c8-a508-\
b5dc897283a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Functions", "Section",
 CellChangeTimes->{{3.474292333769515*^9, 3.474292427518339*^9}, {
  3.474292560041461*^9, 3.4742926449549675`*^9}, {3.4742928104589405`*^9, 
  3.4742928535496564`*^9}, {3.474292971865424*^9, 3.4742929747713394`*^9}, {
  3.4743035019971533`*^9, 3.4743035692531805`*^9}, {3.4743036029671993`*^9, 
  3.474303610254181*^9}, {3.47430416564487*^9, 3.474304193881138*^9}, {
  3.4743042759789476`*^9, 3.4743043061070147`*^9}, {3.4743043517285776`*^9, 
  3.4743043531044135`*^9}, {3.4743773111095066`*^9, 
  3.474377347359042*^9}},ExpressionUUID->"3f91b966-5137-41bd-b9f6-\
511de14214fc"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " versions of some MATLAB functions"
}], "Subsection",
 CellChangeTimes->{{3.4743773886241393`*^9, 3.4743773992177534`*^9}, {
  3.4743774971852493`*^9, 3.4743774972008743`*^9}, {3.474387562382146*^9, 
  3.4743875789284916`*^9}, {3.4743877659537563`*^9, 3.4743877659537563`*^9}, {
  3.474637579462118*^9, 
  3.4746375919620385`*^9}},ExpressionUUID->"73c6aaee-1975-44d4-b4c5-\
d33db1123455"],

Cell["\<\
The software for the original paper is written in MATLAB 7.1. Since there is \
not a one-to-one correspondence between the syntax and built-in functions \
available in the two languages, some bridging must be done.\
\>", "Text",
 CellChangeTimes->{{3.474637623430587*^9, 3.4746376858520293`*^9}, {
   3.474637732960801*^9, 3.474637749085595*^9}, {3.4746378924431353`*^9, 
   3.4746378924431353`*^9}, {3.474640437989501*^9, 3.474640437989501*^9}, 
   3.811521957439865*^9},ExpressionUUID->"ee56861b-0844-4ea5-8888-\
0fb91882432a"],

Cell[CellGroupData[{

Cell["single()", "Subsubsection",
 CellChangeTimes->{{3.474640440085757*^9, 3.474640442056863*^9}},
 TextAlignment->Left,ExpressionUUID->"4c64ccac-7aae-406a-8021-7644a895ed8d"],

Cell[TextData[{
 "This function is used to convert its arguments to single-precision floating \
point, presumably to reduce memory requirements. We will simply allow ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to use whatever numerical representation it believes appropriate and will \
not do explicit casts to single precision."
}], "Item1Paragraph",
 CellChangeTimes->{{3.4746378947556057`*^9, 3.4746379843950357`*^9}, {
   3.474638109204341*^9, 3.474638122047762*^9}, {3.4746384467328334`*^9, 
   3.4746384467328334`*^9}, {3.4746406098769836`*^9, 3.4746406098769836`*^9}, 
   3.474647807863309*^9},ExpressionUUID->"8a976a71-b41d-452d-9026-\
c0cd2758bc5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["reshape()", "Subsubsection",
 CellChangeTimes->{{3.474640611846843*^9, 
  3.4746406140981097`*^9}},ExpressionUUID->"eb460d5b-acea-428b-ade5-\
c7169bf40b4a"],

Cell[CellGroupData[{

Cell["\<\
This function does general matrix reshaping. However, in the calculation \
chain described above, the function is invariably used to convert image data \
into an column matrix of tuples. The dimensionality of the tuples is the \
number of color planes in the original image. Further, the elements are \
almost always subtracted from 255 and duplicate rows (tuples) are eliminated.\
\>", "Item1Paragraph",
 CellChangeTimes->{{3.4746384479659758`*^9, 3.4746384925620317`*^9}, {
  3.474638524998365*^9, 3.4746386454655643`*^9}, {3.4746386802553387`*^9, 
  3.4746387280678563`*^9}, {3.4746390961118426`*^9, 3.4746391355133877`*^9}, {
  3.4746392394947023`*^9, 3.4746392398539047`*^9}, {3.474640227240136*^9, 
  3.474640243092304*^9}, {3.474647811409594*^9, 
  3.4746478146278086`*^9}},ExpressionUUID->"dcaca5cc-7e82-4ba6-b920-\
cc5b6fa4e0a5"],

Cell["\<\
Creating a function to do what is desired, not just trying to reproduce the \
MATLAB function, is straightforward. Let's start with a small image to work \
with. (Note: You will probably need to change the following file path to \
match the directory layout on your system.)\
\>", "Item1Paragraph",
 CellChangeTimes->{{3.4746384479659758`*^9, 3.4746384925620317`*^9}, {
   3.474638524998365*^9, 3.4746386454655643`*^9}, {3.4746386802553387`*^9, 
   3.4746387280678563`*^9}, {3.4746390961118426`*^9, 
   3.4746391355133877`*^9}, {3.4746392394947023`*^9, 3.474639330185525*^9}, {
   3.4746393928117*^9, 3.4746393928117*^9}, 3.474640252775402*^9, {
   3.5250115287105083`*^9, 
   3.5250115605813646`*^9}},ExpressionUUID->"78e0514c-dd10-4c62-be15-\
fc6f43dd2a85"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "smlImgPath", "=", 
   "\"\<~/projects/Color-Deconvolution/Images/Small Test.PNG\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, 3.4746394849556875`*^9, {
   3.525011486356434*^9, 3.5250115075100713`*^9}, {3.811522110880382*^9, 
   3.811522152428301*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"f07397f5-b1c9-4e14-9a9e-98ffcfec77a5"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[Cell[BoxData[
   RowBox[{"smlImg", " ", "=", " ", 
    RowBox[{"Import", "[", "smlImgPath", "]"}]}]], "Input",
   CellChangeTimes->{{3.4743993774500003`*^9, 3.4743993947451286`*^9}},
   ExpressionUUID->"bdda4521-515b-4352-8cdf-1c95a8a8aedb"], "Input"]], "Input",
 CellChangeTimes->{3.4746393940454826`*^9, 3.4746394391958265`*^9, 
  3.4746394849556875`*^9},
 CellLabel->
  "In[710]:=",ExpressionUUID->"68e83bdb-117b-4ec9-bb73-0037ff8bb46a"],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQzEIPZ/hgY8qKHhPxo6AAOjGsnUCAYka0QCdNJItlOHVnQMMo0A8Eg2
iA==
      "], {{0, 9.6}, {11.4, 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{120, 120}],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{11.4, 9.6},
    PlotRange->{{0, 11.4}, {0, 9.6}}]], "Input",
   CellChangeTimes->{{3.4743993774500003`*^9, 3.4743993947451286`*^9}},
   ExpressionUUID->"5aa88632-cdc1-42c6-bd6c-ebe9bf168225"],
  ExpressionCell[
   Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQzEIPZ/hgY8qKHhPxo6AAOjGsnUCAYka0QCdNJItlOHVnQMMo0A8Eg2
iA==
    "], "Byte", ColorSpace -> "RGB", ImageResolution -> {120, 120}, 
    Interleaving -> True], "Input", 
   CellChangeTimes -> {{3.4743993774500003`*^9, 
    3.4743993947451286`*^9}}]]], "Output",
 CellChangeTimes->{
  3.474639455079027*^9, 3.4746394994020596`*^9, 3.4747348847050643`*^9, 
   3.4748020195724945`*^9, 3.4748037288986444`*^9, 3.474803774882454*^9, 
   3.4748054317076397`*^9, 3.474805654342162*^9, {3.4748075988620005`*^9, 
   3.4748076182871847`*^9}, 3.474808263172038*^9, 3.4748083143893623`*^9, 
   3.474809794538604*^9, 3.4748141362664795`*^9, 3.474814521083828*^9, 
   3.47481459736014*^9, {3.474815203098461*^9, 3.4748152283304462`*^9}, 
   3.474820847574823*^9, 3.4748215328225355`*^9, {3.4748295868207026`*^9, 
   3.4748296348431168`*^9}, 3.474830357581381*^9, 3.4748304681463485`*^9, 
   3.474830564541522*^9, 3.474832130526839*^9, 3.4749012818212385`*^9, 
   3.4749016030355515`*^9, 3.474912024485411*^9, 3.474916444935841*^9, 
   3.474917011488313*^9, 3.4749741949296427`*^9, 3.4749784938935394`*^9, 
   3.4749872413027663`*^9, 3.4749881819651785`*^9, 3.4749990165076666`*^9, 
   3.474999471429824*^9, 3.4749996895282116`*^9, 3.4750007797186966`*^9, 
   3.4750014448448095`*^9, 3.4750026562758713`*^9, 3.5250117223692484`*^9, 
   3.811522089940317*^9, 3.811522221161643*^9, 3.811522364844604*^9, 
   3.8115225858658447`*^9, 3.811522737743137*^9, 3.811523233028668*^9},
 CellLabel->
  "Out[710]=",ExpressionUUID->"65191060-b372-4eda-b53e-96ffdd2263ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"Import", "[", 
   RowBox[{"smlImgPath", ",", " ", "\"\<Data\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, {3.474639593451849*^9, 
   3.4746396036502075`*^9}},
 CellLabel->
  "In[711]:=",ExpressionUUID->"57a64c64-0a4c-44ab-8bfd-5856b30c04a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16", ",", "19", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.474639622047858*^9, 3.474734884783104*^9, 3.474802019634591*^9, 
   3.4748037289454556`*^9, 3.474803774929265*^9, 3.4748054317544746`*^9, 
   3.4748056544202194`*^9, {3.4748075989244604`*^9, 3.47480761833403*^9}, 
   3.4748082632188973`*^9, 3.4748083144362216`*^9, 3.4748097945854654`*^9, 
   3.474814136313346*^9, 3.474814521146312*^9, 3.474814597407002*^9, {
   3.474815203145361*^9, 3.4748152283773456`*^9}, 3.4748208476373205`*^9, 
   3.4748215328850317`*^9, {3.4748295868673563`*^9, 3.4748296348897705`*^9}, 
   3.4748303576438026`*^9, 3.474830468193165*^9, 3.474830564603944*^9, 
   3.474832130573663*^9, 3.4749012818837423`*^9, 3.474901603098014*^9, 
   3.4749120245478954`*^9, 3.4749164449827104`*^9, 3.4749170115351825`*^9, 
   3.4749741950077333`*^9, 3.474978493940398*^9, 3.4749872413651395`*^9, 
   3.474988184093524*^9, 3.474999016570137*^9, 3.474999471476677*^9, 
   3.474999689575064*^9, 3.4750007797812586`*^9, 3.4750014449073515`*^9, 
   3.475002656322776*^9, 3.525011722587649*^9, 3.8115220899710073`*^9, 
   3.811522221193445*^9, 3.811522364856175*^9, 3.811522585895212*^9, 
   3.811522737773489*^9, 3.811523233057213*^9},
 CellLabel->
  "Out[711]=",ExpressionUUID->"f48f8b23-b6e2-4325-a34a-ffebd06969ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"smlImgPath", ",", " ", "\"\<BitDepth\>\""}], "]"}]], "Input",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, {3.474639593451849*^9, 
   3.4746396407110095`*^9}},
 CellLabel->
  "In[712]:=",ExpressionUUID->"b2570d32-3202-43e0-b92b-0e0051f8aac6"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.474639657031506*^9, 3.474734884845535*^9, 3.4748020196966887`*^9, 
   3.4748037289922667`*^9, 3.4748037749760756`*^9, 3.4748054318013096`*^9, 
   3.4748056544670534`*^9, {3.474807598971306*^9, 3.47480761839649*^9}, 
   3.4748082632657566`*^9, 3.474808314483081*^9, 3.474809794632327*^9, 
   3.474814136360213*^9, 3.4748145211931753`*^9, 3.474814597453864*^9, {
   3.4748152031922607`*^9, 3.474815228424245*^9}, 3.474820847684194*^9, 
   3.4748215329319043`*^9, {3.4748295869295616`*^9, 3.474829634951976*^9}, 
   3.4748303576906195`*^9, 3.4748304682399817`*^9, 3.4748305646507607`*^9, 
   3.4748321306360955`*^9, 3.474901281914994*^9, 3.474901603129245*^9, 
   3.474912024594758*^9, 3.474916445029579*^9, 3.4749170115820513`*^9, 
   3.4749741950545874`*^9, 3.474978493987256*^9, 3.4749872414119196`*^9, 
   3.4749881857993307`*^9, 3.474999016616989*^9, 3.474999471523529*^9, 
   3.474999689621917*^9, 3.4750007798281803`*^9, 3.4750014449386225`*^9, 
   3.47500265636968*^9, 3.525011722650049*^9, 3.811522089999866*^9, 
   3.811522221222529*^9, 3.811522364889503*^9, 3.811522585924863*^9, 
   3.811522737802709*^9, 3.811523233087137*^9},
 CellLabel->
  "Out[712]=",ExpressionUUID->"230b5d7f-0b11-4192-b7cf-2b9ec31ab429"]
}, Open  ]],

Cell["\<\
This shows that this is an image with 16 rows, 19 columns, and three color \
channels and that the data consists of 8-bit values. From the image, it is \
obvious that there should be several duplicate rows in the reshaped matrix. \
The data looks like:\
\>", "Item1Paragraph",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, {3.474639593451849*^9, 
   3.4746396407110095`*^9}, {3.4746396711655245`*^9, 
   3.474639676756661*^9}},ExpressionUUID->"959a967a-d33e-4475-b0d7-\
e07802fabe7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"ImageData", "[", 
    RowBox[{"smlImg", ",", " ", "\"\<Byte\>\""}], "]"}], ",", " ", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, {3.474639593451849*^9, 
   3.4746396407110095`*^9}, {3.4746396711655245`*^9, 3.4746396935925417`*^9}, 
   3.47463973933694*^9},
 CellLabel->
  "In[713]:=",ExpressionUUID->"8eecc34e-ec97-44cc-b74c-929cbfb3c811"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
      RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
      RowBox[{"{", 
       RowBox[{"128", ",", "128", ",", "255"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"128", ",", "128", ",", "255"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"192", ",", "192", ",", "192"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"192", ",", "192", ",", "192"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"192", ",", "192", ",", "192"}], "}"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}], "}"}],
  Short[#, 3]& ]], "Output",
 CellChangeTimes->{
  3.474639745459157*^9, 3.4747348848767505`*^9, 3.4748020197122126`*^9, 
   3.4748037290234737`*^9, 3.4748037750072827`*^9, 3.474805431816921*^9, 
   3.474805654482665*^9, {3.4748075989869213`*^9, 3.47480761842772*^9}, 
   3.474808263296996*^9, 3.4748083145143204`*^9, 3.474809794663568*^9, 
   3.474814136391457*^9, 3.4748145212244177`*^9, 3.4748145974851055`*^9, {
   3.474815203223527*^9, 3.4748152284555116`*^9}, 3.4748208476998186`*^9, 
   3.4748215329475284`*^9, {3.474829586945113*^9, 3.4748296349675274`*^9}, 
   3.4748303577218304`*^9, 3.4748304682711926`*^9, 3.4748305646819715`*^9, 
   3.474832130651704*^9, 3.4749012819462457`*^9, 3.4749016031604757`*^9, 
   3.474912024610379*^9, 3.4749164450608253`*^9, 3.4749170116132975`*^9, 
   3.4749741950858235`*^9, 3.4749784940184946`*^9, 3.474987241427513*^9, 
   3.474988190447262*^9, 3.474999016648224*^9, 3.4749994715547643`*^9, 
   3.4749996896531515`*^9, 3.4750007798438206`*^9, 3.4750014449698935`*^9, 
   3.4750026564009495`*^9, 3.525011722696849*^9, 3.811522090010597*^9, 
   3.811522221229187*^9, 3.8115223648962297`*^9, 3.81152258593196*^9, 
   3.811522737809354*^9, 3.811523233093688*^9},
 CellLabel->
  "Out[713]//Short=",ExpressionUUID->"cecdcff6-97dd-4d98-8c4b-c46ab5435afc"]
}, Open  ]],

Cell[TextData[{
 "That is, it is rows of RGB triples. We can obtain the tall matrix form \
generated by the ",
 StyleBox["reshape()", "Code"],
 " function by flattening the list by one level:"
}], "Item1Paragraph",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, {3.474639593451849*^9, 
   3.4746396407110095`*^9}, {3.4746396711655245`*^9, 
   3.4746396935925417`*^9}, {3.474639788798829*^9, 3.4746397921722956`*^9}, 
   3.4746398292648077`*^9},ExpressionUUID->"a31316e4-62c7-4393-b381-\
df7a58a1134e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"ImageData", "[", 
      RowBox[{"smlImg", ",", " ", "\"\<Byte\>\""}], "]"}], ",", " ", "1"}], 
    "]"}], ",", " ", "3"}], "]"}]], "Input",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, {3.474639593451849*^9, 
   3.4746396407110095`*^9}, {3.4746396711655245`*^9, 
   3.4746396935925417`*^9}, {3.474639788798829*^9, 3.4746397921722956`*^9}, {
   3.4746398292648077`*^9, 3.47463983743297*^9}},
 CellLabel->
  "In[714]:=",ExpressionUUID->"cc6ccf75-02ac-4b3a-b551-1afc64b8afff"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"255", ",", "0", ",", "128"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "293", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"128", ",", "128", ",", "255"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"128", ",", "128", ",", "255"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"192", ",", "192", ",", "192"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"192", ",", "192", ",", "192"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"192", ",", "192", ",", "192"}], "}"}]}], "}"}],
  Short[#, 3]& ]], "Output",
 CellChangeTimes->{
  3.4746398574551177`*^9, 3.4747348849079657`*^9, 3.4748020197587857`*^9, 
   3.474803729054681*^9, 3.4748037750384903`*^9, 3.4748054318481445`*^9, 
   3.4748056545138874`*^9, {3.4748075990181513`*^9, 3.4748076184433355`*^9}, 
   3.474808263328236*^9, 3.47480831454556*^9, 3.474809794694809*^9, 
   3.474814136422702*^9, 3.474814521240039*^9, 3.474814597516347*^9, {
   3.474815203254793*^9, 3.4748152284867783`*^9}, 3.4748208477310677`*^9, 
   3.474821532978777*^9, {3.4748295869762154`*^9, 3.47482963499863*^9}, 
   3.4748303577530413`*^9, 3.4748304683024035`*^9, 3.4748305646975765`*^9, 
   3.4748321306829195`*^9, 3.474901281977497*^9, 3.4749016031917067`*^9, 
   3.474912024641621*^9, 3.4749164450920715`*^9, 3.4749170116289206`*^9, 
   3.474974195132678*^9, 3.4749784940497336`*^9, 3.4749872414586997`*^9, 
   3.47498819323289*^9, 3.474999016679459*^9, 3.4749994715859995`*^9, 
   3.4749996896843867`*^9, 3.475000779875102*^9, 3.475001444985529*^9, 
   3.4750026564322195`*^9, 3.5250117227436495`*^9, 3.811522090037437*^9, 
   3.8115222212357407`*^9, 3.8115223649277763`*^9, 3.811522585961124*^9, 
   3.811522737837731*^9, 3.811523233119639*^9},
 CellLabel->
  "Out[714]//Short=",ExpressionUUID->"78f51f98-e9fa-4621-9263-4efbf70fcf1f"]
}, Open  ]],

Cell["\<\
And we can subtract each byte from 255 and reduce the matrix to the \
non-duplicated rows like this:\
\>", "Item1Paragraph",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, {3.474639593451849*^9, 
   3.4746396407110095`*^9}, {3.4746396711655245`*^9, 
   3.4746396935925417`*^9}, {3.474639788798829*^9, 3.4746397921722956`*^9}, {
   3.4746398292648077`*^9, 3.47463983743297*^9}, {3.4746398751345806`*^9, 
   3.474639903184329*^9}, {3.474639952162063*^9, 
   3.4746399622512264`*^9}},ExpressionUUID->"97d0726c-4130-4ff1-b150-\
a7fe6cc0406e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"255", "-", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"ImageData", "[", 
       RowBox[{"smlImg", ",", " ", "\"\<Byte\>\""}], "]"}], ",", " ", "1"}], 
     "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.4746393940454826`*^9, 3.4746394391958265`*^9, {3.474639593451849*^9, 
   3.4746396407110095`*^9}, {3.4746396711655245`*^9, 
   3.4746396935925417`*^9}, {3.474639788798829*^9, 3.4746397921722956`*^9}, {
   3.4746398292648077`*^9, 3.47463983743297*^9}, {3.4746398751345806`*^9, 
   3.4746399200360427`*^9}, {3.4746399703725348`*^9, 3.474639971543877*^9}, 
   3.4748304563485904`*^9, {3.4748305598130555`*^9, 3.4748305609990735`*^9}},
 CellLabel->
  "In[715]:=",ExpressionUUID->"790d316e-cefd-4057-adb3-6dd7d760e74d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "255", "127"},
     {"127", "127", "0"},
     {"63", "63", "63"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4746399277044315`*^9, 3.474639974230156*^9, 3.474734884970397*^9, 
   3.474802019836407*^9, 3.474803729085888*^9, 3.4748037750696974`*^9, 
   3.474805431879368*^9, 3.4748056545451107`*^9, {3.4748075990493813`*^9, 
   3.4748076184745655`*^9}, 3.474808263343856*^9, 3.4748083145768*^9, 
   3.47480979472605*^9, 3.474814136453946*^9, 3.4748145212712812`*^9, 
   3.4748145975319676`*^9, {3.4748152032860594`*^9, 3.4748152285180445`*^9}, 
   3.4748208477623167`*^9, 3.474821533010025*^9, {3.4748295870073185`*^9, 
   3.4748296350297327`*^9}, 3.474830357784252*^9, 3.4748304683336143`*^9, 
   3.474830564728788*^9, 3.4748321306985283`*^9, 3.474901282008749*^9, 
   3.4749016032229376`*^9, 3.474912024672863*^9, 3.4749164451076946`*^9, 
   3.4749170116601667`*^9, 3.474974195163914*^9, 3.4749784940809727`*^9, 
   3.4749872415054793`*^9, 3.474988196284562*^9, 3.4749990167106943`*^9, 
   3.474999471617234*^9, 3.474999689715622*^9, 3.4750007799063826`*^9, 
   3.4750014450168*^9, 3.475002656447854*^9, 3.525011722790449*^9, 
   3.8115220900479717`*^9, 3.811522221267497*^9, 3.81152236493401*^9, 
   3.81152258596841*^9, 3.8115227378441133`*^9, 3.8115232331260233`*^9},
 CellLabel->
  "Out[715]//MatrixForm=",ExpressionUUID->"a0a6eeb2-61fb-4974-9746-\
0e96817ccf3a"]
}, Open  ]],

Cell[TextData[{
 "As expected, there are only four unique triples since there are only four \
unique colors in the image. So, such a ",
 StyleBox["findUniqueRows()", "Code"],
 " function might be written as:"
}], "Item1Paragraph",
 CellChangeTimes->{{3.4746384479659758`*^9, 3.4746384925620317`*^9}, {
  3.474638524998365*^9, 3.4746386454655643`*^9}, {3.4746386802553387`*^9, 
  3.4746387280678563`*^9}, {3.4746390961118426`*^9, 3.4746391355133877`*^9}, {
  3.4746392394947023`*^9, 3.474639330185525*^9}, {3.4746399975945344`*^9, 
  3.4746400290021315`*^9}, {3.4746400761994247`*^9, 3.474640076808523*^9}, {
  3.474651327886855*^9, 
  3.4746513646463623`*^9}},ExpressionUUID->"edbe7622-0ab9-4e9f-a979-\
42fc49c7edb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findUniqueRows", "[", "img_", "]"}], " ", ":=", " ", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"255", "-", 
      RowBox[{"ImageData", "[", 
       RowBox[{"img", ",", " ", "\"\<Byte\>\""}], "]"}]}], ",", "1"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.4746390905991125`*^9, {3.4746391254245763`*^9, 3.4746391302034373`*^9}, {
   3.4746400325786304`*^9, 3.4746400351087303`*^9}, {3.474640071279786*^9, 
   3.474640072091917*^9}, 3.474830461701277*^9, {3.4748305554591208`*^9, 
   3.4748305565983224`*^9}},
 CellLabel->
  "In[716]:=",ExpressionUUID->"34d65b76-b33b-40e3-a0c4-5ec6c1b0c0be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"findUniqueRows", "[", "smlImg", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.474640062408819*^9, 3.4746400915986743`*^9}},
 CellLabel->
  "In[717]:=",ExpressionUUID->"5be19611-674a-4030-a4db-7f852fc05103"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "255", "127"},
     {"127", "127", "0"},
     {"63", "63", "63"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4746407419825935`*^9, 3.4747348850172205`*^9, 3.4748020198829803`*^9, 
   3.474803729117095*^9, 3.4748037751009045`*^9, 3.474805431910591*^9, 
   3.474805654576333*^9, {3.4748075990806117`*^9, 3.474807618521411*^9}, 
   3.474808263390715*^9, 3.4748083146080394`*^9, 3.4748097947729115`*^9, 
   3.4748141364851904`*^9, 3.474814521302523*^9, 3.47481459757883*^9, {
   3.474815203317326*^9, 3.4748152285493107`*^9}, 3.4748208477935658`*^9, 
   3.474821533041273*^9, {3.4748295870539722`*^9, 3.4748296350763865`*^9}, 
   3.474830357815463*^9, 3.4748304683648252`*^9, 3.4748305647756042`*^9, 
   3.474832130729744*^9, 3.474901282040001*^9, 3.4749016032541685`*^9, 
   3.4749120247041054`*^9, 3.4749164451389403`*^9, 3.4749170116914124`*^9, 
   3.4749741952576227`*^9, 3.474978494112211*^9, 3.474987241536666*^9, 
   3.4749882017775717`*^9, 3.474999016741929*^9, 3.474999471648469*^9, 
   3.4749996897468567`*^9, 3.475000779937664*^9, 3.475001445048071*^9, 
   3.4750026564791236`*^9, 3.5250117228372493`*^9, 3.81152209007934*^9, 
   3.811522221295927*^9, 3.811522364944682*^9, 3.811522586000422*^9, 
   3.81152273788135*^9, 3.811523233155685*^9},
 CellLabel->
  "Out[717]//MatrixForm=",ExpressionUUID->"3fdbe083-00fc-49c6-8654-\
b65a5e0ce81a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["unique()", "Subsubsection",
 CellChangeTimes->{{3.4746406599989467`*^9, 3.474640677962183*^9}, {
  3.4746414934438095`*^9, 
  3.4746414934438095`*^9}},ExpressionUUID->"668af8e1-10ed-41e8-8e9b-\
cf5ac7da32a3"],

Cell[TextData[{
 "This function is used to find the unique items in a collection. It has \
several options and several outputs. From the MATLAB web page at ",
 ButtonBox["http://www.mathworks.com/access/helpdesk/help/techdoc/ref/unique.\
html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.mathworks.com/access/helpdesk/help/techdoc/ref/unique.\
html"], None},
  ButtonNote->
   "http://www.mathworks.com/access/helpdesk/help/techdoc/ref/unique.html"],
 " (edited to use less space):"
}], "Item1Paragraph",
 CellChangeTimes->{{3.4746407069003468`*^9, 3.4746407074631634`*^9}, {
  3.4746517355846276`*^9, 3.474651775078055*^9}, {3.474651873249216*^9, 
  3.4746519628905478`*^9}, {3.4746526938157763`*^9, 
  3.474652696565319*^9}},ExpressionUUID->"353e9ec4-4b46-4e03-9b4f-\
a71ed8072645"],

Cell[TextData[{
 StyleBox["b = unique(A)\nb = unique(A, 'rows')\n[b, m, n] = unique(...)\n[b, \
m, n] = unique(..., occurrence)\n\n", "Program"],
 StyleBox["Description", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\nb = unique(A) ", "Program"],
 StyleBox["returns the same values as in A but with no repetitions. A can be \
a numeric or character array or a cell array of strings. If A is a vector or \
an array, b is a vector of unique values from A. If A is a cell array of \
strings, b is a cell vector of unique strings from A. The resulting vector b \
is sorted in ascending order and its elements are of the same class as A.", 
  "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\nb = unique(A, 'rows') ", "Program"],
 StyleBox["returns the unique rows of A.", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\n[b, m, n] = unique(...) ", "Program"],
 StyleBox["also returns index vectors m and n such that b = A(m) and A = \
b(n). Each element of m is the greatest subscript such that b = A(m). For row \
combinations, b = A(m,:) and A = b(n,:).", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\n[b, m, n] = unique(..., occurrence)", "Program"],
 StyleBox[", where occurrence can be", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\n  ", "Program"],
 StyleBox["* 'first', which returns the vector m to index the first \
occurrence of each unique value in A, or\n    * 'last', which returns the \
vector m to index the last occurrence.\n\nIf you do not specify occurrence, \
it defaults to 'last'.\n\nYou can specify 'rows' in the same command as \
'first' or 'last'. The order of appearance in the argument list is not \
important.\nExamples", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\nA = [1 1 5 6 2 3 3 9 8 6 2 4] \nA = 1   1   5   6   2   3   3  \
 9   8   6   2   4\n\n", "Program"],
 StyleBox["Get a sorted vector of unique elements of A. Also get indices of \
the first elements in A that make up vector b, and the first elements in b \
that make up vector A:", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\n[b1, m1, n1] = unique(A, 'first') \nb1 = 1   2   3   4   5   6 \
  8   9 \nm1 = 1   5   6  12   3   4   9   8 \nn1 = 1   1   5   6   2   3   3 \
  8   7   6   2   4\n\n", "Program"],
 StyleBox["Verify that b1 = A(m1) and A = b1(n1):", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\nall(b1 == A(m1)) && all(A == b1(n1)) \nans = 1\n\n", "Program"],
 StyleBox["Get a sorted vector of unique elements of A. Also get indices of \
the last elements in A that make up vector b, and the last elements in b that \
make up vector A:", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\n[b2, m2, n2] = unique(A, 'last') \nb2 = 1   2   3   4   5   6  \
 8   9 \nm2 = 2  11   7  12   3  10   9   8 \nn2 = 1   1   5   6   2   3   3  \
 8   7   6   2   4\n\n", "Program"],
 StyleBox["Verify that b2 = A(m2) and A = b2(n2):", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\nall(b2 == A(m2)) && all(A == b2(n2)) \nans = 1\n\n", "Program"],
 StyleBox["Because NaNs are not equal to each other, unique treats them as \
unique elements.", "Program",
  FontFamily->"Constantia"],
 StyleBox["\n\nunique([1 1 NaN NaN]) \nans = 1 NaN NaN", "Program"]
}], "Program",
 CellChangeTimes->{{3.4746407069003468`*^9, 3.4746407074631634`*^9}, {
  3.4746517355846276`*^9, 3.474651775078055*^9}, {3.474651873249216*^9, 
  3.4746519315832577`*^9}, {3.4746519888081093`*^9, 3.4746520902912197`*^9}, {
  3.474652220472679*^9, 
  3.474652222972263*^9}},ExpressionUUID->"ae361b7a-d9d7-48fc-bb7a-\
a1525f112837"],

Cell[CellGroupData[{

Cell[TextData[{
 "In the MATLAB code, the ",
 StyleBox["unique()", "Code",
  FontFamily->"Consolas",
  FontWeight->"Plain"],
 " function is used to generate a set of indices that map from the image \
pixels to the unmixed image ",
 StyleBox["via",
  FontSlant->"Italic"],
 " the H matrix."
}], "Item1Paragraph",
 CellChangeTimes->{{3.4743722261655645`*^9, 3.47437224418511*^9}, {
  3.4743722899138083`*^9, 3.4743723296724577`*^9}, {3.474372435881908*^9, 
  3.474372483716155*^9}, {3.4743728194441547`*^9, 3.4743728740273924`*^9}, {
  3.474377118020821*^9, 
  3.474377118020821*^9}},ExpressionUUID->"ef9522e8-ef50-487e-ab85-\
fa2986842a0f"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not have a function built in that provides identical functionality. \
However, such a function can be constructed easily. (This implementation \
comes from \"Timo\" in answer to a question on Stack Overflow at ",
 ButtonBox["http://stackoverflow.com/questions/2203737/does-mathematica-have-\
a-function-equivalent-to-matlabs-unique-function",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://stackoverflow.com/questions/2203737/does-mathematica-have-a-\
function-equivalent-to-matlabs-unique-function"], None},
  ButtonNote->
   "http://stackoverflow.com/questions/2203737/does-mathematica-have-a-\
function-equivalent-to-matlabs-unique-function"],
 "."
}], "Item1Paragraph",
 CellChangeTimes->{{3.4743722261655645`*^9, 3.47437224418511*^9}, {
  3.4743722899138083`*^9, 3.4743723296724577`*^9}, {3.474372435881908*^9, 
  3.474372483716155*^9}, {3.4743728194441547`*^9, 3.4743728740273924`*^9}, {
  3.474377118020821*^9, 3.474377120911354*^9}, {3.474652722232922*^9, 
  3.474652730403437*^9}},ExpressionUUID->"720ede05-0f65-40f2-be2b-\
70a24199bfb1"]
}, Open  ]],

Cell["\<\
You can easily build similar functionality yourself with Mathematica's \
Position[]. E.g. given a list of numbers you could do the following:

In[1] := A = {1, 5, 2, 3, 7, 3, 2, 8, 6, 5, 9, 2, 1};
In[2] := {#, Flatten[Position[A, #]]} & /@ Union[A]
Out[2]:= {{1, {1, 13}}, {2, {3, 7, 12}}, {3, {4, 6}}, {5, {2, 10}}, {6, {9}}, \
{7, {5}}, {8, {8}}, {9, {11}}}

to get the list of unique elements and the indices of where they appear in \
the original list. To replicate exactly the functionality of Matlab's \
Unique(), especially for

[b,m,n] = unique(A)

you need

b = Union[A];
m = Last[Position[A, #]] & /@ b // Flatten;
n = Position[b, #] & /@ A // Flatten;

which now provide the desired behavior

In[1] := A[[#]] & /@ m == b
Out[1]:= True

In[2] := b[[#]] & /@ n == A
Out[2]:= True\
\>", "Program",
 CellChangeTimes->{{3.474387108271678*^9, 
  3.4743871129121547`*^9}},ExpressionUUID->"cc547938-3f31-493a-82c0-\
0e0350acb099"],

Cell["\<\
If we need the indices that map between the reduced and original matrix, we \
can define the function: \
\>", "Item1Paragraph",
 CellChangeTimes->{{3.4744085938755827`*^9, 3.4744086273688416`*^9}, {
  3.474408982161265*^9, 3.4744089864980726`*^9}, {3.4744093304318767`*^9, 
  3.474409335782686*^9}, {3.474804292268394*^9, 
  3.4748042951745324`*^9}},ExpressionUUID->"8d705f98-13d1-4f1b-8509-\
5ee88cdb9d8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"uniqueLast", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", " ", "tmp", " ", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tmp", " ", "=", " ", 
        RowBox[{"Union", "[", "a", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"a", ",", " ", "#"}], "]"}], "]"}], " ", "&"}], " ", "/@",
          " ", "tmp"}], " ", "//", "Flatten"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"tmp", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "a"}], " ", "//", "Flatten"}]}], "}"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.474374687168406*^9, 3.4743747398382587`*^9}, {
  3.474374842676222*^9, 3.4743750327413645`*^9}, {3.4743751985578156`*^9, 
  3.474375227102539*^9}, {3.474375283426338*^9, 3.474375306971405*^9}, {
  3.4743755090808554`*^9, 3.474375545155979*^9}, {3.4743755798093452`*^9, 
  3.474375581215479*^9}, {3.4746533569085445`*^9, 3.474653359658087*^9}, {
  3.4746533955271173`*^9, 3.4746533962613697`*^9}, {3.4748038424665117`*^9, 
  3.4748038456587243`*^9}, {3.4748039919215155`*^9, 3.4748040083833165`*^9}, {
  3.4748042421296945`*^9, 3.4748042431452804`*^9}, {3.474804832218279*^9, 
  3.4748048353876977`*^9}, {3.474804974698647*^9, 3.4748049754480467`*^9}, {
  3.474805539161253*^9, 3.4748055402384396`*^9}},
 CellLabel->
  "In[718]:=",ExpressionUUID->"2d3f0b44-b051-4e1f-8919-48d815e482dd"],

Cell["\<\
Reproducing the example from the web page with the 'last' occurrence behavior:\
\>", "Item1Paragraph",
 CellChangeTimes->{{3.474652959459066*^9, 3.4746529852985153`*^9}, {
   3.474659129512944*^9, 3.474659132390686*^9}, 
   3.8115219944086227`*^9},ExpressionUUID->"c2a1e50f-44d6-4227-978a-\
403acca62a46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "5", ",", "6", ",", "2", ",", "3", ",", "3", ",", "9", 
    ",", "8", ",", "6", ",", "2", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4743108248655577`*^9, 3.474310865280056*^9}, 
   3.474387121693124*^9},
 CellLabel->
  "In[719]:=",ExpressionUUID->"5b678bc4-0e06-4447-9c2f-e65f459b7133"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "5", ",", "6", ",", "2", ",", "3", ",", "3", ",", "9", 
   ",", "8", ",", "6", ",", "2", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.474310868973938*^9, 3.474373906050234*^9, 3.474375253819237*^9, 
   3.4743871325834*^9, 3.474633994744502*^9, 3.474652879206797*^9, 
   3.4746530587081733`*^9, 3.474653365750823*^9, 3.4746534013542724`*^9, 
   3.474734885064044*^9, 3.474802019914029*^9, 3.474803729148302*^9, 
   3.4748037751321115`*^9, 3.4748038522622223`*^9, 3.4748040137193184`*^9, 
   3.4748042535042577`*^9, 3.474804842304212*^9, 3.474804990732684*^9, 
   3.474805431941814*^9, 3.47480555083858*^9, 3.4748056546075563`*^9, {
   3.474807599111842*^9, 3.474807618552641*^9}, 3.474808263421955*^9, 
   3.474808314639279*^9, 3.4748097948041525`*^9, 3.474814136532057*^9, 
   3.4748145213337655`*^9, 3.474814597610071*^9, {3.4748152033485923`*^9, 
   3.474815228580577*^9}, 3.474820847824815*^9, 3.474821533072521*^9, {
   3.474829587085075*^9, 3.474829635107489*^9}, 3.4748303578466744`*^9, 
   3.474830468396036*^9, 3.474830564806815*^9, 3.4748321307609606`*^9, 
   3.474901282071253*^9, 3.4749016032853994`*^9, 3.4749120247353473`*^9, 
   3.474916445170186*^9, 3.474917011722658*^9, 3.474974195288859*^9, 
   3.4749784941590695`*^9, 3.4749872415678525`*^9, 3.4749882247668343`*^9, 
   3.4749990167731643`*^9, 3.474999471679704*^9, 3.4749996897937093`*^9, 
   3.4750007799845853`*^9, 3.475001445079342*^9, 3.475002656510393*^9, 
   3.5250117228840494`*^9, 3.811522090106176*^9, 3.8115222213125763`*^9, 
   3.8115223649813833`*^9, 3.81152258603297*^9, 3.811522737918972*^9, 
   3.811523233185617*^9},
 CellLabel->
  "Out[719]=",ExpressionUUID->"7d555dc7-00b0-4585-b0af-4c986c595ad8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"b", ",", " ", "m", ",", " ", "n"}], "}"}], " ", "=", 
  RowBox[{"uniqueLast", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.474375109235979*^9, 3.474375112470126*^9}, {
  3.4743753383283715`*^9, 3.4743753462808857`*^9}, {3.474653043773159*^9, 
  3.474653045694714*^9}, {3.4746531348986177`*^9, 3.474653136304634*^9}, {
  3.4748042468013897`*^9, 3.4748042479107227`*^9}},
 CellLabel->
  "In[720]:=",ExpressionUUID->"fe6e1422-ea24-41d7-9445-b41b2f237d2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "8", ",", 
     "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "11", ",", "7", ",", "12", ",", "3", ",", "10", ",", "9", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "5", ",", "6", ",", "2", ",", "3", ",", "3", ",", "8",
      ",", "7", ",", "6", ",", "2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.474375113563799*^9, {3.4743752390547466`*^9, 3.474375258615744*^9}, {
   3.4743752910507526`*^9, 3.4743753119241495`*^9}, 3.4743753473276806`*^9, {
   3.474375521657934*^9, 3.4743755503274236`*^9}, 3.47437558552762*^9, 
   3.4743871383175917`*^9, 3.4746339947757254`*^9, 3.474652882518746*^9, 
   3.4746530618482757`*^9, 3.474653137679405*^9, 3.474653367234951*^9, 
   3.4746534030258694`*^9, 3.474734885079652*^9, 3.474802019929553*^9, 
   3.474803729163906*^9, 3.4748037751633186`*^9, 3.4748038546876783`*^9, 
   3.4748040151589437`*^9, 3.474804254566717*^9, 3.474804846488469*^9, 
   3.474804992403222*^9, 3.4748054319730372`*^9, 3.474805551853321*^9, 
   3.4748056546231675`*^9, {3.474807599143072*^9, 3.474807618583872*^9}, 
   3.4748082634375744`*^9, 3.474808314670519*^9, 3.474809794835394*^9, 
   3.474814136563301*^9, 3.4748145213650074`*^9, 3.4748145976413126`*^9, {
   3.474815203379859*^9, 3.4748152285962105`*^9}, 3.474820847856064*^9, 
   3.4748215331037693`*^9, {3.474829587116177*^9, 3.474829635138592*^9}, 
   3.4748303578778853`*^9, 3.474830468427247*^9, 3.474830564838026*^9, 
   3.4748321307765684`*^9, 3.4749012821025047`*^9, 3.474901603316631*^9, 
   3.474912024766589*^9, 3.474916445201432*^9, 3.4749170117539043`*^9, 
   3.474974195320095*^9, 3.4749784941903086`*^9, 3.474987241583446*^9, 
   3.474988225924905*^9, 3.4749990168043995`*^9, 3.4749994716953216`*^9, 
   3.474999689809327*^9, 3.4750007800158663`*^9, 3.4750014450949774`*^9, 
   3.4750026565416627`*^9, 3.5250117229308496`*^9, 3.811522090112668*^9, 
   3.811522221319035*^9, 3.811522364987685*^9, 3.811522586061739*^9, 
   3.8115227379255037`*^9, 3.811523233192409*^9},
 CellLabel->
  "Out[720]=",ExpressionUUID->"b092def5-6eff-43d6-a234-1bdd4f779825"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{3.474375363467066*^9},
 CellLabel->
  "In[721]:=",ExpressionUUID->"8b2d46a4-5d05-4b5b-95f3-5bb18e9102b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "8", ",", "9"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.4743755337350545`*^9, 3.4743755882930145`*^9, 3.474387140551895*^9, 
   3.4746339948069487`*^9, 3.4746528861275206`*^9, 3.4746534045412416`*^9, 
   3.4747348851108675`*^9, 3.474802019960602*^9, 3.474803729195113*^9, 
   3.4748037751945257`*^9, 3.4748038561742477`*^9, 3.474804016723754*^9, 
   3.4748042557229223`*^9, 3.4748048481902757`*^9, 3.474804993933247*^9, 
   3.47480543200426*^9, 3.4748055538984146`*^9, 3.4748056546543903`*^9, {
   3.474807599174302*^9, 3.474807618615102*^9}, 3.474808263468814*^9, 
   3.474808314686138*^9, 3.4748097948666344`*^9, 3.4748141365789237`*^9, 
   3.47481452139625*^9, 3.4748145976569333`*^9, {3.474815203411125*^9, 
   3.4748152286274767`*^9}, 3.474820847887313*^9, 3.4748215331350174`*^9, {
   3.4748295871472797`*^9, 3.4748296351541433`*^9}, 3.4748303579090967`*^9, 
   3.4748304684584584`*^9, 3.4748305648692374`*^9, 3.4748321308077846`*^9, 
   3.4749012821337566`*^9, 3.4749016033478613`*^9, 3.4749120247978315`*^9, 
   3.4749164452170553`*^9, 3.4749170117695274`*^9, 3.4749741953357134`*^9, 
   3.474978494221547*^9, 3.4749872416146326`*^9, 3.474988227442916*^9, 
   3.474999016835634*^9, 3.474999471726557*^9, 3.474999689840562*^9, 
   3.4750007800315065`*^9, 3.4750014451262484`*^9, 3.4750026565572977`*^9, 
   3.5250117229620495`*^9, 3.811522090135419*^9, 3.811522221351079*^9, 
   3.811522364994575*^9, 3.8115225860686197`*^9, 3.811522737957473*^9, 
   3.811523233198406*^9},
 CellLabel->
  "Out[721]=",ExpressionUUID->"15ad251c-9c69-4eef-9fa3-ea42f795aea6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["m"], "Input",
 CellChangeTimes->{3.474375402885913*^9},
 CellLabel->
  "In[722]:=",ExpressionUUID->"84cf5149-874a-4913-998b-37666becae60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "11", ",", "7", ",", "12", ",", "3", ",", "10", ",", "9", ",", 
   "8"}], "}"}]], "Output",
 CellChangeTimes->{
  3.474375405073245*^9, 3.4743755936831913`*^9, 3.4743871415674877`*^9, 
   3.47463399482256*^9, 3.4746528875804033`*^9, 3.4746534057597895`*^9, 
   3.4747348851264753`*^9, 3.4748020199761257`*^9, 3.4748037292263203`*^9, 
   3.4748037752101297`*^9, 3.4748038572696147`*^9, 3.4748040180851383`*^9, 
   3.474804256832255*^9, 3.4748048500013723`*^9, 3.4748049952290845`*^9, 
   3.4748054320198717`*^9, 3.4748055551317153`*^9, 3.4748056546700015`*^9, {
   3.474807599205532*^9, 3.474807618646332*^9}, 3.474808263500054*^9, 
   3.4748083147173777`*^9, 3.474809794897876*^9, 3.474814136610168*^9, 
   3.474814521427492*^9, 3.4748145976881742`*^9, {3.4748152034267583`*^9, 
   3.474815228658743*^9}, 3.474820847902937*^9, 3.474821533166266*^9, {
   3.4748295871628313`*^9, 3.4748296351852455`*^9}, 3.4748303579247017`*^9, 
   3.474830468474064*^9, 3.474830564884843*^9, 3.474832130823393*^9, 
   3.4749012821493826`*^9, 3.4749016033790927`*^9, 3.4749120248134522`*^9, 
   3.4749164452483015`*^9, 3.474917011800773*^9, 3.4749741953669496`*^9, 
   3.4749784942527857`*^9, 3.474987241645819*^9, 3.474988228491439*^9, 
   3.474999016866869*^9, 3.4749994717577915`*^9, 3.4749996898717966`*^9, 
   3.475000780062788*^9, 3.475001445141884*^9, 3.4750026565885673`*^9, 
   3.5250117230088496`*^9, 3.8115220901421003`*^9, 3.811522221357462*^9, 
   3.81152236502698*^9, 3.811522586096491*^9, 3.811522737964367*^9, 
   3.811523233204681*^9},
 CellLabel->
  "Out[722]=",ExpressionUUID->"0edba5d4-d0f6-4ff1-92b3-3a8b9d034e4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["n"], "Input",
 CellChangeTimes->{3.474375410682189*^9},
 CellLabel->
  "In[723]:=",ExpressionUUID->"ff4cab8b-e240-4b96-b4b3-b3a94ad487e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "5", ",", "6", ",", "2", ",", "3", ",", "3", ",", "8", 
   ",", "7", ",", "6", ",", "2", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.474375416259886*^9, 3.474375594886216*^9, 3.4743871428330717`*^9, 
   3.4746339948537827`*^9, 3.4746528890176644`*^9, 3.4746534068533573`*^9, 
   3.474734885157691*^9, 3.4748020199916506`*^9, 3.4748037292419243`*^9, 
   3.474803775241337*^9, 3.4748038586779437`*^9, 3.4748040192430973`*^9, 
   3.474804258019709*^9, 3.474804851718791*^9, 3.474804996774722*^9, 
   3.474805432051095*^9, 3.474805556380627*^9, 3.4748056547012243`*^9, {
   3.4748075992211475`*^9, 3.4748076186775618`*^9}, 3.4748082635312934`*^9, 
   3.4748083147486176`*^9, 3.4748097949291162`*^9, 3.4748141366414127`*^9, 
   3.4748145214431133`*^9, 3.4748145977194157`*^9, {3.474815203458025*^9, 
   3.4748152286743765`*^9}, 3.474820847934186*^9, 3.47482153318189*^9, {
   3.4748295871939335`*^9, 3.474829635216348*^9}, 3.4748303579559126`*^9, 
   3.474830468505275*^9, 3.474830564916054*^9, 3.4748321308546085`*^9, 
   3.474901282180634*^9, 3.4749016034103236`*^9, 3.474912024844694*^9, 
   3.4749164452639246`*^9, 3.474917011832019*^9, 3.4749741953825674`*^9, 
   3.474978494268405*^9, 3.4749872416614122`*^9, 3.474988229508663*^9, 
   3.474999016898104*^9, 3.4749994717890267`*^9, 3.4749996899030313`*^9, 
   3.4750007800940685`*^9, 3.4750014451731553`*^9, 3.475002656619837*^9, 
   3.5250117230868497`*^9, 3.8115220901481657`*^9, 3.811522221388113*^9, 
   3.8115223650337687`*^9, 3.811522586104031*^9, 3.81152273799543*^9, 
   3.811523233228632*^9},
 CellLabel->
  "Out[723]=",ExpressionUUID->"3299e251-b408-46a1-8ceb-725e4498fca6"]
}, Open  ]],

Cell["\<\
Verify that the mappings are correct. Use the second index to map from the \
reduced array back to the original array.\
\>", "Text",
 CellChangeTimes->{{3.4748042211929984`*^9, 3.474804230505141*^9}, {
  3.4748048962770596`*^9, 
  3.4748049141689844`*^9}},ExpressionUUID->"73d868eb-7ddc-4649-a9ac-\
a2c1c5eedf1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", 
    RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
  "n"}]], "Input",
 CellChangeTimes->{{3.474804129890813*^9, 3.4748041471645913`*^9}},
 CellLabel->
  "In[724]:=",ExpressionUUID->"c587e611-8586-40c8-a87b-671683371823"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "5", ",", "6", ",", "2", ",", "3", ",", "3", ",", "9", 
   ",", "8", ",", "6", ",", "2", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4748041497738657`*^9, 3.474804261019594*^9, 3.4748048556376286`*^9, 
   3.4748050025981846`*^9, 3.4748054320823183`*^9, 3.474805562141234*^9, 
   3.474805654716836*^9, {3.4748075992523775`*^9, 3.4748076187087927`*^9}, 
   3.474808263562533*^9, 3.474808314779857*^9, 3.4748097949603577`*^9, 
   3.474814136672657*^9, 3.474814521474355*^9, 3.474814597750657*^9, {
   3.474815203489291*^9, 3.4748152287056427`*^9}, 3.474820847965435*^9, 
   3.474821533213138*^9, {3.4748295872250366`*^9, 3.474829635247451*^9}, 
   3.474830357987124*^9, 3.4748304685364857`*^9, 3.4748305649472647`*^9, 
   3.4748321308702173`*^9, 3.474901282211886*^9, 3.474901603441555*^9, 
   3.4749120248759365`*^9, 3.4749164452951703`*^9, 3.4749170118476424`*^9, 
   3.474974195413804*^9, 3.474978494299644*^9, 3.4749872416925993`*^9, 
   3.4749882329359255`*^9, 3.4749990169137216`*^9, 3.474999471820262*^9, 
   3.474999689934267*^9, 3.47500078012535*^9, 3.475001445204426*^9, 
   3.4750026566354713`*^9, 3.5250117231180496`*^9, 3.811522090154273*^9, 
   3.811522221394601*^9, 3.811522365039831*^9, 3.811522586132841*^9, 
   3.811522738002111*^9, 3.811523233235689*^9},
 CellLabel->
  "Out[724]=",ExpressionUUID->"b92109b1-d2f0-4072-bd0e-8cc3568da976"]
}, Open  ]],

Cell["\<\
Use the first index to map from the original array to the reduced array.\
\>", "Text",
 CellChangeTimes->{{3.474804917915984*^9, 
  3.4748049344964595`*^9}},ExpressionUUID->"824c92c5-c20b-4d3c-9242-\
8afafce78271"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "m"}]], "Input",
 CellChangeTimes->{{3.474804174851028*^9, 3.4748041969439297`*^9}},
 CellLabel->
  "In[725]:=",ExpressionUUID->"36f697e3-41b6-46c7-b5cd-757e1f67c665"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "8", ",", "9"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.474804188288012*^9, 3.4748042007562833`*^9}, 
   3.4748042623007946`*^9, 3.474804859525234*^9, 3.474805006641822*^9, 
   3.4748054321135416`*^9, 3.474805564966897*^9, 3.474805654748059*^9, {
   3.474807599283608*^9, 3.4748076187400227`*^9}, 3.4748082635781527`*^9, 
   3.474808314811097*^9, 3.4748097949915986`*^9, 3.4748141367039013`*^9, 
   3.4748145215055976`*^9, 3.4748145977818985`*^9, {3.4748152035205574`*^9, 
   3.474815228736909*^9}, 3.474820847996684*^9, 3.4748215332443867`*^9, {
   3.474829587256139*^9, 3.4748296352785535`*^9}, 3.474830358018335*^9, 
   3.4748304685520916`*^9, 3.474830564978476*^9, 3.474832130885825*^9, 
   3.4749012822431374`*^9, 3.474901603472786*^9, 3.474912024907178*^9, 
   3.4749164453264165`*^9, 3.474917011878888*^9, 3.474974195429422*^9, 
   3.474978494330883*^9, 3.4749872417237854`*^9, 3.4749882359719477`*^9, 
   3.474999016944957*^9, 3.4749994718358793`*^9, 3.474999689965502*^9, 
   3.4750007801409903`*^9, 3.4750014452200613`*^9, 3.4750026566667414`*^9, 
   3.52501172316485*^9, 3.811522090176484*^9, 3.81152222140051*^9, 
   3.8115223650461493`*^9, 3.811522586141262*^9, 3.811522738041758*^9, 
   3.811523233260344*^9},
 CellLabel->
  "Out[725]=",ExpressionUUID->"77dc4922-4d9e-42e0-9e14-fdb312802908"]
}, Open  ]],

Cell[TextData[{
 "Note the use of the ",
 StyleBox["Union[]", "Code"],
 " function. This sorts the results, which may not be needed and can take \
substantially longer.  An alternative for this application could use the ",
 StyleBox["DeleteDuplicates[]", "Code"],
 " function to perform a similar task without sorting. For this application, \
it could also be advantageous to simply pass the image into the function. ",
 StyleBox["THIS STILL DOESN'T LOOK RIGHT! WHY SUBTRACT EACH PIXEL FROM 255?",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.474659152878955*^9, 3.4746592943262105`*^9}, {
  3.474659391196813*^9, 3.474659400480261*^9}, {3.4748050423476095`*^9, 
  3.4748050551498594`*^9}},ExpressionUUID->"153aa176-1a7e-4476-9c0d-\
d4733e68aba3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"uniqueImgRows", "[", "img_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"data", ",", "tmp"}], " ", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"data", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"255", "-", 
            RowBox[{"ImageData", "[", 
             RowBox[{"img", ",", " ", "\"\<Byte\>\""}], "]"}]}], ",", "1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", "data", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"data", ",", " ", "#"}], "]"}], "]"}], " ", "&"}], " ", "/@",
          " ", "tmp"}], " ", "//", "Flatten"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"tmp", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "data"}], " ", "//", "Flatten"}]}], "}"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.474408689815751*^9, {3.4744087737916985`*^9, 3.4744088837094917`*^9}, {
   3.4744091157910995`*^9, 3.4744091163683004`*^9}, {3.4744091641043844`*^9, 
   3.4744092261612935`*^9}, {3.4746593400597067`*^9, 3.474659342044552*^9}, {
   3.4748037224699616`*^9, 3.4748037233437634`*^9}, {3.474803765177015*^9, 
   3.4748037683289423`*^9}, {3.4748051159137096`*^9, 3.4748051342896223`*^9}, 
   3.474805276059988*^9, {3.474805307314411*^9, 3.47480533482205*^9}, {
   3.474805527218532*^9, 3.4748055278898225`*^9}, {3.4748057617954073`*^9, 
   3.474805766275851*^9}, {3.474806023318104*^9, 3.4748060310778227`*^9}, {
   3.474806123724165*^9, 3.4748061440875483`*^9}, {3.474808256143128*^9, 
   3.474808256846019*^9}, {3.474808300425261*^9, 3.4748083089849114`*^9}, {
   3.4748144995267096`*^9, 3.4748145004171124`*^9}, {3.4748145808959217`*^9, 
   3.4748145821611986`*^9}, 3.474830353086997*^9, {3.474830541445382*^9, 
   3.4748305428810883`*^9}},
 CellLabel->
  "In[726]:=",ExpressionUUID->"5d303f66-a5ea-4fb0-b0c1-d8724b9d6709"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"b", ",", " ", "m", ",", " ", "n"}], "}"}], " ", "=", " ", 
  RowBox[{"uniqueImgRows", "[", "smlImg", "]"}]}]], "Input",
 CellChangeTimes->{{3.4744089010411224`*^9, 3.4744089211807575`*^9}, {
  3.474409397761595*^9, 3.4744094378692656`*^9}, {3.474805138536222*^9, 
  3.4748051438132467`*^9}, {3.4748057242500114`*^9, 3.474805751179676*^9}},
 CellLabel->
  "In[727]:=",ExpressionUUID->"f7f842af-a085-4f12-9042-8806c4d6a2ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "255", ",", "127"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"127", ",", "127", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "63", ",", "63"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"295", ",", "301", ",", "304", ",", "182"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
     ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", 
     ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "4", ",", "4", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "4", ",", "4", ",", "4", ",", "4", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "4", ",", "4", 
     ",", "4", ",", "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
     ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "4", ",", "4", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", 
     ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
     ",", "3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4744089228655605`*^9, 3.4744091212667093`*^9, {3.4744092020904512`*^9, 
   3.474409230872502*^9}, {3.4744094034712048`*^9, 3.474409438836467*^9}, 
   3.4746339943073807`*^9, 3.4746534096966343`*^9, 3.4746593490305805`*^9, 
   3.474734885204514*^9, 3.4748020200537477`*^9, 3.474803729288735*^9, 
   3.474803775272544*^9, {3.4748051454837847`*^9, 3.474805150589072*^9}, 
   3.4748052816801643`*^9, 3.474805341316476*^9, 3.474805432175988*^9, 
   3.4748055780024166`*^9, 3.4748056547792816`*^9, {3.4748057311814733`*^9, 
   3.474805775580186*^9}, 3.474806043195525*^9, 3.4748061514553623`*^9, {
   3.474807599314838*^9, 3.4748076187712526`*^9}, 3.4748082636250124`*^9, 
   3.4748083148423367`*^9, 3.47480979503846*^9, 3.4748141367351456`*^9, {
   3.4748145129764767`*^9, 3.4748145215368395`*^9}, {3.4748145861913395`*^9, 
   3.474814597828761*^9}, {3.474815203551824*^9, 3.4748152287681756`*^9}, 
   3.474820848027933*^9, 3.474821533275635*^9, {3.4748295873027925`*^9, 
   3.474829635325207*^9}, 3.4748303580495462`*^9, 3.4748304685833025`*^9, 
   3.4748305650096865`*^9, 3.4748321309170413`*^9, 3.4749012822743893`*^9, 
   3.474901603504017*^9, 3.4749120249384203`*^9, 3.474916445357662*^9, 
   3.4749170119101343`*^9, 3.4749741954918947`*^9, 3.474978494377741*^9, 
   3.4749872417549725`*^9, {3.4749881452199173`*^9, 3.474988155423457*^9}, 
   3.4749882441566887`*^9, 3.4749990169761915`*^9, 3.4749994718827314`*^9, 
   3.4749996899967365`*^9, 3.475000780187912*^9, 3.4750014452513323`*^9, 
   3.4750026566980104`*^9, 3.52501172321165*^9, 3.811522090210226*^9, 
   3.811522221436418*^9, 3.811522365079534*^9, 3.811522586175967*^9, 
   3.811522738079474*^9, 3.811523233289873*^9},
 CellLabel->
  "Out[727]=",ExpressionUUID->"86226ea5-68fb-47c4-b223-aa857e8c6176"]
}, Open  ]],

Cell["\<\
Again, verify that the original image data can be recovered from the reduced \
rows and second index.\
\>", "Text",
 CellChangeTimes->{{3.4744089511328106`*^9, 3.4744089769040556`*^9}, {
  3.4744093835499697`*^9, 3.4744093835499697`*^9}, {3.474805162922723*^9, 
  3.474805189837121*^9}},ExpressionUUID->"a4670671-8d3b-4507-8ccb-\
7c426c0e9d78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", 
     RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", "n"}], " ", 
  "\[Equal]", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"255", "-", 
     RowBox[{"ImageData", "[", 
      RowBox[{"smlImg", ",", " ", "\"\<Byte\>\""}], "]"}]}], ",", " ", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.47480520885205*^9, 3.4748052689254866`*^9}, 
   3.4748053608621993`*^9, {3.4748056184047194`*^9, 3.4748056396518345`*^9}, {
   3.4748057893805747`*^9, 3.474805791347598*^9}, 3.4748145074778495`*^9, {
   3.474814590268342*^9, 3.474814591471136*^9}},
 CellLabel->
  "In[728]:=",ExpressionUUID->"de33b0f3-dd24-416b-8346-561301f04f41"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.474805642305773*^9, 3.4748056548105044`*^9}, {
   3.474805778983449*^9, 3.4748057951099215`*^9}, {3.4748075993460684`*^9, 
   3.4748076188024826`*^9}, 3.474808263656252*^9, 3.474808314873576*^9, 
   3.4748097952102857`*^9, 3.47481413676639*^9, {3.474814508883749*^9, 
   3.474814521568082*^9}, {3.4748145929238615`*^9, 3.4748145978443813`*^9}, {
   3.4748152035830903`*^9, 3.4748152287994423`*^9}, 3.474820848059182*^9, 
   3.474821533306883*^9, {3.4748295873338957`*^9, 3.47482963535631*^9}, 
   3.474830358080757*^9, 3.4748304686145134`*^9, 3.4748305650408983`*^9, 
   3.4748321309326496`*^9, 3.474901282305641*^9, 3.474901603535248*^9, 
   3.474912024969662*^9, 3.4749164453732853`*^9, 3.4749170119413805`*^9, 
   3.474974195507512*^9, 3.47497849440898*^9, 3.4749872417861586`*^9, 
   3.4749882486324744`*^9, 3.4749990170074267`*^9, 3.474999471913967*^9, 
   3.4749996900279713`*^9, 3.4750007802035522`*^9, 3.4750014452826033`*^9, 
   3.4750026567292805`*^9, 3.52501172325845*^9, 3.8115220902258*^9, 
   3.811522221443478*^9, 3.811522365117457*^9, 3.811522586205062*^9, 
   3.8115227380866547`*^9, 3.8115232332976637`*^9},
 CellLabel->
  "Out[728]=",ExpressionUUID->"891a042a-2e56-4ec4-82f0-739e7cb2588f"]
}, Open  ]],

Cell["\<\
Note that these functions do not check that there are actually exactly three \
color channels in the image.\
\>", "Text",
 CellChangeTimes->{{3.4744089511328106`*^9, 3.4744089769040556`*^9}, {
  3.4744093835499697`*^9, 3.4744093835499697`*^9}, {3.474805162922723*^9, 
  3.4748051898215094`*^9}},ExpressionUUID->"5166ee90-4d25-4086-834d-\
6a7530f2c53c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["function processImage(readpath, writepath, params)", "Subsection",
 CellChangeTimes->{{3.4743773886241393`*^9, 3.4743773992177534`*^9}, {
  3.4743774971852493`*^9, 3.4743774972008743`*^9}, {3.474387562382146*^9, 
  3.4743875789284916`*^9}, {3.4743877659537563`*^9, 3.4743877659537563`*^9}, {
  3.474637579462118*^9, 
  3.4746375919620385`*^9}},ExpressionUUID->"0890c8b3-6983-496f-a3ea-\
fee938c34ceb"],

Cell[TextData[{
 "The ",
 StyleBox["processImage()", "Code"],
 " function, included below, loads the file indicated by the ",
 StyleBox["readpath", "Code"],
 " parameter, and calculates the unmixed weight channels, ",
 StyleBox["H", "Code"],
 " in the paper, and writes them to disk in the file indicated by ",
 StyleBox["writepath", "Code"],
 ". The ",
 StyleBox["params", "Code"],
 " parameter contains the color basis matrix ",
 StyleBox["W", "Code"],
 ". The code reshapes the image into three separate one-dimensional arrays, \
eliminating any duplicate rows from the image. The code always does a linear \
unmixing process by calling the ",
 StyleBox["findH()", "Code"],
 " function. (See below.) If ",
 StyleBox["params", "Code"],
 " includes a flag indicating that an unsupervised unmixing is desired, such \
an unmixing is performed by calling the ",
 StyleBox["findWH()", "Code"],
 " function. (See below.) Only one version of the ",
 StyleBox["H", "Code"],
 " matrix is written regardless. The function is also set up to create copies \
of the unmixed images (not just the weights) if a line calling ",
 StyleBox["reconIH()", "Code"],
 " is uncommented, though the unmixed images do not appear to be saved to \
disk anywhere."
}], "Text",
 CellChangeTimes->{{3.4743877666099854`*^9, 3.4743878013120003`*^9}, {
  3.474387854904035*^9, 3.474387880340721*^9}, {3.474388088302816*^9, 
  3.4743885655375443`*^9}},ExpressionUUID->"8bb50e21-0d8b-48f0-9f50-\
da279c3949ce"],

Cell["\<\
function processImage( readpath, writepath, params)
% PROCESSIMAGE( READPATH, WRITEPATH, PARAMS)

% Copyright (C) 2006  Murphy Lab
% Carnegie Mellon University
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published
% by the Free Software Foundation; either version 2 of the License,
% or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
% General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
% 02110-1301, USA.
%
% For additional information visit http://murphylab.web.cmu.edu or
% send email to murphy@cmu.edu


if exist( writepath,'file')
    return
end

prp = writepath;
prp((prp == '/') | (prp == '.')) = '_';
pr = ['tmp/processing_' prp '.txt'];
if ~exist( pr,'file')
    fr = fopen( pr, 'w');
else
    return
end

% Always perform linear unmixing...
I = imread( readpath);
W = params.W;

s = size(I);
[V i j] = unique( 255-reshape( I, [s(1)*s(2) s(3)]), 'rows');
V = unique(V,'rows');

% LIN
H = findH( V, W);

% ...Note images without enough staining
% J = reconIH( I, H, j);
% [c b] = imhist(J(:,:,1));
% [a ind] = max(c);
% J(:,:,1) = J(:,:,1) - b(ind);
% [c b2] = imhist(J(:,:,2));
% [a ind2] = max(c);
% J(:,:,2) = J(:,:,2) - b2(ind2);
% ratio = sum(sum(J(:,:,2))) / sum(sum(J(:,:,1)));
% 
% if ratio<.5
%     imwrite( 0, writepath, 'comment', readpath);
%     fclose(fr);
%     delete(pr);
%     return
% end

if strcmp( params.UMETHOD,'nmf')
    [W,H] = findWH( V, params);
    % J = reconIH( I, H, j);
end

imwrite( H, writepath, 'comment', readpath);

fclose(fr);
delete(pr);

return\
\>", "Program",
 CellChangeTimes->{{3.4743887739683743`*^9, 
  3.4743887759995594`*^9}},ExpressionUUID->"506efbbd-0d61-4170-8bbe-\
75e1479b6c9d"],

Cell["\<\
Note: In the remainder of these notes, when a copy of the MATLAB code is \
included, the copyright notice will not be included for the sake of brevity. \
Those files contain the same copyright as in the file above.\
\>", "Text",
 CellChangeTimes->{{3.4743780461638336`*^9, 3.474378118069623*^9}, {
  3.4743782906622686`*^9, 3.4743782906778936`*^9}, {3.474393371205151*^9, 
  3.474393371220688*^9}},ExpressionUUID->"1f3f129c-910b-44db-b295-\
8c8a126d77e0"],

Cell[TextData[{
 "The default color basis matrix is obtained from the disk file \"",
 StyleBox["Wbasis.mat", "Code"],
 "\"."
}], "Text",
 CellChangeTimes->{{3.474393373069603*^9, 3.474393391527678*^9}, {
  3.474394008685096*^9, 3.474394008685096*^9}, {3.4743948050919943`*^9, 
  3.474394842013985*^9}},ExpressionUUID->"01895980-9203-4516-8440-\
4134daac59bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "wPath", " ", "=", 
   "\"\<~/projects/Color-Deconvolution/Images/Wbasis.mat\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.4743940891225705`*^9, {3.4743941202817707`*^9, 3.4743941317016172`*^9}, {
   3.52501159795903*^9, 3.525011606429845*^9}, {3.8115222514880447`*^9, 
   3.811522282821692*^9}},
 CellLabel->
  "In[729]:=",ExpressionUUID->"321e5713-832a-4d41-883e-fdc0e3405d44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", " ", "=", " ", 
  RowBox[{"Import", "[", "wPath", "]"}]}]], "Input",
 CellChangeTimes->{{3.4743941367805667`*^9, 3.474394151316334*^9}, {
  3.474394243443826*^9, 3.474394247137163*^9}, {3.4743945644409213`*^9, 
  3.4743945823171453`*^9}},
 CellLabel->
  "In[730]:=",ExpressionUUID->"4ef9fead-f1f6-4080-b6ce-edd5542e3f9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"57.10736846923828`", ",", "43.67302703857422`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"56.532249450683594`", ",", "55.59086608886719`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"42.48149871826172`", ",", "64.1858901977539`"}], "}"}]}], "}"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.4743941964660144`*^9, 3.4743942483994427`*^9, {3.474394566279975*^9, 
   3.474394584467903*^9}, 3.4744095678018937`*^9, 3.4744191422873125`*^9, 
   3.474633993979539*^9, 3.4747348852981606`*^9, 3.474802020395282*^9, 
   3.4748037293355455`*^9, 3.474803775319355*^9, 3.4748054323321037`*^9, 
   3.4748056548573384`*^9, {3.474807599392914*^9, 3.4748076188649435`*^9}, 
   3.474808263703111*^9, 3.4748083149204354`*^9, 3.474809795319629*^9, 
   3.474814136828879*^9, 3.4748145216149454`*^9, 3.474814597906864*^9, {
   3.47481520362999*^9, 3.4748152288463416`*^9}, 3.4748208481060553`*^9, 
   3.474821533353755*^9, {3.4748295873805494`*^9, 3.4748296354029636`*^9}, 
   3.4748303581275735`*^9, 3.474830468676935*^9, 3.474830565087714*^9, 
   3.4748321309794736`*^9, 3.474901282383771*^9, 3.474901603613325*^9, 
   3.474912025047767*^9, 3.4749164454514008`*^9, 3.4749170120038724`*^9, 
   3.4749741956636934`*^9, 3.474978494455838*^9, 3.4749872418641253`*^9, 
   3.474988259994084*^9, 3.4749990170698967`*^9, 3.4749994719608192`*^9, 
   3.4749996900748243`*^9, 3.475000780266114*^9, 3.4750014453295097`*^9, 
   3.475002656776185*^9, 3.5250117234300504`*^9, 3.811522090261838*^9, 
   3.811522221470283*^9, 3.811522365152336*^9, 3.811522586219832*^9, 
   3.811522738127284*^9, 3.8115232333309*^9},
 CellLabel->
  "Out[730]=",ExpressionUUID->"bba0919f-2fd4-4af5-881f-5a211acc4102"]
}, Open  ]],

Cell["\<\
These are the default color basis values for Hematoxylin and DAB according to \
the paper. However, for our use, the list is one level too deep. We want\
\>", "Text",
 CellChangeTimes->{{3.4743949207217703`*^9, 3.4743949525789413`*^9}, {
   3.474397076026006*^9, 3.474397247799312*^9}, {3.4743975274462447`*^9, 
   3.4743976387676296`*^9}, {3.474397737116419*^9, 3.4743979262576265`*^9}, {
   3.4743989986023664`*^9, 3.4743990220186563`*^9}, 
   3.475000381353487*^9},ExpressionUUID->"53b606ce-c573-4993-9b26-\
c75cf2d4c3e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "=", 
  RowBox[{"First", "[", "w", "]"}]}]], "Input",
 CellChangeTimes->{{3.474399035151188*^9, 3.4743990600075164`*^9}, {
  3.474419161225746*^9, 3.474419166420555*^9}},
 CellLabel->
  "In[731]:=",ExpressionUUID->"8300e36c-b9fe-4334-9a09-121a66152284"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"57.10736846923828`", ",", "43.67302703857422`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56.532249450683594`", ",", "55.59086608886719`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.48149871826172`", ",", "64.1858901977539`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.474399051492502*^9, 3.474399062026702*^9}, 
   3.4744095706254983`*^9, {3.47441915213093*^9, 3.4744191681989584`*^9}, 
   3.4746339940107617`*^9, 3.474734885329376*^9, 3.4748020204263306`*^9, 
   3.4748037293667526`*^9, 3.474803775350562*^9, 3.4748054323477154`*^9, 
   3.4748056548885612`*^9, {3.474807599424144*^9, 3.4748076188961735`*^9}, 
   3.4748082637343507`*^9, 3.474808314951675*^9, 3.47480979535087*^9, 
   3.4748141368445005`*^9, 3.4748145216461873`*^9, 3.4748145979224854`*^9, {
   3.4748152036612563`*^9, 3.4748152288776083`*^9}, 3.474820848137305*^9, 
   3.474821533385003*^9, {3.474829587411652*^9, 3.4748296354340663`*^9}, 
   3.47483035817439*^9, 3.474830468692541*^9, 3.474830565118925*^9, 
   3.4748321310106897`*^9, 3.474901282399397*^9, 3.474901603644556*^9, 
   3.474912025063388*^9, 3.474916445467023*^9, 3.474917012035118*^9, 
   3.4749741956949296`*^9, 3.4749784944870768`*^9, 3.4749872419888716`*^9, 
   3.4749882627327642`*^9, 3.474999017085514*^9, 3.474999471992054*^9, 
   3.474999690106059*^9, 3.475000780297395*^9, 3.475001445360781*^9, 
   3.4750026567918196`*^9, 3.5250117234924507`*^9, 3.811522090273774*^9, 
   3.811522221505863*^9, 3.81152236516*^9, 3.8115225862493677`*^9, 
   3.8115227381608877`*^9, 3.8115232333560057`*^9},
 CellLabel->
  "Out[731]=",ExpressionUUID->"6295e26e-b4bf-438b-998d-81a799d5afba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.4744191755153713`*^9, 3.4744191804137793`*^9}},
 CellLabel->
  "In[732]:=",ExpressionUUID->"b1a67c4a-b723-463b-891d-45ec0c83f233"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"57.10736846923828`", "43.67302703857422`"},
     {"56.532249450683594`", "55.59086608886719`"},
     {"42.48149871826172`", "64.1858901977539`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4744191819581823`*^9, 3.474633994026373*^9, 3.474734885360592*^9, 
   3.474802020441855*^9, 3.4748037293823566`*^9, 3.474803775381769*^9, 
   3.4748054323789387`*^9, 3.474805654904173*^9, {3.474807599455374*^9, 
   3.4748076189274035`*^9}, 3.4748082637499704`*^9, 3.4748083149672947`*^9, 
   3.4748097953821115`*^9, 3.4748141368757453`*^9, 3.4748145216774297`*^9, 
   3.4748145979537263`*^9, {3.4748152036768894`*^9, 3.4748152289088745`*^9}, 
   3.4748208481685534`*^9, 3.4748215334162517`*^9, {3.4748295874427547`*^9, 
   3.474829635465169*^9}, 3.4748303582056007`*^9, 3.474830468723752*^9, 
   3.4748305651501365`*^9, 3.474832131026298*^9, 3.4749012824306483`*^9, 
   3.474901603675787*^9, 3.4749120250946302`*^9, 3.474916445498269*^9, 
   3.4749170120663643`*^9, 3.4749741957105474`*^9, 3.4749784945183153`*^9, 
   3.4749872420200586`*^9, 3.474988263875185*^9, 3.4749990171167493`*^9, 
   3.474999472023289*^9, 3.4749996901372943`*^9, 3.475000780313036*^9, 
   3.4750014453920517`*^9, 3.475002656823089*^9, 3.5250117235392504`*^9, 
   3.811522090296296*^9, 3.8115222215114613`*^9, 3.8115223651766357`*^9, 
   3.811522586256996*^9, 3.81152273816794*^9, 3.811523233362936*^9},
 CellLabel->
  "Out[732]//MatrixForm=",ExpressionUUID->"3212c68d-14e9-4779-927d-\
8e46babc0057"]
}, Open  ]],

Cell[TextData[{
 "To minimize global namespace pollution, we can create a function to get ",
 StyleBox["w", "Code"],
 "."
}], "Text",
 CellChangeTimes->{{3.474820052178214*^9, 
  3.474820074505768*^9}},ExpressionUUID->"7313be49-7c04-4c7a-9d67-\
c674c766e2a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getW", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"wPath", ",", " ", "w"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "wPath", " ", "=", " ", 
      "\"\<~/projects/Color-Deconvolution/Images/Wbasis.mat\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"First", "[", 
       RowBox[{"Import", "[", "wPath", "]"}], "]"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4748200898178215`*^9, 3.4748201546438723`*^9}, {
  3.5250116245570765`*^9, 3.5250116314522886`*^9}, {3.811522533154614*^9, 
  3.811522562282742*^9}},
 CellLabel->
  "In[733]:=",ExpressionUUID->"cdc2f622-90e7-429a-811b-0e53fe70b952"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", " ", "=", 
  RowBox[{"getW", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.47482015845625*^9, 3.474820173658889*^9}, {
  3.47482021501694*^9, 3.4748202161106553`*^9}},
 CellLabel->
  "In[734]:=",ExpressionUUID->"19a2c42c-ab33-458a-b934-10acee9cbf01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"57.10736846923828`", ",", "43.67302703857422`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56.532249450683594`", ",", "55.59086608886719`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.48149871826172`", ",", "64.1858901977539`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4748201683153095`*^9, 3.4748201752369633`*^9}, 
   3.4748202183137093`*^9, 3.4748208482154274`*^9, 3.474821533463124*^9, {
   3.47482958750496*^9, 3.4748296355273743`*^9}, 3.4748303582524176`*^9, 
   3.4748304687705684`*^9, 3.474830565196953*^9, 3.4748321310731225`*^9, 
   3.474901282477526*^9, 3.4749016037226334`*^9, 3.474912025141493*^9, 
   3.4749164455451384`*^9, 3.474917012113233*^9, 3.47497419577302*^9, 
   3.474978494565174*^9, 3.4749872420668383`*^9, 3.474988270009828*^9, 
   3.474999017163602*^9, 3.474999472070142*^9, 3.474999690184147*^9, 
   3.475000780375598*^9, 3.4750014454389586`*^9, 3.4750026568699937`*^9, 
   3.5250117236016507`*^9, 3.811522090334762*^9, 3.811522221556608*^9, 
   3.8115223651994762`*^9, 3.8115225862973223`*^9, 3.811522738206863*^9, 
   3.81152323339636*^9},
 CellLabel->
  "Out[734]=",ExpressionUUID->"4c3eb5ec-3b0e-463f-bea7-0b07fe231426"]
}, Open  ]],

Cell[TextData[{
 "The two calls to ",
 StyleBox["unique()", "Code"],
 " are somewhat puzzling. The code assumes that the images consist of three \
channels of 8-bit data. The first call to ",
 StyleBox["unique()", "Code"],
 " includes an embedded call to ",
 StyleBox["reshape()", "Code"],
 ". The ",
 StyleBox["reshape()", "Code"],
 " operation will reform the original data into a tall three column (one for \
each RGB color channel) matrix and create a new matrix by subtracting each \
element from 255 ",
 StyleBox["(WHY?)",
  FontWeight->"Bold"],
 ". When ",
 StyleBox["unique()", "Code"],
 " operates on this tall matrix, the ",
 StyleBox["'rows'", "Code"],
 " option will cause the function to eliminate duplicate RGB triples, a \
possible substantial reduction in data to be processed. It is not clear what \
the second call to ",
 StyleBox["unique()", "Code"],
 ", immediately after the first, would do unless the first call were somehow \
faulty, providing an incomplete reduction. Note that the mapping indices are \
not re-calculated in the second call."
}], "Text",
 CellChangeTimes->{{3.4743949207217703`*^9, 3.4743949525789413`*^9}, {
  3.474397076026006*^9, 3.474397247799312*^9}, {3.4743975274462447`*^9, 
  3.4743976387676296`*^9}, {3.474397737116419*^9, 3.4743979262576265`*^9}, {
  3.4743980220719585`*^9, 3.47439805200705*^9}, {3.4743981834257994`*^9, 
  3.474398217005886*^9}, {3.4743984670275545`*^9, 3.474398543244199*^9}, {
  3.4743986335419703`*^9, 3.4743986801351204`*^9}, {3.4743991979538803`*^9, 
  3.474399233751376*^9}, {3.474634068506583*^9, 3.474634097895506*^9}, {
  3.474806976961609*^9, 3.474806989393332*^9}, {3.474807080902028*^9, 
  3.4748071507564707`*^9}},ExpressionUUID->"7912cf04-8253-48c3-9b60-\
1b49229302a4"],

Cell[TextData[{
 "The essential function of ",
 StyleBox["processImage()", "Code"],
 " can be stated in a single line:"
}], "Text",
 CellChangeTimes->{{3.474405627667624*^9, 3.474405632300832*^9}, {
  3.4744084170492725`*^9, 3.4744084409485145`*^9}, {3.474408575623551*^9, 
  3.4744085847963667`*^9}, {3.474735620230128*^9, 3.4747356598678503`*^9}},
 TextJustification->0.,ExpressionUUID->"29c855f3-8f06-44e4-bba0-fe7f2ef6002c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v", ",", " ", "junk", ",", " ", "reconIdx"}], "}"}], " ", "=", 
   " ", 
   RowBox[{"uniqueImgRows", "[", "smlImg", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4747356673955817`*^9, 3.4747356962883267`*^9}, {
   3.474735758321831*^9, 3.4747357642412076`*^9}, 3.474998424620034*^9},
 CellLabel->
  "In[735]:=",ExpressionUUID->"adb02f26-2837-45f5-b1c5-b2411de0fed4"],

Cell["The remaining work is selecting which subfunctions to call.", "Text",
 CellChangeTimes->{{3.474998445453779*^9, 
  3.4749984676306295`*^9}},ExpressionUUID->"13258a41-c761-4917-9480-\
82c818c5d7dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["function H = findH (V, W)", "Subsection",
 CellChangeTimes->{{3.4743773886241393`*^9, 3.4743773992177534`*^9}, {
  3.4743774971852493`*^9, 3.4743774972008743`*^9}, {3.474387562382146*^9, 
  3.4743875789284916`*^9}},ExpressionUUID->"430d5c3b-c2ff-4764-95bb-\
fb73658af63c"],

Cell[TextData[{
 "The function ",
 StyleBox["findH()", "Code"],
 " does a linear unmixing of of an image given a color basis matrix for the \
dyes in the image. The code from ",
 StyleBox["findH.m", "Code"],
 " is included below."
}], "Text",
 CellChangeTimes->{{3.4743775147319*^9, 3.4743775553251305`*^9}, {
  3.4743776354334803`*^9, 3.4743776376678267`*^9}, {3.4743777129637375`*^9, 
  3.4743777386509085`*^9}, {3.474377769119269*^9, 
  3.474377813462451*^9}},ExpressionUUID->"4b0e46b3-772f-4e0c-b7ad-\
bbda39da6277"],

Cell["\<\
function H = findH( V, W)
% H = FINDH( V, W) linearly unmixes a set of N m-dimensional samples (Nxm \
matrix)
%   inputs: V, the original samples
%           W the color basis matrix, m-dimensioanl, r=rank (mxr)
%
%   outputs: H, the unmixed weight channels
% 
% Justin Newberg

% H = pinv(single(W))*single(V');
H = single(V)*pinv(single(W))';
H = H - min(H(:));
H = H / max(H(:))*255;
H = uint8(round(H));
\
\>", "Program",
 CellChangeTimes->{3.4743779003678913`*^9, 
  3.474388821185613*^9},ExpressionUUID->"aa05aa96-ff22-477a-934d-\
5d359487a971"],

Cell[TextData[{
 "In the code, the calls to ",
 StyleBox["single()", "Code"],
 " convert the arguments to single precision, presumably for reasons of \
speed. The ",
 StyleBox["pinv()", "Code"],
 " function calculates the Moore-Penrose pseudo-inverse of the argument. Of \
course, the ",
 StyleBox["'", "Code"],
 " operator returns the transpose of its argument."
}], "Text",
 CellChangeTimes->{{3.4743782913341393`*^9, 3.474378324505802*^9}, {
  3.474378374192984*^9, 3.474378394708478*^9}, {3.474378677441043*^9, 
  3.4743786959565496`*^9}, {3.4744095001757746`*^9, 3.4744095001757746`*^9}, {
  3.4744097663122425`*^9, 
  3.4744097663122425`*^9}},ExpressionUUID->"e098e672-65a4-4539-bc72-\
9f96baa4d456"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", "=", 
   RowBox[{"v", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"PseudoInverse", "[", "w", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4746346701099997`*^9, 3.4746346844840803`*^9}, {
  3.4746347676317654`*^9, 3.4746347711921225`*^9}, {3.474635111362791*^9, 
  3.474635120714739*^9}},
 CellLabel->
  "In[736]:=",ExpressionUUID->"b6cc9e3d-5be4-449b-a9e3-9b7304886d43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "h", "]"}]], "Input",
 CellChangeTimes->{{3.4746351309566045`*^9, 3.4746351473825283`*^9}},
 CellLabel->
  "In[737]:=",ExpressionUUID->"2b40c717-799f-4163-bcec-2f815fcf58d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1.1351335085630359`"}], "3.4900882526124883`"},
     {"4.860909193755738`", 
      RowBox[{"-", "3.0762154776026165`"}]},
     {"0.6608170610341089`", "0.5232386620171747`"},
     {"0.`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4746351484147215`*^9, 3.4747348858756495`*^9, 3.474802020767865*^9, 
   3.474803729444771*^9, 3.4748037754441833`*^9, 3.4748054324413853`*^9, 
   3.4748056549666185`*^9, {3.4748075995178347`*^9, 3.4748076189898643`*^9}, 
   3.4748082638124495`*^9, 3.4748083150297737`*^9, 3.4748097954445934`*^9, 
   3.4748141369538565`*^9, 3.4748145217242928`*^9, 3.474814598016209*^9, {
   3.4748152037550554`*^9, 3.474815228971407*^9}, 3.4748208482779255`*^9, 
   3.4748215335256205`*^9, {3.474829587567165*^9, 3.4748296355895796`*^9}, 
   3.4748303583148394`*^9, 3.4748304688329906`*^9, 3.4748305652593746`*^9, 
   3.4748321311043386`*^9, 3.4749012825556555`*^9, 3.4749016037850957`*^9, 
   3.4749120252195983`*^9, 3.4749164456076307`*^9, 3.474917012175725*^9, 
   3.4749741960385275`*^9, 3.4749784946432705`*^9, 3.474987242238364*^9, 
   3.4749889183209553`*^9, 3.474999017210454*^9, 3.4749994721013765`*^9, 
   3.474999690230999*^9, 3.4750007804068785`*^9, 3.475001445485865*^9, 
   3.475002656901263*^9, 3.525011723648451*^9, 3.8115220903715467`*^9, 
   3.811522221595303*^9, 3.811522365235237*^9, 3.811522586334629*^9, 
   3.811522738249357*^9, 3.811523233431161*^9},
 CellLabel->
  "Out[737]//MatrixForm=",ExpressionUUID->"dd8a917c-cada-458c-b1f1-\
408804b7d99c"]
}, Open  ]],

Cell["\<\
Scaling can be accomplished just as in the original function.\
\>", "Text",
 CellChangeTimes->{{3.474635488402589*^9, 
  3.4746355005733733`*^9}},ExpressionUUID->"9f05575c-5a1a-4a8b-b79e-\
afb9ff2c07be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"h", " ", "-", 
   RowBox[{"Min", "[", "h", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4746352075781937`*^9, 3.4746352097833347`*^9}, {
  3.474635295533617*^9, 3.4746352982079372`*^9}},
 CellLabel->
  "In[738]:=",ExpressionUUID->"a80e9684-34bd-497e-a325-b9d221c88554"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.9410819690395806`", ",", "6.566303730215105`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.9371246713583545`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.7370325386367256`", ",", "3.599454139619791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0762154776026165`", ",", "3.0762154776026165`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4746352102212353`*^9, 3.4746352991619344`*^9, 3.474734885906865*^9, 
   3.474802020798914*^9, 3.4748037294603744`*^9, 3.4748037754597874`*^9, 
   3.4748054324726086`*^9, 3.474805654997841*^9, {3.4748075995490646`*^9, 
   3.4748076190210943`*^9}, 3.4748082638436894`*^9, 3.4748083150610137`*^9, 
   3.474809795475834*^9, 3.4748141369851007`*^9, 3.474814521755535*^9, 
   3.474814598047451*^9, {3.474815203770689*^9, 3.4748152290026736`*^9}, 
   3.4748208483091745`*^9, 3.4748215335568686`*^9, {3.4748295875982676`*^9, 
   3.474829635620682*^9}, 3.4748303583460503`*^9, 3.4748304688642015`*^9, 
   3.474830565290586*^9, 3.474832131135555*^9, 3.4749012825712814`*^9, 
   3.474901603816327*^9, 3.47491202525084*^9, 3.4749164456388764`*^9, 
   3.474917012206971*^9, 3.474974196085382*^9, 3.4749784946745095`*^9, 
   3.4749872422695513`*^9, 3.4749889208361454`*^9, 3.474999017241689*^9, 
   3.4749994721326113`*^9, 3.474999690246617*^9, 3.47500078043816*^9, 
   3.4750014455015006`*^9, 3.475002656916898*^9, 3.5250117236952505`*^9, 
   3.811522090378038*^9, 3.811522221601944*^9, 3.8115223652415257`*^9, 
   3.811522586341786*^9, 3.811522738255851*^9, 3.811523233437821*^9},
 CellLabel->
  "Out[738]=",ExpressionUUID->"65b2c119-44cd-4774-a7c4-dfc170df1327"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"h", "/", 
   RowBox[{"Max", "[", "h", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.47463521436565*^9, 3.474635216617709*^9}, {
  3.4746353086393504`*^9, 3.4746353232620955`*^9}},
 CellLabel->
  "In[739]:=",ExpressionUUID->"57bb07e2-6a05-4b2d-b7af-673ef9571911"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2445573238938913`", ",", "0.8272899824680908`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9999999999999999`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47082951237014803`", ",", "0.4534959810583122`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38757303242361124`", ",", "0.38757303242361124`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4746352189010468`*^9, 3.4746353286576543`*^9, 3.474734885922473*^9, 
   3.4748020208299627`*^9, 3.474803729491582*^9, 3.4748037754909945`*^9, 
   3.474805432503832*^9, 3.4748056550134525`*^9, {3.4748075995802946`*^9, 
   3.4748076190523243`*^9}, 3.474808263859309*^9, 3.4748083150766335`*^9, 
   3.474809795538316*^9, 3.474814137000723*^9, 3.4748145217867775`*^9, 
   3.4748145980630713`*^9, {3.474815203801955*^9, 3.4748152290183067`*^9}, 
   3.474820848340423*^9, 3.4748215335724926`*^9, {3.47482958762937*^9, 
   3.4748296356362333`*^9}, 3.474830358361656*^9, 3.4748304688954124`*^9, 
   3.4748305653061914`*^9, 3.474832131151163*^9, 3.4749012826025333`*^9, 
   3.4749016038475575`*^9, 3.474912025282082*^9, 3.474916445654499*^9, 
   3.4749170122382174`*^9, 3.4749741961010003`*^9, 3.4749784946901293`*^9, 
   3.4749872423007374`*^9, 3.474988921695372*^9, 3.474999017257307*^9, 
   3.474999472163847*^9, 3.4749996902778516`*^9, 3.4750007804694405`*^9, 
   3.4750014455327716`*^9, 3.475002656948168*^9, 3.525011723726451*^9, 
   3.811522090411565*^9, 3.8115222216421213`*^9, 3.811522365279525*^9, 
   3.8115225863673058`*^9, 3.8115227382624807`*^9, 3.811523233462484*^9},
 CellLabel->
  "Out[739]=",ExpressionUUID->"2b9b6672-9a18-495f-9e94-c589101b1c3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"h", " ", "*", " ", "255"}]}]], "Input",
 CellChangeTimes->{{3.4746353345067525`*^9, 3.4746353401681795`*^9}},
 CellLabel->
  "In[740]:=",ExpressionUUID->"d6251995-f2b7-4953-9084-e2379375efd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"62.362117592942276`", ",", "210.95894552936315`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"254.99999999999997`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120.06152565438775`", ",", "115.64147516986961`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98.83112326802086`", ",", "98.83112326802086`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.474635342232567*^9, 3.4747348859536886`*^9, 3.4748020208610115`*^9, 
   3.474803729522789*^9, 3.4748037755222015`*^9, 3.4748054325194435`*^9, 
   3.474805655044675*^9, {3.474807599611525*^9, 3.4748076190835547`*^9}, 
   3.4748082638905487`*^9, 3.474808315107873*^9, 3.474809795569557*^9, 
   3.474814137031967*^9, 3.47481452181802*^9, 3.4748145980943127`*^9, {
   3.4748152038332214`*^9, 3.474815229049573*^9}, 3.4748208483560476`*^9, 
   3.4748215336037407`*^9, {3.474829587660473*^9, 3.474829635667336*^9}, 
   3.474830358392867*^9, 3.474830468911018*^9, 3.4748305653374023`*^9, 
   3.474832131166771*^9, 3.4749012826337852`*^9, 3.4749016038631735`*^9, 
   3.474912025313324*^9, 3.4749164456857452`*^9, 3.4749170122538404`*^9, 
   3.4749741961322365`*^9, 3.474978494721368*^9, 3.4749872423319244`*^9, 
   3.4749889224608645`*^9, 3.474999017288542*^9, 3.4749994721794643`*^9, 
   3.474999690309087*^9, 3.475000780500722*^9, 3.4750014455484076`*^9, 
   3.4750026569638023`*^9, 3.525011723773251*^9, 3.8115220904176207`*^9, 
   3.811522221647723*^9, 3.811522365285317*^9, 3.811522586374566*^9, 
   3.811522738268673*^9, 3.811523233469853*^9},
 CellLabel->
  "Out[740]=",ExpressionUUID->"6567ec9f-5612-4098-8afb-04a48ad9f0cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"Round", "[", "h", "]"}]}]], "Input",
 CellChangeTimes->{{3.474635389510171*^9, 3.4746353943114357`*^9}},
 CellLabel->
  "In[741]:=",ExpressionUUID->"95dad33d-2e94-45e2-a80c-bdae3a6b50fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"62", ",", "211"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"255", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "116"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "99"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.474635395202876*^9, 3.4747348859692965`*^9, 3.4748020208765354`*^9, 
   3.474803729538392*^9, 3.4748037755378056`*^9, 3.474805432566278*^9, 
   3.4748056550602865`*^9, {3.4748075996427555`*^9, 3.4748076191147847`*^9}, 
   3.474808263906169*^9, 3.4748083151234927`*^9, 3.4748097956007977`*^9, 
   3.4748141370632114`*^9, 3.4748145218336406`*^9, 3.474814598109934*^9, {
   3.4748152038644876`*^9, 3.4748152290808396`*^9}, 3.4748208483872967`*^9, 
   3.474821533634989*^9, {3.474829587691575*^9, 3.4748296356984386`*^9}, 
   3.474830358408472*^9, 3.474830468942229*^9, 3.4748305653686132`*^9, 
   3.474832131182379*^9, 3.474901282711915*^9, 3.4749016038944044`*^9, 
   3.474912025391429*^9, 3.4749164457013683`*^9, 3.4749170122850866`*^9, 
   3.4749741961478543`*^9, 3.474978494752607*^9, 3.4749872423631105`*^9, 
   3.474988923476314*^9, 3.4749990173197765`*^9, 3.474999472210699*^9, 
   3.4749996903403215`*^9, 3.4750007805320024`*^9, 3.475001445579678*^9, 
   3.475002656979437*^9, 3.525011723804451*^9, 3.811522090441004*^9, 
   3.811522221678133*^9, 3.8115223653124743`*^9, 3.811522586402247*^9, 
   3.8115227382994843`*^9, 3.811523233494297*^9},
 CellLabel->
  "Out[741]=",ExpressionUUID->"ba3d7917-09c1-4bea-af72-8e510943774c"]
}, Open  ]],

Cell["This can all be wrapped up in a function.", "Text",
 CellChangeTimes->{{3.4746355558652935`*^9, 
  3.4746355657237854`*^9}},ExpressionUUID->"1da443be-252e-4515-a83c-\
a77a73da470f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"findH", "[", 
    RowBox[{"v_", ",", " ", "w_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "h", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"v", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"PseudoInverse", "[", "w", "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"h", " ", "-", " ", 
        RowBox[{"Min", "[", "h", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<findH: Dimensions of h:\>\"", ",", " ", 
        RowBox[{"Dimensions", "[", "h", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"h", "/", 
          RowBox[{"Max", "[", "h", "]"}]}], "*", "255"}], "]"}], "]"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.474635571426399*^9, 3.4746357391769924`*^9}, {
   3.4746357823480997`*^9, 3.4746358245169697`*^9}, 3.4746358689504642`*^9, {
   3.4746359680473084`*^9, 3.4746360020947666`*^9}, {3.474993959225051*^9, 
   3.474993981443469*^9}},
 CellLabel->
  "In[742]:=",ExpressionUUID->"66122ad4-a826-49c0-aa3a-74fe3171c8b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"findH", "[", 
   RowBox[{"v", ",", " ", "w"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.474635896157194*^9, 3.4746359027636504`*^9}},
 CellLabel->
  "In[743]:=",ExpressionUUID->"67da1122-bdbc-4177-bcd9-2d3fe0ceea4b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"findH: Dimensions of h:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}]}],
  SequenceForm["findH: Dimensions of h:", {4, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4749990173510113`*^9, 3.4749994722419343`*^9, 
  3.4749996903715568`*^9, 3.475000780563284*^9, 3.4750014456109495`*^9, 
  3.475002657010707*^9, 3.525011723851251*^9, 3.811522090471631*^9, 
  3.811522221714485*^9, 3.811522365323812*^9, 3.811522586432953*^9, 
  3.811522738310582*^9, 3.8115232335246572`*^9},
 CellLabel->
  "During evaluation of \
In[743]:=",ExpressionUUID->"d58292b5-be55-4af3-87d3-1a7f10fcd0be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"62", ",", "211"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"255", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "116"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "99"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4746359040130987`*^9, {3.474635977371314*^9, 3.4746360058743467`*^9}, 
   3.474734886000512*^9, 3.4747359875573797`*^9, 3.474802020907584*^9, 
   3.4748037295695996`*^9, 3.4748037755690126`*^9, 3.4748054325975013`*^9, 
   3.47480565509151*^9, {3.4748075996896005`*^9, 3.47480761916163*^9}, 
   3.4748082639374084`*^9, 3.4748083151547327`*^9, 3.474809795632039*^9, 
   3.4748141370944557`*^9, 3.4748145218648825`*^9, 3.474814598141175*^9, {
   3.4748152038957543`*^9, 3.4748152291121063`*^9}, 3.4748208484185457`*^9, 
   3.474821533666237*^9, {3.4748295877537804`*^9, 3.4748296357295413`*^9}, 
   3.474830358455289*^9, 3.47483046897344*^9, 3.474830565399824*^9, 
   3.4748321311979876`*^9, 3.4749012827431664`*^9, 3.4749016039256353`*^9, 
   3.4749120254382925`*^9, 3.4749164457326145`*^9, 3.4749170123163323`*^9, 
   3.474974196194709*^9, 3.474978494783846*^9, 3.4749872423942976`*^9, 
   3.474988932802827*^9, 3.4749990173510113`*^9, 3.4749994722419343`*^9, 
   3.4749996903715568`*^9, 3.475000780563284*^9, 3.4750014456109495`*^9, 
   3.4750026570263414`*^9, 3.525011723851251*^9, 3.811522090482202*^9, 
   3.811522221724831*^9, 3.811522365334588*^9, 3.811522586435063*^9, 
   3.8115227383124733`*^9, 3.811523233526478*^9},
 CellLabel->
  "Out[743]=",ExpressionUUID->"61f8388e-3b13-45a3-8629-4cb40dc8fc69"]
}, Open  ]],

Cell[TextData[{
 "In the shortest, simplest path through the code, the next function would be \
image reconstruction ",
 StyleBox["via",
  FontSlant->"Italic"],
 " a call to ",
 StyleBox["reconIH()", "Code"],
 "."
}], "Text",
 CellChangeTimes->{{3.4747361806068296`*^9, 3.474736220935088*^9}, {
  3.474736304949689*^9, 3.474736306464732*^9}},
 TextJustification->0.,ExpressionUUID->"41a4012e-1137-482e-8b3e-82ae66ae5cc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["function [J, ma] = reconIH(I, H, IDX, sc)", "Subsection",
 CellChangeTimes->{{3.474292333769515*^9, 3.474292427518339*^9}, {
  3.474292560041461*^9, 3.4742926449549675`*^9}, {3.4742928104589405`*^9, 
  3.4742928535496564`*^9}, {3.474292971865424*^9, 3.4742929747713394`*^9}, {
  3.4743035019971533`*^9, 3.4743035692531805`*^9}, {3.4743036029671993`*^9, 
  3.474303610254181*^9}, {3.47430416564487*^9, 3.474304193881138*^9}, {
  3.4743042759789476`*^9, 3.4743043061070147`*^9}, {3.4743043517285776`*^9, 
  3.4743043531044135`*^9}, {3.4743773111095066`*^9, 3.47437731821879*^9}, {
  3.4743779599768853`*^9, 3.4743780133359184`*^9}, {3.474396136611028*^9, 
  3.474396138013768*^9}, {3.4743962473651443`*^9, 
  3.4743962623277044`*^9}},ExpressionUUID->"0f1b948b-ec54-4bb1-9915-\
76fa32b5c737"],

Cell[TextData[{
 "The function ",
 StyleBox["reconIH()", "Code",
  FontFamily->"Consolas",
  FontWeight->"Plain"],
 " is intended to reconstruct an unmixed image from the input image ",
 StyleBox["I", "Code",
  FontFamily->"Consolas",
  FontWeight->"Plain"],
 " and ",
 StyleBox["H", "Code",
  FontFamily->"Consolas",
  FontWeight->"Plain"],
 ", the pixel weights for the channel. The parameters ",
 StyleBox["IDX", "Code"],
 " and ",
 StyleBox["sc", "Code"],
 " are not used in all code paths. In fact, it does not appear that ",
 StyleBox["sc", "Code"],
 " is used anywhere in the code, even the commented out portions. ",
 StyleBox["IDX", "Code"],
 " is used to map from the color channel weights matrix back to a full size \
image. If no actual argument is supplied for IDX, it is generated, using the \
same method as in ",
 StyleBox["processImage()", "Code"],
 ". It appears that ",
 StyleBox["sc", "Code",
  FontFamily->"Consolas",
  FontWeight->"Plain"],
 " is used as a flag to indicate if the output image should be scaled. If \
present, it appears that the output image is scaled to cover the full 8-bit \
intensity range for the channel. In the case of the output parameter ",
 StyleBox["ma", "Code"],
 ", it does not appear that the result is used anywhere in the code. The \
entirety of the MATLAB function is included below."
}], "Text",
 CellChangeTimes->{{3.474292333769515*^9, 3.474292427518339*^9}, {
   3.474292560041461*^9, 3.4742926449549675`*^9}, {3.4742928104589405`*^9, 
   3.4742928535496564`*^9}, {3.474292971865424*^9, 3.4742929747713394`*^9}, {
   3.4743035019971533`*^9, 3.4743035692531805`*^9}, {3.4743036029671993`*^9, 
   3.474303610254181*^9}, {3.47430416564487*^9, 3.474304193881138*^9}, {
   3.4743042759789476`*^9, 3.4743043061070147`*^9}, {3.4743043517285776`*^9, 
   3.4743043531044135`*^9}, {3.4743773111095066`*^9, 3.47437731821879*^9}, {
   3.4743779599768853`*^9, 3.4743779618831224`*^9}, {3.474736345402899*^9, 
   3.474736407238824*^9}, {3.47473648435032*^9, 3.474736515432329*^9}, 
   3.4747366368083553`*^9, {3.474736725103546*^9, 3.4747367786149254`*^9}, {
   3.4747368120087748`*^9, 3.474736847558074*^9}},
 TextJustification->0.,ExpressionUUID->"66a287aa-a836-4fe7-b04e-7403d3f27c30"],

Cell["\<\
function [J,ma] = reconIH( I,H,IDX,sc)
% J = RECONIH( I, H) reconstruct an NMF unmixed image
%   Takes as input I, the image to be unmixed, and H, the sorted pixel-weight \
channels.
%   Returns J, the unmixed image. Should be called after findWH.m
% 
% Justin Newberg

if ~exist( 'IDX','var')
    IDX = [];
end
if ~exist( 'sc','var')
    sc = 0;
end

ma = [];

s = size(I);

if ~length(IDX)
    [u i IDX] = unique( 255-reshape( I, [s(1)*s(2) s(3)]), 'rows');
end

J = H(IDX,:);
if sc
    ma = zeros(size(H,2),1);
    for i=1:size(H,2)
        [c b] = imhist(J(:,i));
        [a ind] = max(c);
        J(:,i) = J(:,i)-b(ind);
        ma(i) = max(J(:,i));
    end
    J = (255/max(J(:)))*J;
end

J = reshape( J, [s(1) s(2) size(H,2)]);

if size(H,2)<3
    J(:,:,3) = 0;
end

\
\>", "Program",
 CellChangeTimes->{
  3.4743782219752083`*^9},ExpressionUUID->"2c4daee0-544b-43a2-895f-\
ecdee2f3df7a"],

Cell[TextData[{
 "The first functional statement for our purposes is the one that reads ",
 StyleBox["J = H(IDX,:);", "Code"],
 ". This creates the unmixed version of the image. In fact, it creates two or \
three images all bound up in ",
 StyleBox["J", "Code"],
 ". The two or three planes in ",
 StyleBox["J", "Code"],
 " contain the unmixed intensity images for the dyes. The next block of code \
appears to scale the pixels. The pixels are then reshaped into the original \
dimensions and channels of the input image. Finally, if fewer than three dyes \
were unmixed, the contents of the third color channel are added and set to \
zero, indicating no contribution from a third dye."
}], "Text",
 CellChangeTimes->{{3.4747373441236806`*^9, 3.4747375859088964`*^9}, {
   3.474742481754533*^9, 3.474742481754533*^9}, {3.474744587159195*^9, 
   3.474744587159195*^9}, {3.4749982514844294`*^9, 3.474998340800912*^9}, 
   3.4750016661484766`*^9},
 TextJustification->0.,ExpressionUUID->"6c7767c9-ff5b-4f2f-86ff-c42ba65a8634"],

Cell[TextData[{
 "To create the unmixed pixels, use the index generated earlier by the ",
 StyleBox["uniqueImgRows()", "Code"],
 " function to map the unmixed weights, ",
 StyleBox["h", "Code"],
 ", to a new array."
}], "Text",
 CellChangeTimes->{{3.4747450497928896`*^9, 3.4747451379725676`*^9}, {
  3.4748215893349056`*^9, 3.4748215950220776`*^9}, {3.474998377377097*^9, 
  3.474998378704584*^9}},ExpressionUUID->"2ac6f400-c977-4cba-86fb-\
e0d6714c704b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ar1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"h", "[", 
      RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
    "reconIdx"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.474744963750617*^9, 3.4747449991192174`*^9}, {
   3.4747453399052954`*^9, 3.4747453420115247`*^9}, 3.474745506048601*^9},
 CellLabel->
  "In[744]:=",ExpressionUUID->"b68faf44-6e03-4914-9c0a-40f049585b49"],

Cell["\<\
We can check the dimensions of the color weights to see if an additional \
channel should be added and append it if so.\
\>", "Text",
 CellChangeTimes->{{3.474744588220042*^9, 3.4747446028690996`*^9}, {
  3.474744636441806*^9, 3.4747446476587095`*^9}, {3.474745525706995*^9, 
  3.4747455381105056`*^9}},ExpressionUUID->"67b5ddba-721b-4e4a-bb7a-\
80f8933730b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ar1", " ", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Dimensions", "[", "h", "]"}], ",", " ", "2"}], "]"}], " ", 
      "<", " ", "3"}], ",", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"#", ",", " ", "0"}], "]"}], "&"}], ",", " ", "ar1"}], "]"}],
      ",", " ", "ar1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4747447126980276`*^9, 3.474744734523407*^9}, {
   3.4747447848824663`*^9, 3.4747448139777718`*^9}, {3.4747450225526705`*^9, 
   3.47474502868406*^9}, 3.4747451651038485`*^9, {3.474745359267005*^9, 
   3.474745367551508*^9}},
 CellLabel->
  "In[745]:=",ExpressionUUID->"a2047c24-f29f-4acf-88d6-db9337e2519e"],

Cell[TextData[{
 "At this point, the optional scaling operation could be performed. However, \
rather than try to figure out the translation from MATLAB to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", the built in ",
 StyleBox["ImageAdjust()", "Code"],
 " function can be used before returning the result from the function."
}], "Text",
 CellChangeTimes->{{3.474745174496072*^9, 3.474745215122898*^9}, {
  3.4747455718418136`*^9, 3.4747455827943473`*^9}, {3.474811916755355*^9, 
  3.4748119342815557`*^9}, {3.4749013865455294`*^9, 3.474901436938735*^9}, {
  3.4749015235056667`*^9, 
  3.474901534287469*^9}},ExpressionUUID->"017baed5-93b2-4401-be4f-\
2a527f79e9df"],

Cell["\<\
Now the pixels can be reshaped into the three planes of pixel data by using \
the number of colums in the original image.\
\>", "Text",
 CellChangeTimes->{{3.474745174496072*^9, 3.474745215122898*^9}, {
  3.4747455718418136`*^9, 3.4747455827943473`*^9}, {3.474811916755355*^9, 
  3.4748119342815557`*^9}},ExpressionUUID->"1a6c1081-1fa3-443f-8b65-\
deca002a0193"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arr", " ", "=", " ", 
   RowBox[{"Partition", "[", 
    RowBox[{"ar1", ",", " ", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Dimensions", "[", 
        RowBox[{"ImageData", "[", "smlImg", "]"}], "]"}], ",", "2"}], "]"}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.47474252650963*^9, 3.4747425473077707`*^9}, {
   3.474742618678234*^9, 3.4747426462787743`*^9}, {3.4747427413090773`*^9, 
   3.4747427774947147`*^9}, {3.4747428727595835`*^9, 
   3.4747428775290823`*^9}, {3.4747433615307026`*^9, 3.474743392781087*^9}, 
   3.474743518854331*^9, 3.474744011712494*^9, {3.4747440489325075`*^9, 
   3.474744121470213*^9}, {3.474745290276287*^9, 3.4747452914152117`*^9}, 
   3.474745499776637*^9, 3.4748140962111588`*^9, {3.4749889756235514`*^9, 
   3.4749889763265553`*^9}},
 CellLabel->
  "In[746]:=",ExpressionUUID->"39bba2c2-5e74-4997-8a5d-b088ab1b64e3"],

Cell["Verify the correct dimensions:", "Text",
 CellChangeTimes->{{3.4747453109485397`*^9, 
  3.4747453185621696`*^9}},ExpressionUUID->"15e519e7-9f5d-4598-a0d5-\
28d1bc70a548"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "arr", "]"}]], "Input",
 CellChangeTimes->{{3.474743409897351*^9, 3.474743413982267*^9}},
 CellLabel->
  "In[747]:=",ExpressionUUID->"47294cac-e80d-4314-9ff3-b8286279edb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16", ",", "19", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.474743415830575*^9, 3.4747441569438334`*^9, 3.4747453264566298`*^9, 
   3.474745386257946*^9, 3.4748020209852057`*^9, 3.4748037296320143`*^9, 
   3.474803775631427*^9, 3.4748054326911707`*^9, 3.4748056551539555`*^9, {
   3.474807599752061*^9, 3.4748076192553205`*^9}, 3.4748082639998875`*^9, 
   3.4748083152172117`*^9, 3.4748097957101417`*^9, {3.474814071668682*^9, 
   3.474814100944685*^9}, 3.474814137344411*^9, 3.4748145220991993`*^9, 
   3.4748145983598647`*^9, {3.4748152041458855`*^9, 3.4748152293466043`*^9}, 
   3.474820848652913*^9, 3.4748215338693504`*^9, {3.474829588406935*^9, 
   3.474829636351593*^9}, 3.4748303590951147`*^9, 3.4748304696132655`*^9, 
   3.47483056603965*^9, 3.4748321317442703`*^9, 3.47490128375885*^9, 
   3.4749016039568663`*^9, 3.4749120255163975`*^9, 3.4749164458888445`*^9, 
   3.4749170124725623`*^9, 3.4749741966007795`*^9, 3.474978494908801*^9, 
   3.4749872425502305`*^9, 3.4749889818412266`*^9, 3.4749990174603343`*^9, 
   3.474999472288787*^9, 3.4749996904184093`*^9, 3.475000780610205*^9, 
   3.4750014456578555`*^9, 3.4750026570576115`*^9, 3.5250117239136515`*^9, 
   3.8115220905555773`*^9, 3.811522221820013*^9, 3.8115223654209957`*^9, 
   3.811522586477221*^9, 3.811522738356256*^9, 3.811523233563239*^9},
 CellLabel->
  "Out[747]=",ExpressionUUID->"30da34e3-84de-4240-b8fe-52fe1fecb63a"]
}, Open  ]],

Cell["Now create an RGB version of the unmixed image:", "Text",
 CellChangeTimes->{{3.474745391796549*^9, 3.4747454016256204`*^9}, {
   3.4748206617526445`*^9, 3.474820663721331*^9}, 
   3.47500178869639*^9},ExpressionUUID->"feabbd99-b38f-4997-8366-\
a10aa2669308"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"i", " ", "=", " ", 
  RowBox[{"Image", "[", 
   RowBox[{"arr", ",", 
    RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.474743727058194*^9, 3.4747437556102858`*^9}},
 CellLabel->
  "In[748]:=",ExpressionUUID->"f5f9f30e-92f5-45bb-bafc-76223a850cea"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOM5ApAMTCQAxiMzBU
ODEwBDsz0J1dD6UpZX8AmvnCCT971I+jfhz146gfh6sfjzlBMDp7qPsRl7+o
5d9RP9LHjyMhrY60MmfUj6N+HPXjSPcjAB+AoIs=
    "], {{0, 16.}, {19., 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{19., 16.},
  PlotRange->{{0, 19.}, {0, 16.}}]], "Output",
 CellChangeTimes->{
  3.4747437580558276`*^9, 3.474745408006716*^9, 3.4748020210007296`*^9, 
   3.4748037296632214`*^9, 3.474803775662634*^9, 3.474805432722394*^9, 
   3.474805655185178*^9, {3.474807599783291*^9, 3.474807619286551*^9}, 
   3.474808264031127*^9, 3.474808315248451*^9, 3.474809795913208*^9, {
   3.474814073949524*^9, 3.47481410381917*^9}, 3.4748141373756557`*^9, 
   3.4748145221304417`*^9, 3.4748145983911057`*^9, {3.4748152041927853`*^9, 
   3.4748152293778706`*^9}, 3.4748208486685376`*^9, 3.4748215338849745`*^9, {
   3.474829588438038*^9, 3.4748296363671446`*^9}, 3.4748303591263256`*^9, 
   3.4748304696444764`*^9, 3.474830566070861*^9, 3.474832131759879*^9, 
   3.474901283774476*^9, 3.474901603988097*^9, 3.4749120255788813`*^9, 
   3.4749164459513364`*^9, 3.474917012535054*^9, 3.4749741968194327`*^9, 
   3.4749784949400396`*^9, 3.4749872427061634`*^9, 3.474988984028349*^9, 
   3.4749990174759517`*^9, 3.4749994723200216`*^9, 3.4749996904340267`*^9, 
   3.475000780641486*^9, 3.4750014456734915`*^9, 3.4750026570888805`*^9, 
   3.525011723944851*^9, 3.811522090568138*^9, 3.811522221831522*^9, 
   3.8115223654351377`*^9, 3.8115225864843893`*^9, 3.811522738363278*^9, 
   3.81152323357051*^9},
 CellLabel->
  "Out[748]=",ExpressionUUID->"32a44e49-6418-40a0-8874-300ba93792c9"]
}, Open  ]],

Cell["And split it into the images for the individual channels:", "Text",
 CellChangeTimes->{{3.474745416447235*^9, 
  3.4747454290846124`*^9}},ExpressionUUID->"3af63c2c-c93d-4da8-a335-\
6d3eacee68eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sepImages", " ", "=", 
  RowBox[{"ColorSeparate", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{{3.474745464890789*^9, 3.4747454690096903`*^9}},
 CellLabel->
  "In[749]:=",ExpressionUUID->"6cecba85-a179-4150-9dc7-a3d1d14c2da7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZQKDCiThc
74wdf3BC4FGzBrdZx6CYUrOOoeHBYhY1/TiY43HULBgGAMURAgs=
      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZQCDYmTiM
C7xwQuBRswa3WcecIJhSs2Dm4DJvoMyiph8HczyOmgXDAFNbpqA=
      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZRsEoGAWj
YOgCAJCJCCQ=
      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4747454707571034`*^9, 3.4748020210473027`*^9, 3.474803729678825*^9, 
   3.474803775678238*^9, 3.4748054327380056`*^9, 3.4748056552007895`*^9, {
   3.4748075998145213`*^9, 3.4748076193177814`*^9}, 3.4748082640467467`*^9, 
   3.474808315264071*^9, 3.4748097959444494`*^9, 3.4748141067561436`*^9, 
   3.4748141374069*^9, 3.474814522146063*^9, 3.474814598406727*^9, {
   3.4748152042240515`*^9, 3.474815229409137*^9}, 3.474820848699787*^9, 
   3.4748215339162226`*^9, {3.4748295884846916`*^9, 3.474829636398247*^9}, 
   3.4748303591419306`*^9, 3.474830469660082*^9, 3.474830566102072*^9, 
   3.474832131791095*^9, 3.4749012838057275`*^9, 3.474901604050559*^9, 
   3.474912025656986*^9, 3.474916445998205*^9, 3.4749170125975466`*^9, 
   3.4749741969131413`*^9, 3.474978494971278*^9, 3.474987242799723*^9, 
   3.4749889874964995`*^9, 3.474999017507187*^9, 3.4749994723981094`*^9, 
   3.474999690527732*^9, 3.475000780735329*^9, 3.475001445704762*^9, 
   3.4750026571045156`*^9, 3.5250117239916515`*^9, 3.8115220905963593`*^9, 
   3.811522221868533*^9, 3.811522365467662*^9, 3.811522586511203*^9, 
   3.8115227383949013`*^9, 3.8115232335948553`*^9},
 CellLabel->
  "Out[749]=",ExpressionUUID->"32640b29-6aba-41f9-b96c-881486162336"]
}, Open  ]],

Cell["\<\
Admittedly, not the best deconvolution because of the image and the original \
color basis matrix.\
\>", "Text",
 CellChangeTimes->{{3.474745747503606*^9, 
  3.4747457801739845`*^9}},ExpressionUUID->"ae22334f-7a2d-4669-b21e-\
d073c3f57234"],

Cell["Putting it all together in a function.", "Text",
 CellChangeTimes->{{3.4747460003479967`*^9, 3.47474602730808*^9}, {
  3.4747463973383427`*^9, 3.474746406449852*^9}, {3.474820705188754*^9, 
  3.47482070829803*^9}, {3.4749015556737404`*^9, 
  3.474901567869446*^9}},ExpressionUUID->"65d40e5a-87c6-4976-ba30-\
ed20beaac08b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"reconIH", "[", 
   RowBox[{"img_", ",", " ", "h_", ",", " ", "idx_", ",", " ", 
    RowBox[{"sc_", ":", "False"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ar1", ",", " ", "arr", ",", " ", "image"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ar1", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"h", "[", 
         RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
       "idx"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "I", " ", "THINK", " ", "THE", " ", "STUFF", " ", "THAT", " ", 
       "FOLLOWS", " ", "WAS", " ", "TRYING", " ", "TO", " ", "ADJUST", " ", 
       "CONTRAST"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "JUST", " ", "COMMENT", " ", "IT", " ", "OUT", " ", "UNTIL", " ", "I", 
       " ", "KNOW", " ", "IT", " ", "NEEDS", " ", "TO", " ", "DO", " ", 
       "SOMETHING", "\[IndentingNewLine]", "USEFULL", " ", "THAT", " ", 
       RowBox[{"ImageAdjust", "[", "]"}], " ", 
       RowBox[{"DOESN", "'"}], "T", " ", 
       RowBox[{"DO", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"sc", " ", "\[Equal]", " ", "True"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ma", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"{", 
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"Dimensions", "[", "h", "]"}], ",", "2"}], "]"}], 
              "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", " ", 
            RowBox[{"i", "<=", " ", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"Dimensions", "[", "h", "]"}], ",", " ", "2"}], 
              "]"}]}], ",", " ", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"ar1", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "i"}], "]"}], "]"}], " ", "=", " ", 
              RowBox[{
               RowBox[{"ar1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "i"}], "]"}], "]"}], " ", "-", " ", 
               RowBox[{"Max", "[", 
                RowBox[{"BinCounts", "[", 
                 RowBox[{"ar1", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", " ", "i"}], "]"}], "]"}], "]"}], 
                "]"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ma", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"ar1", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", "i"}], "]"}], "]"}]}]}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"ar1", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"255", "/", 
              RowBox[{"Max", "[", "ar1", "]"}]}], ")"}], "*", "ar1"}]}]}], 
         ",", " ", "ar1"}], "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ar1", " ", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{
           RowBox[{"Dimensions", "[", "h", "]"}], ",", " ", "2"}], "]"}], " ",
          "<", " ", "3"}], ",", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", "0"}], "]"}], "&"}], ",", " ", "ar1"}], 
         "]"}], ",", " ", "ar1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"arr", " ", "=", " ", 
      RowBox[{"Partition", "[", 
       RowBox[{"ar1", ",", " ", 
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{"ImageData", "[", "img", "]"}], "]"}], ",", "2"}], "]"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"image", " ", "=", " ", 
      RowBox[{"Image", "[", 
       RowBox[{"arr", ",", 
        RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"ImageAdjust", "[", "image", "]"}], "]"}]}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.474746035265049*^9, 3.4747461077670784`*^9}, {
   3.4747461796918373`*^9, 3.474746293648115*^9}, 3.4747463381759377`*^9, {
   3.4748072806002197`*^9, 3.474807280943541*^9}, {3.474814199567634*^9, 
   3.4748142345457397`*^9}, 3.474814286736086*^9, 3.4748143915849085`*^9, {
   3.474815169815378*^9, 3.4748152241563816`*^9}, {3.4748152550163183`*^9, 
   3.4748152664754543`*^9}, {3.474815303979501*^9, 3.474815305495921*^9}, {
   3.474815342061976*^9, 3.4748153476430283`*^9}, {3.474819357072917*^9, 
   3.474819383683314*^9}, {3.4748209983356233`*^9, 3.474821006788478*^9}, {
   3.474821131800102*^9, 3.474821142190395*^9}, {3.4748211782986145`*^9, 
   3.4748211947824616`*^9}, {3.4748213213530054`*^9, 
   3.4748213493041625`*^9}, {3.4748213962539816`*^9, 
   3.4748214064407644`*^9}, {3.4748302369448595`*^9, 
   3.4748302433411465`*^9}, {3.474830726943473*^9, 3.474830747981844*^9}, {
   3.4749013309020557`*^9, 3.4749013534188337`*^9}, {3.474993357435207*^9, 
   3.474993360872707*^9}, {3.4749934375598536`*^9, 3.474993635229198*^9}, {
   3.474994442528366*^9, 3.474994472434042*^9}, {3.47499471108571*^9, 
   3.4749947955528383`*^9}, {3.4749949215816684`*^9, 
   3.4749949490186415`*^9}, {3.4749978502864714`*^9, 3.474997857673549*^9}, {
   3.4749980849550266`*^9, 3.4749981554524217`*^9}},
 CellLabel->
  "In[750]:=",ExpressionUUID->"2672a8dc-ba22-44e0-a640-b345fc25194f"],

Cell[TextData[{
 "The variable ",
 StyleBox["ma", "Code"],
 " is one of the returned values in the MATLAB code, but it is not used at \
all anywere in the code."
}], "Text",
 CellChangeTimes->{{3.4748207285786304`*^9, 
  3.4748207607651005`*^9}},ExpressionUUID->"a88d4480-9d59-4411-a562-\
34339a332d33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reconIH", "[", 
  RowBox[{"smlImg", ",", " ", "h", ",", " ", "reconIdx"}], "]"}]], "Input",
 CellChangeTimes->{{3.4747461331045637`*^9, 3.474746159799415*^9}, 
   3.474746215217364*^9, {3.474746346398139*^9, 3.474746353434596*^9}, {
   3.474821219312927*^9, 3.4748212206722584`*^9}, 3.474821425626914*^9},
 CellLabel->
  "In[751]:=",ExpressionUUID->"aa15df25-6db7-48a6-8c54-f7749423ef4c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOM5ApAMTCQAxiQ0CD
PQPd2dQxr/nuTDvXvTz2+Nj09Rcye9SPxLJH/TjqR9qzh6cfp/m72NlafbBD
Zw91P+LyF7X8O+rH0bRKe/bwLHNQ2aN+JJY96sdRP9KeTT8/AgClhouT
    "], {{0, 16.}, {19., 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{19., 16.},
  PlotRange->{{0, 19.}, {0, 16.}}]], "Output",
 CellChangeTimes->{
  3.474746354838767*^9, 3.474802021078351*^9, 3.474803729710032*^9, 
   3.474803775709445*^9, 3.474805432769229*^9, 3.474805655232012*^9, 
   3.4748072967207017`*^9, {3.4748075998769817`*^9, 3.4748076193490114`*^9}, 
   3.4748082640779867`*^9, 3.4748083152953105`*^9, 3.47480979597569*^9, 
   3.4748141374381447`*^9, 3.474814248230074*^9, 3.474814299045512*^9, 
   3.4748143995204277`*^9, 3.4748145221773047`*^9, 3.4748145984379683`*^9, {
   3.4748152042553177`*^9, 3.474815229440403*^9}, 3.4748152733384285`*^9, 
   3.474815310295314*^9, 3.474815351535695*^9, 3.4748193893554068`*^9, 
   3.47482084874666*^9, {3.4748212109381948`*^9, 3.4748212232971745`*^9}, {
   3.4748213307117214`*^9, 3.4748213568036346`*^9}, {3.474821415362012*^9, 
   3.4748214368761215`*^9}, 3.4748215339474707`*^9, {3.4748295885313454`*^9, 
   3.47482963642935*^9}, 3.4748302503302603`*^9, 3.474830359173142*^9, 
   3.474830469691293*^9, 3.4748305661488886`*^9, 3.474832131806703*^9, 
   3.4749012838526053`*^9, 3.4749013597785344`*^9, 3.4749016040974054`*^9, 
   3.474912025688228*^9, 3.4749164460450745`*^9, 3.4749170126287923`*^9, 
   3.4749741970068502`*^9, 3.474978495002517*^9, 3.4749872428620963`*^9, 
   3.4749889949952035`*^9, 3.474999017554039*^9, 3.474999472429344*^9, 
   3.4749996905589666`*^9, 3.47500078076661*^9, 3.475001445751669*^9, 
   3.475002657135785*^9, 3.5250117241164513`*^9, 3.811522090654621*^9, 
   3.8115222219345007`*^9, 3.811522365532775*^9, 3.811522586534987*^9, 
   3.8115227384320917`*^9, 3.8115232336253977`*^9},
 CellLabel->
  "Out[751]=",ExpressionUUID->"f45a05d3-8d1a-4c48-8f96-a69dd233d47f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sepImages", " ", "=", 
  RowBox[{"ColorSeparate", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.474746372952573*^9, 3.4747463765566115`*^9}},
 CellLabel->
  "In[752]:=",ExpressionUUID->"711a8adb-4e19-4aba-875f-12c45203280d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZSAEN9thw
892ZdjA8atbgNmuav4sdCFNqFswcXOYNlFnU9CMCDL54HDULYRYAouTGbg==

      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZQKDBnjiM
Hbju5bGH4VGzBrdZtlYf7ECYUrNg5uAyb6DMoqYfB3M8jpqFMAsAMTbNNg==

      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZRsEoGAWj
YOgCAJCJCCQ=
      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.474746378569257*^9, 3.474802021093876*^9, 3.474803729710032*^9, 
   3.474803775709445*^9, 3.4748054327848406`*^9, 3.4748056552476234`*^9, 
   3.474807299264398*^9, {3.4748075999082117`*^9, 3.4748076193802414`*^9}, 
   3.474808264093606*^9, 3.4748083152953105`*^9, 3.4748097959913106`*^9, 
   3.474814137469389*^9, 3.4748142529945097`*^9, 3.4748143007482123`*^9, 
   3.474814401847972*^9, 3.474814522192926*^9, 3.4748145984379683`*^9, {
   3.4748152042865844`*^9, 3.4748152294716697`*^9}, 3.4748193910898485`*^9, 
   3.4748208487779093`*^9, 3.474821212813135*^9, 3.474821533978719*^9, {
   3.4748295885624485`*^9, 3.474829636460452*^9}, 3.474830252124341*^9, 
   3.4748303591887474`*^9, 3.4748304697068987`*^9, 3.474830566164494*^9, 
   3.474832131837919*^9, 3.4749012838682313`*^9, 3.4749013614348693`*^9, 
   3.474901604113021*^9, 3.474912025735091*^9, 3.4749164460606976`*^9, 
   3.4749170126600385`*^9, 3.474974197022468*^9, 3.4749784950337563`*^9, 
   3.474987242893283*^9, 3.4749889962293653`*^9, 3.474999017585274*^9, 
   3.4749994724449615`*^9, 3.4749996905902014`*^9, 3.475000780797891*^9, 
   3.47500144578294*^9, 3.475002657167055*^9, 3.525011724163252*^9, 
   3.8115220906656113`*^9, 3.8115222219449873`*^9, 3.8115223655437107`*^9, 
   3.811522586542624*^9, 3.811522738439246*^9, 3.811523233632814*^9},
 CellLabel->
  "Out[752]=",ExpressionUUID->"3728b500-f9c6-4656-a01e-259acc35ba91"]
}, Open  ]],

Cell[TextData[{
 "Note the differences from the reconstructed images above due to the use of \
the ",
 StyleBox["ImageAdjust[]", "Code"],
 " function."
}], "Text",
 CellChangeTimes->{{3.4750019552097483`*^9, 
  3.475001986823516*^9}},ExpressionUUID->"6872f8ad-242c-4a80-9c86-\
7aa25ed2343e"],

Cell["\<\
It might be helpful to color the pixels based on the colors of the basis, but \
that is not too useful for this image.\
\>", "Text",
 CellChangeTimes->{{3.4750019552097483`*^9, 
  3.475001986807881*^9}},ExpressionUUID->"17883a25-d6bc-431e-9246-\
63b7bf551455"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Revisiting processImage()", "Subsection",
 CellChangeTimes->{{3.4748021074028187`*^9, 3.4748021167566624`*^9}, {
  3.474978365824932*^9, 
  3.474978369871134*^9}},ExpressionUUID->"55b5c618-f7fd-4e58-9558-\
d454a41b723e"],

Cell[TextData[{
 "With the ",
 StyleBox["findH()", "Code"],
 " and ",
 StyleBox["reconIH()", "Code"],
 " functions available, it is now possible to write an initial version of ",
 StyleBox["processImage()", "Code"],
 "."
}], "Text",
 CellChangeTimes->{{3.474802117955075*^9, 3.474802159012379*^9}, {
  3.4749784782741394`*^9, 
  3.4749784806326694`*^9}},ExpressionUUID->"ac5cafea-9bcd-4732-ae29-\
513d470e18b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"processImageV1", "[", "img_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "w", ",", " ", "h", ",", " ", "j", ",", " ", "v", ",", " ", "reconIdx", 
      ",", "junk"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"w", " ", "=", " ", 
      RowBox[{"getW", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", " ", "junk", ",", " ", "reconIdx"}], "}"}], " ", "=",
       " ", 
      RowBox[{"uniqueImgRows", "[", "img", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", " ", "=", " ", 
      RowBox[{"findH", "[", 
       RowBox[{"v", ",", " ", "w"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", " ", "=", " ", 
      RowBox[{"reconIH", "[", 
       RowBox[{"img", ",", " ", "h", ",", " ", "reconIdx", ",", " ", "True"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", 
      RowBox[{"{", 
       RowBox[{"h", ",", " ", "w", ",", " ", "j"}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4748021848794146`*^9, 3.4748022331583223`*^9}, {
  3.474802340517415*^9, 3.4748023547582917`*^9}, {3.474802393489504*^9, 
  3.474802448635624*^9}, {3.4748024876896696`*^9, 3.4748025379754534`*^9}, {
  3.4748025719978056`*^9, 3.4748025725274577`*^9}, {3.474802974869757*^9, 
  3.4748029780480876`*^9}, {3.474820276593095*^9, 3.4748203020141563`*^9}, {
  3.474821459218299*^9, 3.474821462436822*^9}, {3.474821492544078*^9, 
  3.4748214933565207`*^9}, {3.4748215257604885`*^9, 3.4748215266041794`*^9}, {
  3.4748296048913136`*^9, 3.4748296291513414`*^9}, {3.474978374245406*^9, 
  3.4749783748859243`*^9}},
 CellLabel->
  "In[753]:=",ExpressionUUID->"f6586007-f354-47f0-b825-aed2088bf45f"],

Cell[TextData[{
 "Obviously, this version does no file handling and relies on a hardwired \
file for ",
 StyleBox["w", "Code"],
 ". But it does provide the minimal functionality needed."
}], "Text",
 CellChangeTimes->{{3.4748026232182693`*^9, 
  3.4748026777101135`*^9}},ExpressionUUID->"e85dedc1-1dc4-4841-a2e1-\
3c8a8bb947a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "chnlWeights", ",", " ", "colorBasis", ",", " ", "deconvImgFixed"}], 
    "}"}], " ", "=", " ", 
   RowBox[{"processImageV1", "[", "smlImg", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4748026903929715`*^9, 3.474802725611004*^9}, {
  3.474803030968072*^9, 3.4748030390939507`*^9}, {3.474803323876398*^9, 
  3.474803341746936*^9}, {3.474978383743825*^9, 3.4749783843999662`*^9}, {
  3.474999438258254*^9, 3.474999439148452*^9}},
 CellLabel->
  "In[754]:=",ExpressionUUID->"a654401e-f52e-4cd4-b3e8-fc917b1d738d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"findH: Dimensions of h:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}]}],
  SequenceForm["findH: Dimensions of h:", {4, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{3.474999017632127*^9, 3.4749994725074315`*^9, 
  3.4749996906370544`*^9, 3.475000780844813*^9, 3.475001445876753*^9, 
  3.4750026572764983`*^9, 3.525011724241252*^9, 3.811522090705645*^9, 
  3.811522221991647*^9, 3.8115223655861263`*^9, 3.811522586564451*^9, 
  3.811522738475481*^9, 3.811523233666666*^9},
 CellLabel->
  "During evaluation of \
In[754]:=",ExpressionUUID->"f5774c66-957f-4244-bfae-66061d2bcba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "chnlWeights", "]"}]], "Input",
 CellChangeTimes->{{3.4748030508365507`*^9, 3.4748030571149273`*^9}, {
  3.4748033484796305`*^9, 3.474803352978507*^9}},
 CellLabel->
  "In[755]:=",ExpressionUUID->"4c83d77d-f97c-4e71-816c-f0706703b22c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"62", "211"},
     {"255", "0"},
     {"120", "116"},
     {"99", "99"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.47480305857101*^9, 3.474803354368785*^9, 3.4748037297724466`*^9, 
   3.474803775771859*^9, 3.4748054328472867`*^9, 3.4748056553256807`*^9, 
   3.4748073115147157`*^9, {3.4748075999706726`*^9, 3.4748076194427023`*^9}, 
   3.4748082641717052`*^9, 3.4748083153890295`*^9, 3.474809796053793*^9, 
   3.4748141375318775`*^9, 3.474814271802314*^9, 3.474814310402052*^9, 
   3.4748144118923388`*^9, 3.47481452225541*^9, 3.474814598500451*^9, {
   3.4748152043491173`*^9, 3.4748152295342026`*^9}, 3.474820323075982*^9, 
   3.4748208488404074`*^9, 3.474821469186347*^9, 3.474821502043409*^9, 
   3.474821534041216*^9, {3.474829588640205*^9, 3.4748296365226574`*^9}, 
   3.474830260735927*^9, 3.474830359251169*^9, 3.474830469784926*^9, 
   3.4748305662269163`*^9, 3.4748321318847437`*^9, 3.4749012839307346`*^9, 
   3.474901604175483*^9, 3.474912025797575*^9, 3.474916446123189*^9, 
   3.4749170127069073`*^9, 3.4749741970849404`*^9, 3.4749784950962334`*^9, 
   3.4749872430180297`*^9, 3.4749890037280693`*^9, 3.4749990176633615`*^9, 
   3.4749994725230494`*^9, 3.474999690668289*^9, 3.475000780876094*^9, 
   3.475001445908024*^9, 3.4750026572921333`*^9, 3.525011724288052*^9, 
   3.811522090760467*^9, 3.811522222059363*^9, 3.811522365655106*^9, 
   3.811522586576378*^9, 3.811522738482979*^9, 3.8115232336913967`*^9},
 CellLabel->
  "Out[755]//MatrixForm=",ExpressionUUID->"6d38a3c1-6e94-448f-8ef1-\
09ead7e3dc17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "colorBasis", "]"}]], "Input",
 CellChangeTimes->{{3.4748030674014454`*^9, 3.474803071644438*^9}, {
  3.474803358742693*^9, 3.4748033605078773`*^9}},
 CellLabel->
  "In[756]:=",ExpressionUUID->"a89b69b0-0876-4a95-b691-ed25085a5861"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"57.10736846923828`", "43.67302703857422`"},
     {"56.532249450683594`", "55.59086608886719`"},
     {"42.48149871826172`", "64.1858901977539`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.474803074243467*^9, 3.4748033615232487`*^9, 3.4748037298036537`*^9, 
   3.4748037758030663`*^9, 3.4748054328628983`*^9, 3.474805655356903*^9, 
   3.4748073143393106`*^9, {3.4748076000175176`*^9, 3.4748076194739323`*^9}, 
   3.4748082642029448`*^9, 3.4748083154046493`*^9, 3.474809796069413*^9, 
   3.4748141375474997`*^9, 3.4748142732550764`*^9, 3.4748143127452173`*^9, 
   3.4748144133451014`*^9, 3.4748145222866526`*^9, 3.4748145985316925`*^9, {
   3.4748152043803835`*^9, 3.474815229565469*^9}, 3.474820326138384*^9, 
   3.4748208488560314`*^9, 3.4748214702800198`*^9, 3.474821503074586*^9, 
   3.4748215340724635`*^9, {3.474829588671307*^9, 3.474829636538209*^9}, 
   3.4748302627796187`*^9, 3.47483035928238*^9, 3.4748304698005314`*^9, 
   3.4748305662581267`*^9, 3.4748321319003515`*^9, 3.4749012839619865`*^9, 
   3.474901604206714*^9, 3.474912025813196*^9, 3.474916446154435*^9, 
   3.4749170127381535`*^9, 3.4749741971161766`*^9, 3.4749784951274724`*^9, 
   3.4749872430492163`*^9, 3.474989005165321*^9, 3.474999017694597*^9, 
   3.474999472554284*^9, 3.474999690699524*^9, 3.475000780907375*^9, 
   3.4750014459236593`*^9, 3.475002657323403*^9, 3.525011724334852*^9, 
   3.8115220907676067`*^9, 3.8115222220660973`*^9, 3.811522365683695*^9, 
   3.811522586583268*^9, 3.811522738514312*^9, 3.811523233698411*^9},
 CellLabel->
  "Out[756]//MatrixForm=",ExpressionUUID->"ef95764e-6d38-449a-80a7-\
cd4bc4d60b09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorSeparate", "[", "deconvImgFixed", "]"}]], "Input",
 CellChangeTimes->{{3.474803085860812*^9, 3.474803091121497*^9}, {
  3.474803365631598*^9, 3.474803368380912*^9}, {3.474999442802947*^9, 
  3.474999443599439*^9}},
 CellLabel->
  "In[757]:=",ExpressionUUID->"0fa72894-9193-4132-a234-25ba46ae5b0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZSAEN9thw
892ZdjA8atbgNmuav4sdCFNqFswcXOYNlFnU9CMCDL54HDULYRYAouTGbg==

      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZQKDBnjiM
Hbju5bGH4VGzBrdZtlYf7ECYUrNg5uAyb6DMoqYfB3M8jpqFMAsAMTbNNg==

      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIAiIUZRsEoGAWj
YOgCAJCJCCQ=
      "], {{0, 16.}, {19., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{19., 16.},
    PlotRange->{{0, 19.}, {0, 16.}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.474803092421012*^9, 3.4748033696618423`*^9, 3.4748037298192573`*^9, 
   3.4748037758186703`*^9, 3.4748054328941216`*^9, 3.4748056553725147`*^9, 
   3.4748073160715218`*^9, {3.4748076000331326`*^9, 3.4748076195051622`*^9}, 
   3.4748082642341843`*^9, 3.474808315435889*^9, 3.4748097961006536`*^9, 
   3.4748141375787444`*^9, 3.4748142746765966`*^9, 3.4748143139949055`*^9, 
   3.47481441461041*^9, 3.474814522317895*^9, 3.474814598562934*^9, {
   3.4748152044116497`*^9, 3.474815229596735*^9}, 3.4748203285601816`*^9, 
   3.4748208488872805`*^9, 3.4748214715924273`*^9, 3.474821504027644*^9, 
   3.474821534088088*^9, {3.4748295887024097`*^9, 3.474829636569311*^9}, 
   3.474830264558099*^9, 3.4748303593135915`*^9, 3.4748304698317423`*^9, 
   3.474830566273732*^9, 3.474832131931568*^9, 3.4749012839776125`*^9, 
   3.4749016042223296`*^9, 3.4749120258444386`*^9, 3.4749164461856813`*^9, 
   3.474917012769399*^9, 3.474974197147413*^9, 3.4749784951587114`*^9, 
   3.474987243080403*^9, 3.474989007274331*^9, 3.474999017710214*^9, 
   3.4749994725699015`*^9, 3.474999690730759*^9, 3.475000780938656*^9, 
   3.4750014459549303`*^9, 3.4750026573546724`*^9, 3.5250117243660517`*^9, 
   3.811522090795629*^9, 3.811522222104035*^9, 3.811522365696487*^9, 
   3.81152258661082*^9, 3.811522738521796*^9, 3.8115232337256317`*^9},
 CellLabel->
  "Out[757]=",ExpressionUUID->"6cd50587-716e-4e7d-8514-be73b241d7e0"]
}, Open  ]],

Cell["With a more realistic image:", "Text",
 CellChangeTimes->{{3.474803121020793*^9, 
  3.4748031271755066`*^9}},ExpressionUUID->"d651071c-2a71-49a7-bf1f-\
5ad7176ba3ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "imgPath", " ", "=", " ", 
   "\"\<~/projects/Color-Deconvolution/Images/TinyTissue.jpg\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.474803155996436*^9, {3.525011669656756*^9, 3.525011673291562*^9}, {
   3.811522623377006*^9, 3.811522657156569*^9}},
 CellLabel->
  "In[758]:=",ExpressionUUID->"581c6d91-5b12-4830-b613-a4585c615231"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img", " ", "=", " ", 
  RowBox[{"Import", "[", "imgPath", "]"}]}]], "Input",
 CellChangeTimes->{3.474803184255006*^9},
 CellLabel->
  "In[759]:=",ExpressionUUID->"e98112f6-15d2-4500-8bb0-43c343aaa5e9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
J/inWg==
    "], {{0, 67.}, {50., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{50., 67.},
  PlotRange->{{0, 50.}, {0, 67.}}]], "Output",
 CellChangeTimes->{
  3.474803185942085*^9, 3.474803730068915*^9, 3.474803775896688*^9, 
   3.474805432956568*^9, 3.4748056554349604`*^9, 3.474807321080887*^9, {
   3.4748076000955935`*^9, 3.474807619567623*^9}, 3.474808264281044*^9, 
   3.4748083154983683`*^9, 3.4748097961475153`*^9, 3.4748141376412334`*^9, 
   3.4748144192186346`*^9, 3.474814522380379*^9, 3.474814598609796*^9, {
   3.474815204474183*^9, 3.474815229659268*^9}, 3.4748203348099813`*^9, 
   3.4748208489341545`*^9, 3.4748214752327967`*^9, {3.4748215083554645`*^9, 
   3.474821534150584*^9}, {3.474829588811269*^9, 3.4748296366315165`*^9}, 
   3.4748302785207253`*^9, 3.4748303593760138`*^9, 3.474830469894164*^9, 
   3.4748305663361545`*^9, 3.4748321319783916`*^9, 3.47490128410262*^9, 
   3.4749016042691765`*^9, 3.474912025969406*^9, 3.4749164462950425`*^9, 
   3.4749170128787603`*^9, 3.4749741974753933`*^9, 3.4749784952211885`*^9, 
   3.4749872432831154`*^9, 3.47498901011759*^9, 3.4749990177883015`*^9, 
   3.474999472632372*^9, 3.474999690793229*^9, 3.475000781001218*^9, 
   3.475001446001837*^9, 3.475002657401577*^9, 3.525011724444052*^9, 
   3.811522090827373*^9, 3.8115222221552973`*^9, 3.811522365735079*^9, 
   3.811522586639607*^9, 3.811522738559272*^9, 3.81152323375628*^9},
 CellLabel->
  "Out[759]=",ExpressionUUID->"7349064b-4fa6-4711-b462-18f5c6d1c48b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"ImageData", "[", "img", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.474807377510375*^9, 3.4748073888555737`*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"d455be22-9865-4903-82f9-e7dc351ac407"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"67", ",", "50", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4748073903224907`*^9, {3.4748076001268234`*^9, 3.474807619598853*^9}, 
   3.4748082642966633`*^9, 3.4748083154983683`*^9, 3.474809796163136*^9, 
   3.4748141376412334`*^9, 3.4748144215774207`*^9, 3.474814522396*^9, 
   3.4748145986254168`*^9, {3.4748152044898157`*^9, 3.474815229674901*^9}, 
   3.474820339762948*^9, 3.4748208489497786`*^9, 3.4748214766233234`*^9, {
   3.4748215094335136`*^9, 3.4748215341818323`*^9}, {3.474829588842372*^9, 
   3.474829636647068*^9}, 3.4748302799715905`*^9, 3.4748303593916187`*^9, 
   3.47483046990977*^9, 3.47483056635176*^9, 3.4748321319940004`*^9, 
   3.4749012841182456`*^9, 3.474901604284792*^9, 3.4749120260006485`*^9, 
   3.474916446326288*^9, 3.4749170129100065`*^9, 3.4749741975378656`*^9, 
   3.474978495236808*^9, 3.4749872433143024`*^9, 3.474989012242223*^9, 
   3.4749990178039193`*^9, 3.4749994726479893`*^9, 3.4749996908088465`*^9, 
   3.475000781016858*^9, 3.4750014460331078`*^9, 3.475002657432846*^9, 
   3.525011724475252*^9, 3.8115220908391113`*^9, 3.8115222221911793`*^9, 
   3.811522365745919*^9, 3.811522586651112*^9, 3.811522738566743*^9, 
   3.811523233763238*^9},
 CellLabel->
  "Out[760]=",ExpressionUUID->"ba82f0c0-4463-49dd-b2ba-4e0a5631687b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "chnlWeights", ",", " ", "colorBasis", ",", " ", "deconvImgFixed"}], 
    "}"}], " ", "=", " ", 
   RowBox[{"processImageV1", "[", "img", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4748031956896515`*^9, 3.4748032156221747`*^9}, 
   3.4748032463176365`*^9, {3.4748033777067084`*^9, 3.4748033939838943`*^9}, 
   3.4748076136651154`*^9, {3.474978410317528*^9, 3.4749784108174443`*^9}, {
   3.474999425264494*^9, 3.4749994261546917`*^9}},
 CellLabel->
  "In[761]:=",ExpressionUUID->"ddb1049a-bb61-4050-8bed-03ef51acf705"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"findH: Dimensions of h:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2752", ",", "2"}], "}"}]}],
  SequenceForm["findH: Dimensions of h:", {2752, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4749990182724442`*^9, 3.474999473100897*^9, 
  3.4749996912773714`*^9, 3.4750007814860735`*^9, 3.4750014465021725`*^9, 
  3.4750026579018908`*^9, 3.525011724740453*^9, 3.811522090902602*^9, 
  3.811522222237956*^9, 3.8115223657871237`*^9, 3.81152258668292*^9, 
  3.811522738692734*^9, 3.811523233888144*^9},
 CellLabel->
  "During evaluation of \
In[761]:=",ExpressionUUID->"109adb87-946e-4d10-bdaf-e1480ee2bdba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["deconvImgFixed"], "Input",
 CellChangeTimes->{{3.4748076306231136`*^9, 3.474807635120262*^9}, {
  3.4749994289658413`*^9, 3.4749994304338865`*^9}},
 CellLabel->
  "In[762]:=",ExpressionUUID->"dc2b9e7d-c129-4720-9a2b-6014662809fe"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJy1nQ+MXVd954eCQ2KyrJPGaeI07RiYkHhDMAkDYep5b+J6rGRi3MHwQpgN
MKYY6AjoENahuJQad701o0Q1boe1HGVlorUSxoSmWblyI0V4swuibtPNhrrQ
tDRu1FSRuxFRKrOlWtDecz/n+zvf9+48Z5y0kcIcbs6799xzvr/v7+85d/WH
fnXLR35qYGDg0+dW/7Nl62duuP32rZ999znp/2zb+vHrrv34K6vmL1b/Xlv9
m9o/035V+/DCSKtqDqzYuqLd6XTq9sffv7o9MDBdtw/81VVVe6xu/+6Ph6s+
43X7d167rvrtVN0eef7nqvZM3T540enq72Tdvu+FZ1udzj11++Yffrd1eOGh
uv37j/91z/V9dfuT971QtQ/U7c+f+8rqWQ/U7Tt2/33198G6/aof/Kjq80Td
/ugf/6S6z/fr9qVfPFH9PVa3vzlztLr+SN1+5M7/Wf39dt2+cvyR6rf31u3/
eMOfVX931u2v/afXtNV+8+vfUr3Lrrr95f/z5moMw3X77a8Yqq6vieceXlgV
76I5vPDw37Y0J6Mjz7c0nzd97Zz47ad/YWV1z6G6vf7PLqyeO1C3n3761dX1
lTY25vCH3324+ru3bn/nioMx/j+98WvV/Y/Ee2mu0vseXlio23f+/KPV3/vj
PuqT2uqz+qN/HPP5uz8+EvP55Kt+r7r+pD336bq97Pfujetvfv0fxBjSb7VG
T3zh/1Z/19bt4dv+X0vv24sxzdX7v/KOaO9Ze2PMP9d31O2v/ucL2pqThAdd
T++o/u/+8z+p2nMxh53O7rq94ZK/i/ZffvAfAmOOSR8/c3Uk3n1gYH9gW/Pz
7GXfqf4eteceiOdKFn790vNCjv70xqurd99Wt7fuvS5w5TJ16P6fiT4nR59q
qQ/4591f89hzgSvmkz7/6+1XhCy/4tCV1XMH63brqUviepJHjS2tu2QQjB3N
8v7VvvjR3P7GLz8Zc4KsbTf52mU88L2Q607ndOBKcvqxT95X9T+V1/dLIadp
zoVV5vbRWEdxUVpHvXtqa54TToSNJMuS6398dizw83dXvy/w9vA9E4HJ765c
Fe00V+oPTnY0eIPru2yudhrnHIv51HslmVW79dT+avyH6vb4I+dXYzsZsqP5
B6u7DANrA1fin8RRuv7D744En1w5Phqck/CgdUceh4OjNG/wLdg797d+Nubh
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
R/9SWzsfuNI9sd/QZV776nkcr0cibzVjOn172Fdux4rn2V+8EDy2WD0VuuNk
4/pS8kFniucvBTOLYaOfjl7KPRmz54lO2zgnsn1yZ0vr/tOTc9X119b4qeQ0
xb7azHmqR3q4JXx2n5v0QLSlvzyG6fupqWGYibbwQ64cngFL6A7071DgVmMm
XzAV2PD9O8ISvgN2F7EC9Bq13GCD2N1IjFmYpz1onDyROS3FKx5rCUuKj2E/
dGz+TwR3CWP96vdeis56OXzl+D8bTLqPSey92ABuq5e6zVR3QT0q9ckXtct9
aBMP/6b1x67Gx78/uEU8hi+GHiSvTT4xncmjdqp9ld3u+yM454F3IXZa/FM/
z03jJx/tezqQHWz1McPVhOF/udmQnWh379nkt+zJGsr3Sec2vKHN+FN8bEVb
8yzuYp7ngscGsj3JvmP32c+Mq6Xzxglb6xMvCW/94qv92r25A7cH1PZaC+b2
aZvz5+o28e27oq05pA5wT9anlweu/Dw33+ND7cqCcRd2GhjwmsCB4CjpOI+t
Oc+w35P+xM95X88fUaM1Y/r6WPCh7uM1kMS+WCO4a8D4/Nq2sHd44XV1Gw5H
jrDh4S6P//TDVa9uWszO78ctjqt+7X52lPPPUrDk7X6xVo+HIIPHDG9zMSfd
NTzNOorEG7JJEi8pPo+e2hG2lriIs91mMye8N3Lf1DmjK9lfNhwcKC6ifmww
OEdjAycnGzrU7S4/dxG9xppSK8s92fvPOLEb4T1iYrTZW4HNyXxiMxCTmWtp
DoWrXh+8e2/FCVuj42YDM//sc/G8sMcHjhs3nrK1Kzp3IMuC7xXq3dOh6y8n
d9Avtu9tePuk2aKnYk48Pqb3Ip9S9quWvfNvDPz4HlL8uIG4Lk5Df5UzIrS+
7H1AxqldXBW8JNmBG8F89k8DDxqn78Xw2Be/BVe+J8hjX4ytk3XxzpZqjfys
SN/b5XGbfDaFyWkz7+x+Yu++VMdVN1ecGVf4CCWG6b6q29gac6+/2c/W6pfT
PBu7zjnZ393PfaLWhXfx84vI6ezNevPmdvdeyOHQm8Ik+8W87os2e8ron2IR
alNTuir6aA7JB80bF5XzEMQhec9X3aY+cNgwfCD0pmqKiI0cyPyZ5GYw7E/p
wawr67afk+D7iJ3zPd/Rm0/pbyefsP4nG9jwPv04rRdLHifX9V79uJS81Yvp
8TPFh7u5bs7moayj1pp45u7AmGwzYkrwALUN6FDfb+s1dZyRCFZTvFT4ecfN
dwQXpXjmYvsscv1DvS8gn1lkPFD0gp93obwzefCDoRPlm1QyEjE99rReHbEX
Xc/+Zt0m/vZk/Vv02toGxqgZPma6ssQlurlocX+wW/abtrTz25lw+K+Jq6XE
4nrtfz2X2jx0Fvs7PH9dcoXSfZy9NhO2k59fp7VOPqPs+du//PHoU+ElfMaU
v9MawWnMT35ujE0Yc53FmSTbW2VNF/LYSgwB20a+SYrVXd8ueFhn/iDXORPm
LZanQG+yx2F/fq+yZyGfpxTr6LUTaru/6dfxHeZCXnzPjuvNxfYN9bPxzhRz
6PYjFrftF6sJ7MddvX6ly4ifD6Ax+xl06DviS75Hnj0R+8KWFt6w2ehPrSBc
l/IpWutX/eCzYUu/+m8+3S51RJPBV+yzGAt9N5D/odYLuwXbY9zskO1h68pf
IGft+ybqXFRu39QWDis5sljf+na5z7C1V7fLnJ8XeFNsEP/3x3Wb8+WeNzuB
/dfsbScu53vkOe9iIGTB8wKOq8VsLbfHXM/26t8X29+xlLiEt3ux172/43is
Ufc5GCcDY7KNnbv83Co/M4ezMoasP3gjFwNvpDyL8ED+hfnB7mI85B+5Tvwf
vkLGF4y7eFaubWtpjcS9xGzvinU8vPC2iOkNDNzY1hoJV3Dgu9pg48tVn1sz
d91etTfV7Se+8JmqzzvrNud7cx/03Ujuk2yzK02f4nuyl/y44YdxEoteGe/S
nUtivfAdSjyt7Bf+2qLxkF6/QPf0GK+3l7qXRO3efbhey7qYjwP2ThpuGT/1
6lznjERiR372FDLo+0nxEzlH9P4ssx8Mu5o69qHgt4GQ2c3t7j1i7jOuqXHl
52Z7PST1OZ2wCZWr4rdXmO4bzPyT7K6hun3pFzvVvG3M9nzKi820WaPRqv2h
zFGXpdhyXK88msDh4YUt5heAMX8ufofv9/e9Dydivbrtds9jNnMBYAwZ9Fhu
v5iYc91ScHWmeKzrO2HJ285jHq/wfZH5PI1YR8kFexnwofzsPj9rl9p1fAHi
nPuCT7prY06NCoclTjIcfmKOdYwWDHOdHAHzSUxD5zutj7FRj/pM2FrSWU8/
/dvBYwkz4p/qt9X1Kdla1XPek22za+x64rFp465NbeGheq+cU3sqbDbk/QXT
WWMNnOBvLr6+/ertF6uf8TpSbzft+WbuoDcm1j8ee2ZceR/GedLe8YRhmzFw
vij+I+dL3BX6UfFSPz+EGOyY2RvYWsQ3wB5xDD0r2dGMIe85qtvESzuhoxVf
wj7hXcA5XOp+a/r2hzgTf5DYQsqxKl4Kd92QdWWKh03meNdgtKsxRDvpRGEs
2VrSj+imkdCzyh+hoy8Ovan3cj11pvpk2aK+N9/9U+7TbLvf6nESx4nruF6f
9Gzy4P1sfv+tn6/Sr+4Lu31tS+suWwtewkfDTmN9qRGlj3+Phloaj7vSJp4m
X344sMcZI8g4/gXcDm4HQycK/+n7IOIoarGIX5ELu7zBM/R/p2HvFtODN+U+
Q8FvlSy0dMYCGIOjyAetCbtOtlavn+icI/3omHHf088DIQbyvWyvpnqVcyyW
wh55j5PTbvp9/eqc+8Xz+9UR+T37tfvVKPK+Oxvvy17FocCDc5f0IPqRNjkd
bHti6X5GDW1ip+DE6wmJp8n+TPxW9nfLroNLiZ1ik7/J1vraWOtO5x11O383
x2z7680mx+5K8VXZ+ejBG3NM9WPV9Voe6lyk7Ddy/UMR51fM2THjPr7nKMHA
crNd78m6O+V2B2LMuj/ximvDd+h0rqrbxGr+qaF/vd44x2oadl2/+FW/c5mW
4j/27ul+MZnymAz1n0U/qmYVn3G7yRe2Fnu7dNb09ZHXJr66O/PMZHAjdVmM
zesMOaNpxvgz9kSH/bPhkg9X7Q2hpxR/YPxXtMs4qbnFHiPekewx4TPpVuEN
fbeuofvy3s+21lHfIHPO9/X1dactf+ep4DpqnBgz3MsYWHdkBB/tKut/gdl4
zZib18A3r4818NabK+yOezTjvX6+RG8NmNt7i9lvPld8h2U8cKKzzsibMFec
6/Wo4Y36KL6RQX98SeLn7MsGV8mXLPuCN4c95t9F8rNKko2kGELiFuGK+ts3
Gbdsj/Ho/rzvYF7fD7Z0bgaxiA2hQ2Wb8du35Wel/blXZ/styelzrd71BQNH
GmsNZoj5E7u+wnh1o/HtcOBHfIu/f5Hp98GwLRXrIDfxbN2mTuDHpke+3cCY
7wXDhjxu108HtwifnsfxM0mQr7nAm+cLuuO9pxrY9ro+aiHACTZ8GbNqw3J8
I3SlbAY/PyfF5MU/ad9NwfkG2ydY9m6D58nAg/OMOARbqJy9pvt4HMC/14Yu
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
Y/j/PoUW+A==
    "], {{0, 67.}, {50., 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{50., 67.},
  PlotRange->{{0, 50.}, {0, 67.}}]], "Output",
 CellChangeTimes->{
  3.4748076362913947`*^9, 3.474808264780877*^9, 3.474808315966962*^9, 
   3.4748097967098536`*^9, 3.474814138125521*^9, 3.4748143263511953`*^9, 
   3.4748144285600524`*^9, 3.474814522864633*^9, 3.4748145990940375`*^9, {
   3.4748152049744453`*^9, 3.4748152301595306`*^9}, 3.4748203425597334`*^9, 
   3.4748208494341383`*^9, 3.4748214787325497`*^9, {3.4748215114802446`*^9, 
   3.4748215346661797`*^9}, {3.4748295893400135`*^9, 3.474829637238017*^9}, 
   3.4748302823272963`*^9, 3.474830359922206*^9, 3.4748304704091463`*^9, 
   3.474830566897952*^9, 3.474832132477851*^9, 3.4749012846026487`*^9, 
   3.474901604753257*^9, 3.474912026531762*^9, 3.4749164468887167`*^9, 
   3.4749170134411883`*^9, 3.4749741980376444`*^9, 3.4749784957210093`*^9, 
   3.474987243782101*^9, 3.47498901460119*^9, 3.4749990183036795`*^9, 
   3.4749994731321316`*^9, 3.474999691308607*^9, 3.4750007815017138`*^9, 
   3.475001446517808*^9, 3.4750026579175253`*^9, 3.5250117247716527`*^9, 
   3.811522090942335*^9, 3.8115222222783937`*^9, 3.811522365881958*^9, 
   3.811522586725424*^9, 3.811522738732312*^9, 3.811523233894657*^9},
 CellLabel->
  "Out[762]=",ExpressionUUID->"f8163f55-4f81-42a1-9c77-98da57cb0f31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"ImageData", "[", "deconvImgFixed", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4748074154161344`*^9, 3.474807423765077*^9}, {
  3.4749996550447717`*^9, 3.474999656059909*^9}},
 CellLabel->
  "In[763]:=",ExpressionUUID->"8aa76523-2274-418a-8e6d-e3bff35465d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"67", ",", "50", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4748074283062773`*^9, {3.474807601001269*^9, 3.474807620114151*^9}, 
   3.474808264780877*^9, 3.474808315982582*^9, 3.4748097967254744`*^9, 
   3.474814138141144*^9, 3.474814430293995*^9, 3.4748145228802547`*^9, 
   3.4748145991096582`*^9, {3.4748152049900784`*^9, 3.4748152301751633`*^9}, 
   3.474820343981563*^9, 3.474820849449763*^9, 3.4748214797949753`*^9, {
   3.474821513214497*^9, 3.4748215346818037`*^9}, {3.474829589355564*^9, 
   3.4748296372691197`*^9}, 3.4748302859934607`*^9, 3.4748303599378114`*^9, 
   3.4748304704247513`*^9, 3.474830566913558*^9, 3.4748321324934597`*^9, 
   3.4749012846182747`*^9, 3.4749016047688723`*^9, 3.4749120265630045`*^9, 
   3.4749164469199624`*^9, 3.474917013472434*^9, 3.4749741980532627`*^9, 
   3.4749784957366285`*^9, 3.4749872438132877`*^9, 3.4749890172410574`*^9, 
   3.474999018319297*^9, 3.474999473147749*^9, {3.474999667507537*^9, 
   3.4749996913242245`*^9}, 3.4750007815329947`*^9, 3.4750014465334435`*^9, 
   3.475002657948795*^9, 3.5250117248028526`*^9, 3.811522090970748*^9, 
   3.811522222316935*^9, 3.811522365894823*^9, 3.8115225867579536`*^9, 
   3.811522738739046*^9, 3.811523233920205*^9},
 CellLabel->
  "Out[763]=",ExpressionUUID->"471ae1b8-b793-4e8e-866f-5b3250c5c2b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deconvImgsFromFixedW", "=", 
  RowBox[{"ColorSeparate", "[", "deconvImgFixed", "]"}]}]], "Input",
 CellChangeTimes->{{3.4748032236826625`*^9, 3.474803229524954*^9}, {
   3.474803401388296*^9, 3.4748034035596285`*^9}, {3.474998693459679*^9, 
   3.474998702517829*^9}, 3.474999348317072*^9, {3.474999660057989*^9, 
   3.474999661010657*^9}},
 CellLabel->
  "In[764]:=",ExpressionUUID->"e1a2a199-a77d-410c-b4f4-14a874e6d5bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyN2w3IXmUdBvAtp1tqZcvPltmyTM2ynDJde87xazLbUnNpuLQ1TR2y5prp
Ej9S/KhkoKFoOAyVZIliZigqDKlUstQstZGWH0NjYDFRWhgpnd99ul5uTu80
4Xie93nOue//9b+u/8d9n7PpJ5957GnvmjBhwllTuv8du3jlIStWLD53wVb+
OHXx0hn7LfXjYd2xX3fs1E5qt1u8Xbv0pOnt9c/u1V795gHtle+d3c569cPt
jdv/o1nz2oZm3qZ1zU+f+HM5L1vzWnPhlC3acy77azNp4xvN6Y+81ezy/aeb
h864t1m76sFmzzlrm0sPeby5/fJt2n13/2x77d/2bWdO/HjrOmNMve3FZjTr
1ebI27dqz/rcDu2hj09t16+f3Lpn07r7myf3uLF5dO7tZRzjrdrtl+V7x/TT
H2mufvPu5plJ15Trtrzm5mbf3X9WvvvDxf9sDjjx302wnHTTQe33PjO3nG+9
7v3FXmMteOq3xb7Dd36p+dOiVwom92dumDdMe3LsuvN2eXf76Nx92sVXzSi+
ueUnO7UvjJ5vjLfNY38v8/1u5h7txFv2bJvnd275i53Gu/7ZW8fsv+CUZ4qP
4DIHP8KxZNma5tbrflDmNmfscrCbD1/fcHD70j4ntPff8Pl23Q4fbMMJ+5zN
wVfm47vm+R82c9Zu2/KJcdgKBy42rZvV7jlnVOzlL1zgc8olH2r32X9mwThj
6ifbDxyzdYsrWIzpjO9tV+xYxjXvnWdvWbjDg7nhwIf74HVm6/zVE4oGNr5x
RDt38lfbw3f+erHD9/G169+6+45m5sRbynw+G5eNbHlm0vbty7+f2NINn6za
7dAyBhxsMBeNuW7tqsPbBU/Naxfe1Zbf2Mrvi6/6efEvPl3z6xP2K/oTA3zN
DnyYFx/06oDdffDz678e3r/d9dtHtxcf+6Uyjzld5/6Fdz1Q9OQwFl58xkHs
Mxccp37nU+30048sfLx196eLbmkKJ3gzFwwONtIdzp2Nha8LTlnY3nPHMYU7
Y295zUfL2OaEGS+JSfoTq/QHC+2KDxhe2foLhXdz33PHE2N2J8YcvuNLnOKe
FsS5cXDhkDue3OMjJd75zHw4+NjxhxVt4Ty5xO8w+h6Gux44vmgcP/TY43+g
6JsmYGGbeHLmU1jYzD+w44QNNOManODdsfGNh8u9xsOp39nDX860xnb88qfx
5ChxDc9zr7+n5AF5EgbYHHTpPv7DFZ2z4Ue/2b1duff7yrh8T9Pxqfn5M/HO
n+IQHlj45PhfzSmcig3z8YUx3OczPLg1lph0v7zieuPJVTCwC881N3iDmy74
gQ/xSZNiynnJsk8U+/nZmM7RNjv4Eo+pBeY0Jvt95lO+waWx2Qevg56MwX/B
JRfA6brkOGMbi918QkewwGVsuNnBD2ykGfzAikMxDgvM/EUPfORvsRYdiCnj
Rc/BkTnCE9tcw1++w6v54WCvORz+dn38izP3skWc0IiD1uFjh3xBm+7DHb/J
dfXBHn7iM3PL6zAnP8JE+zRrDL+ZF17jsplvnfmBNv2dmAh3fOlvc7kPL3Ck
DtBG6oXcJTZcF32zz9h4ghFm18LgXnO75qb7bij3GHP5/Gml73CWz+mH/uRL
ON3je35mCx9HM75nNx+ERza5J/53Pf+4x/XGphU20Un0zh/0qQakXvvNdXQl
xmGGjV9dk9jGvftxx//mjg9T982dXoke/U4nDjy4X53nB7zyAw3ixH1ymftc
aww48W1O+oKFH92Xe/iMZuUkfDx0xoGlrxBPcLmfb3CSOeTb5Njog43Rur+T
19gBe/JarqVFdc18fIiXcJLcnnwGhx6FrvhZnMOBe7pkH3voWd2GAw+O6Eue
oPnkFRjwKEbZw06f/cZGfgyO9JKuYRc84SZ1Ty699JCjylx0KW+4LvpyHe7U
VDVNn8DPvmOzQ27BJ63hmAbVHGPjRz/puOm+XVtxwT44xBW7wrsj+Qcef7Mf
jnzviH25l+/ZsWHagq6OnVj0wr++T74SU66BQU1Vm3GiHsqPtI0HeZ397FY3
cEaD8Or5/IZ/WmQDDPIcm1LLgie1ObY7w+UIDvjyN+743xxTb1tc+n160W8k
xyUvqNt6PtyxE970lenx2Z48QFM+w4sLf8MTHbJt2xXXjumrxhH9pPdnb9YT
yds+07v8Eb+zk25iI9voXdzSCs3AxufsZZu8wrc4oUcY9FD6SmexJPbMZUy6
dcCeOMQHzdT6Sp2v9Qaj6x35LX2B8ZM7+J5t8iTNmJf98oj4ZGf0L/fQOT/Q
uvwgJvTEetsdr/9KF8vHlXHwkf7b79YAuOcTY/NxbfN4fOSza+FIj7x8/uqx
uo0fMScG2CQO0hPxm/pC7/I/3H2/3ftVHmUjHHCxlf1iyMEn4hzX7Me32JL3
8O2o1241Fr7NUWMJX+IJl3VOTp5L3YSR3sUGHOKFPWyHhX74lq9xFZvwCYue
hc0+w2oMcSeX3PbiyUVrOBVvzmJGrhhiqHNSOEo+i44ceMr16dVcYz0gLmgY
HnykbuDFnD6LA1jko/RDfC8n4VPciGe+/sV5TVlnn/utr5WxYMRLegRYav8P
cQyxJGZS21MTU3P8Jj/gzLVqDT5woG6wh71s9ZnfrQnYJUbkPnazH7845R++
sJ4T//KWvkDM0TFOcVlrKTgcQxzprf2W2hAMwZV1VnKbXCKe+Yu25TP28iF9
yMNwZD2CR3nEGHIHPMbVP7pP7CXWfJf6T3/vhGOIJ71JOIim0qclJ9AXHPDT
OD2ohTTjc2oJnsSLGgFz1mp02efz3k9ydNYNMIopPYsxYRsPx1BrNZ7YHl0F
U/hJ/sr+VnpGPqOf9O10JX6Tm+BgNy3xsxxNg/KgseRH46Yv5Au119Hvqzz4
P7lqc0d4qjnL5/TsPmdvpV6/s0d+FZ9wsJuecCLe+ZR2aIbv4aYZePwtdoyL
M9dmv3Depi+XHJD4fDvba47qHBUf1Gt0Wkp8pMf0m7/ZwzZxC0/WuXIon+JF
rfC72p91ASz6EVpTl2Cgp6Nf/mLBcOP2Z7d1nhra+3aaGw9n+pnk6ewJZV+T
trPHJdbxIt7Znn0m8YIjfMl1qXf4oSU5S8744/JvtgfvdUY5H3Di+WN8xJ7N
Ydncb8M8Xfdn4SR1lD8dtKNmpJ7hRKw7q+nqROoC/lwLF/3B6BjNWt71okva
H29xZsGSNXRq8//Dy3jHEEf6fzlML6MnNQ9tiRWxnP2grNud1Qmxrz5mzYoX
mOQGdR0ffznq1K4XPa3geWG0qM2ajf/Sk9d1e3O8DI/xOJW/xKa9gW0e+0b5
To3PHqoawN/soycaww9scpdYyNpDL+86GpQfsn9Hj702e9/Jj/wVTPXadFjv
x7N9+Fuds+esXdXF5xXdWmVR6TXhkzsdap18rNd1qC8wZG8GF2xWK+hOPlBH
stfjyPMYGLIH4TzspWos43EBf40n/ki8sz3rfnXO3/QVe/WR9vatKflWX46v
7LGKcbGRPd7shziMq4dRd7PXmT17vWyNY+jnOo5qLPWRa9NvZV51xcFW9YTO
2Enz+GCrHhEX4ojf+Vveoifc+c1YOGB7vwd3xdgzmuT/4BjP53Us1/4fHvXv
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
rMAE738AbqPtJw==
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyNWw+IXMUZX6Ur9tBwFjfYQ8tFsqKLhq3tSTzuzdukudAuqaxpnthDw0W8
YBe1q2XberRlOThYFgLLwcIRCCyCcOwhhMBBEAJHQJADQYSDIAiLIJQFQQoH
Uih0vvn9vpnZuzMqjO/d2/dmvv/f7/tmcuy1P5+/fG8ul/vL/fZ/5y/97dS7
71567w/3yR9Ll9781bNvyo+/seNZOzYHsybLMpPLLdpRsffzZnOwYEfd/l2z
f1+z9zd4XbPjqr3/0P523d5/bu+/tPfb9nrLXj+xz96315Ybm4MV+3zGXkt2
TBlZS+aW9eRZlhXtezl7Lbi1crmu+z7Lttwam4OBfbbh73W9zcEXdnzlrvKu
0JLLld18mHuBY8WOZTe3XPF3x76z6obwIrzJ95hnnfzc5G91J5csW3J8iGz0
HrLJyN+s/Xua/NWdrDAH6Jc1MXfT0ZDL3bH3e05um4ORkxt4vE0dzLh1QXuL
9C9wvczzozLGO9tuHsz1gb0OKbMVJxuRv1xF3tBH3a8DnjLqIEfdXLPjY3v/
kaNddS9DaIQ+RVdfU/dD6v8j+/enXh4yt+pC6FQZ5nINrtO0922vF6x3h7ys
O7mAny71u5vId7ncpL3P2/ernHOG8hW+etRJxc0LutdoA3WnG+i75eaB3m7z
+aeU4TXSMEysrhJZA3KvUu51t16WXXHPMPdVyg0+owM8Nqi/JdI1SlQvwoc8
g85n+W6T9qp+OO/1r/xCL+/Tzwqi70Sf5XJ9J0vYidjgjuWhlyi/8j7kqTbZ
9TYHWb1Pufcj318hr1P03Zq7Qh812m6TcpoinU2nD5kHfM3z3bKzEdCxRD11
OKfIe4nfdb1vCg2if+FD5Cfvib2KjoItdZ29IZ41aK8b7lvQ0PY+BZspkial
revWwrVCGjPKaS3y6TrlpnzPkKcGaW5yjabnAzL9kLa1TT52ErlHHMx7vWDe
NuereTuGT/So81XaodrDYvSN+tQ89VOh7bXp613Os+wHfmvy3czrFzJWX1Jb
6ZKWrQS84Cr8wLbFb3apn4anFTR2vTyg0yZtYJn2teJjN/hbon1PuIH7Emla
47wN977wBLu97nxT4xveLXGdq9Rx22iuE10gtowS8SPw06fPbJOfAn2k42Wt
dgW5KA3Kz0ok3wV+W/V2jzhcpX2tUi5tfrcWzd8iH1ci2Xep53Xmsx7XrCfw
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
7XwUq6aN7u/+H79nMjQ=
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztycEJgDAAA8DiQ1zDFXQCcYM6QQV9FYT6ELe3ncM7SCBk3K94diGEe6gV
07OUkt6tb+NIeZ5yO9eaKQAAAAAAAAAAAAAAAAB/9AHf2Qh2
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.474998704969777*^9, 3.4749990183505316`*^9, 3.474999350800254*^9, 
   3.474999473163367*^9, {3.474999670974622*^9, 3.474999691355459*^9}, 
   3.4750007815642757`*^9, 3.4750014465647144`*^9, 3.47500265796443*^9, 
   3.525011724834053*^9, 3.811522090982201*^9, 3.8115222223290997`*^9, 
   3.81152236592873*^9, 3.81152258677104*^9, 3.811522738746449*^9, 
   3.811523233927484*^9},
 CellLabel->
  "Out[764]=",ExpressionUUID->"fc4e7432-976a-48bc-b9ae-34b2e29beaae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["function [W, H] = findWH(V, inputs)", "Subsection",
 CellChangeTimes->{{3.474292333769515*^9, 3.474292427518339*^9}, {
   3.474292560041461*^9, 3.4742926449549675`*^9}, {3.4742928104589405`*^9, 
   3.4742928535496564`*^9}, {3.474292971865424*^9, 3.4742929747713394`*^9}, {
   3.4743035019971533`*^9, 3.4743035692531805`*^9}, {3.4743036029671993`*^9, 
   3.474303610254181*^9}, {3.47430416564487*^9, 3.474304193881138*^9}, {
   3.4743042759789476`*^9, 3.4743043061070147`*^9}, {3.4743043517285776`*^9, 
   3.4743043531044135`*^9}, {3.4743773111095066`*^9, 3.47437731821879*^9}, {
   3.4743779599768853`*^9, 3.4743780133359184`*^9}, {3.474396136611028*^9, 
   3.474396138013768*^9}, {3.4743962473651443`*^9, 3.474396290725396*^9}, 
   3.4743963360494843`*^9},ExpressionUUID->"346361df-5a8b-454e-ae6d-\
f2d5d2f01ff3"],

Cell[TextData[{
 "The ",
 StyleBox["findWH()", "Code"],
 " function performs an unsupervised calculation of the color basis matrix, \
W,  and the unmixed channel weights, ",
 StyleBox["H", "Code"],
 ". It uses the Non-negative Matrix Factorization (NMF) algorithm."
}], "Text",
 CellChangeTimes->{{3.4743962914111805`*^9, 3.47439635632687*^9}, {
  3.4743964160680084`*^9, 3.4743964238454223`*^9}, {3.4743964914107323`*^9, 
  3.474396590366246*^9}},
 TextJustification->0.,ExpressionUUID->"47e3c231-39bd-4bef-a360-98d9f73574ca"],

Cell["\<\
function [W,H] = findWH( V, inputs)
% OUTPUT = FINDWH(V,OPTIONS)
% inputs:   V is the sample matrix (nsamples x 3 original channels, R G B)
%           OPTIONS is a structure containins the following attributes:
%                  .INIT: the color-bases matrix for linear unmixing
%                  ('none','truncated','hue')
%
% outputs:  OUTPUT is a structure containing the processed data
%           OUTPUT.W is color bases matrix
%           OUTPUT.Hl is the linearly unmixed weightings
%           OUTPUT.Hn is the NMF unmixed weightings
%
% NMF code uses connectivity, modified from NMF code by the Broad Institute:
%   http://www.broad.mit.edu/mpr/publications/projects/NMF/nmf.m
%
% The NMF algorithm is defined in:
%   Learning the parts of objects with nonnegative matrix factorization. D. \
D. Lee and H. S. Seung, Nature 401, 788 (1999).
%
% The linear unmixing is described at:
%   http://home.planet.nl/~ber03728/4N6site/improc/decoplugin/decoexpl/p01.htm
%
% This code was created by Justin Newberg
% Last modified 24 October 2007 by Justin Newberg

S = size(V);

options.ITER = 5000;       % Number of nmf iterations
options.INIT = 'hue';% Pseudo-random W initialization
options.RANK = 2;          % Number of stains to be unmixed. FIX FOR LIN UNMIX
options.STOPCONN = 40;     % Another termination criteria for nmf
options.VERBOSE = 1;       % Verbose mode
options.RSEED = 13;

rand('seed',options.RSEED);

checker.options = fieldnames(options);
if exist('inputs','var')
    checker.inputs = fieldnames(inputs);
    for i=1:length(checker.inputs)
        checker.type = checker.inputs{i};
        checker.value = getfield( inputs,checker.inputs{i});
        options = setfield( options, checker.type, checker.value);
    end
end

if options.VERBOSE
    tic;
end

if strcmp( options.INIT,'hue')
    HSV = rgb2hsv( V);
    hue = smooth(HSV(:,1),30);
    [c b] = hist( hue(hue<0.3), [0:0.01:1]);
    [A i] = max(c);
    P = b(i);
    hae = mean(V(P-.01<hue & hue<P+0.01,:),1)';

    [c b] = hist( hue(hue>=0.3), [0:0.01:1]);
    [A i] = max(c);
    P = b(i);
    dab = mean(V(P-.01<hue & hue<P+0.01,:),1)';

    W = single( [hae dab] / 255);
else
    W = single( rand(S(2),options.RANK));
end
if strcmp( options.INIT,'truncated')
    W = W / 2 + .25;
end

% Continuing image transform
V = single(V')/255;
V(V==0) = 1e-9;
[r,c] = size(V);

% Blind umixing
H = single( rand( options.RANK,c));

conn = zeros(r,r);
connold = conn;
inc=0;

for k=1:options.ITER
    W = W / norm(W);

    WH = W*H;

    % Minimizing L2 distance
    Hn = H.*((W'*V) ./ (W'*WH));
    W  = (W.*((V*H') ./ (WH*H')));

    % % Minimizing divergence
    % VWH = V./WH;
    % Hn = H.*(W'*VWH) ./ repmat( sum(W,1)',[1 c]);
    % W  = W.*(VWH*H') ./ repmat( sum(H,2)', [r 1]);

    H = Hn;

    % Below is the Broad connectivity criterion
    if mod( k,10)==0
        [y,i] = max(W,[],2);
        mat1 = repmat( i,1,r);
        mat2 = repmat( i',r,1);
        conn=(mat1==mat2);

        if sum(conn(:)~=connold(:))
            inc=0;
        else
            inc=inc+1;
        end
        connold=conn;

        if inc>options.STOPCONN
            break;
        end

        Err = sum((V(:) - WH(:)).^2)/(r*c);
        if options.VERBOSE
            disp( num2str([toc k inc Err max(W(:)) max(H(:))]));
        end
    end
end

H=H-min(H(:));
H=H/max(H(:));
H=uint8(round(H*255));
W=uint8(round(W*255));
hsv = rgb2hsv( W');

if options.RANK==2
    if hsv(1,1)>hsv(2,1)
        W = W(:, [2 1]);
        H = H([2 1],:);
    end
end

H = H';

if options.VERBOSE
    t = toc;
    t = num2str(t);
    disp([ 'Finished NMF: ' t]);
    tic;
end\
\>", "Program",
 CellChangeTimes->{{3.474396659069334*^9, 
  3.4743966813105564`*^9}},ExpressionUUID->"d86620af-c832-43e3-98be-\
2d1e7f123196"],

Cell["The options object is easily created:", "Text",
 CellChangeTimes->{{3.4748321584653378`*^9, 
  3.474832175181613*^9}},ExpressionUUID->"c1d00ddd-fafe-4f18-8da9-\
355ef1327483"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"options", "[", "iter", "]"}], "=", "5000"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "[", "init", "]"}], " ", "=", " ", "\"\<hue\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "[", "rank", "]"}], "=", " ", "2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "[", "stopConn", "]"}], " ", "=", " ", "40"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "[", "verbose", "]"}], " ", "=", " ", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "[", "rseed", "]"}], "=", "13"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "[", "method", "]"}], "=", "\"\<nmf\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4748321822832985`*^9, 3.4748322545644093`*^9}, {
   3.474906677236242*^9, 3.4749066920979943`*^9}, {3.4749074470333557`*^9, 
   3.474907467270321*^9}, {3.474908256683853*^9, 3.4749082571526628`*^9}, {
   3.4749084470519667`*^9, 3.4749084950581107`*^9}, {3.47497869122636*^9, 
   3.4749787023157787`*^9}, 3.474992875426202*^9, 3.4749938397578297`*^9, 
   3.4749953626825743`*^9, 3.4749957790495796`*^9, {3.474996352785727*^9, 
   3.4749963545810723`*^9}, {3.474996589256147*^9, 3.4749965898025565`*^9}, {
   3.4749974946781006`*^9, 3.4749974952090855`*^9}},
 CellLabel->
  "In[765]:=",ExpressionUUID->"6923fae7-2a0b-459b-8203-9e88755586d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "options"}]], "Input",
 CellChangeTimes->{{3.4748322628991346`*^9, 3.474832284641218*^9}},
 CellLabel->
  "In[772]:=",ExpressionUUID->"32a52f09-2bb9-4595-b14c-177144408403"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`options\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"options", "[", "verbose", "]"}], "=", "True"}]},
                    {
                    RowBox[{
                    RowBox[{"options", "[", "iter", "]"}], "=", "5000"}]},
                    {
                    RowBox[{
                    RowBox[{"options", "[", "init", "]"}], 
                    "=", "\<\"hue\"\>"}]},
                    {
                    RowBox[{
                    RowBox[{"options", "[", "rank", "]"}], "=", "2"}]},
                    {
                    RowBox[{
                    RowBox[{"options", "[", "stopConn", "]"}], "=", "40"}]},
                    {
                    RowBox[{
                    RowBox[{"options", "[", "rseed", "]"}], "=", "13"}]},
                    {
                    RowBox[{
                    RowBox[{"options", "[", "method", "]"}], 
                    "=", "\<\"nmf\"\>"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`options\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`options\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Global`options", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`options, \
{$CellContext`options[$CellContext`verbose] -> 
       True, $CellContext`options[$CellContext`iter] -> 
       5000, $CellContext`options[$CellContext`init] -> 
       "hue", $CellContext`options[$CellContext`rank] -> 
       2, $CellContext`options[$CellContext`stopConn] -> 
       40, $CellContext`options[$CellContext`rseed] -> 
       13, $CellContext`options[$CellContext`method] -> "nmf"}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`options"], 
   False]]], "Output",
 CellChangeTimes->{3.81152209110779*^9, 3.811522222429891*^9, 
  3.811522366006154*^9, 3.811522586868308*^9, 3.811522738830755*^9, 
  3.811523234025165*^9},
 CellLabel->
  "Out[772]=",ExpressionUUID->"7ee3b860-f13e-4f21-b62e-eca8decf42e9"]
}, Open  ]],

Cell[TextData[{
 "The first part of the function is devoted to initializing the color basis \
matrix, ",
 StyleBox["w", "Code"],
 ". It takes one of three paths depending on the setting of ",
 StyleBox["options[init]", "Code"],
 ". If ",
 StyleBox["options[init]", "Code"],
 " is \"",
 StyleBox["none", "Code"],
 "\" or some unrecognized value, the matrix is initialized with random values \
between 0 and 1. If the value is \"",
 StyleBox["truncated", "Code"],
 "\", the matrix is still initialized with random values, but they are \
reduced by dividing by 2 and adding back 0.25. The method is not documented \
in any way and appears to be an empirical attempt to speed convergence."
}], "Text",
 CellChangeTimes->{{3.4749051185212727`*^9, 3.4749052070267005`*^9}, {
  3.474905282002437*^9, 3.4749053023125973`*^9}, {3.4749053382303343`*^9, 
  3.474905363914875*^9}, {3.474905406409979*^9, 3.474905482729311*^9}, {
  3.4749055530337105`*^9, 
  3.474905564313661*^9}},ExpressionUUID->"578f78b5-3c37-4e11-a65e-\
1737821dbd70"],

Cell[TextData[{
 "If ",
 StyleBox["options[init]", "Code"],
 " contains the value \"",
 StyleBox["hue", "Code"],
 "\", the function attempts to make a more intelligent choice for the initial \
values based on the characteristics of the image being analyzed. It converts \
the image data to the HSV color space and looks for the peak values in two \
regions along the hue axis. The method is uses assumes one stain is \
hemotoxylin. Rather than go to all the trouble to try to guess the starting \
values, why not just use some values that have already been published? That's \
what this version of the function does."
}], "Text",
 CellChangeTimes->{{3.47490556523543*^9, 3.474905610620826*^9}, {
  3.4749056626178627`*^9, 3.4749057959821377`*^9}, {3.474905889843815*^9, 
  3.4749059006186724`*^9}, {3.4749081395282335`*^9, 
  3.4749081395282335`*^9}},ExpressionUUID->"f8308822-7046-422e-8eb8-\
bc9be346523d"],

Cell["\<\
Initialization continues by transposing the samples, replacing any zero \
values with a small number, and normalizing the pixels into the range 0 to 1 \
(by dividing by 255.)\
\>", "Text",
 CellChangeTimes->{
  3.4749081400595517`*^9, {3.4749085730055866`*^9, 3.4749086368575087`*^9}, 
   3.811522058483629*^9},ExpressionUUID->"bef0f3ae-5799-4ceb-b23d-\
b44e7018443c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findWH", "[", "samples_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "w", ",", " ", "v", ",", " ", "rows", ",", " ", "cols", ",", " ", "h", 
      ",", " ", "conn", ",", " ", "connOld", ",", " ", "inc", ",", " ", "k", 
      ",", "wh", ",", " ", "hn", ",", "err"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Create", " ", "initial", " ", "guess", " ", "for", " ", "color", " ", 
      "basis", " ", "matrix", " ", 
      RowBox[{"w", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"options", "[", "init", "]"}], " ", "\[Equal]", " ", 
        "\"\<hue\>\""}], ",", "\[IndentingNewLine]", " ", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "dab", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"options", "[", "verbose", "]"}], ",", " ", 
            RowBox[{
            "Print", "[", 
             "\"\<Initializing w with published hue values for H&E\>\"", 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"w", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.65", ",", " ", "0.072"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0.704", ",", " ", "0.99"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0.286", ",", " ", "0.105"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"options", "[", "rank", "]"}], " ", ">", " ", "2"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dab", "=", 
              RowBox[{"{", 
               RowBox[{"0.268", ",", " ", "0.57", ",", " ", "0.776"}], 
               "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"w", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"w", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                  RowBox[{"dab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}]}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"options", "[", "verbose", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "Print", "[", "\"\<Initializing w with random values\>\"", "]"}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"w", "=", 
              RowBox[{"RandomReal", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Part", "[", 
                   RowBox[{
                    RowBox[{"Dimensions", "[", "samples", "]"}], ",", "2"}], 
                   "]"}], ",", 
                  RowBox[{"options", "[", "rank", "]"}]}], "}"}]}], "]"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"options", "[", "init", "]"}], " ", "\[Equal]", " ", 
           "\"\<truncated\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"options", "[", "verbose", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", "\"\<Truncating w matrix\>\"", "]"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"w", "=", 
            RowBox[{
             RowBox[{"w", "/", "2"}], " ", "+", " ", "0.25"}]}], ";"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"options", "[", "verbose", "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Dimensions of w:\>\"", ",", " ", 
         RowBox[{"Dimensions", "[", "w", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Reform", " ", "and", " ", "normalize", " ", "the", " ", "sample", " ", 
       RowBox[{"pixels", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"Transpose", "[", "samples", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"v", " ", "/.", " ", 
       RowBox[{"0", "\[Rule]", "0.000000003"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"N", "[", 
       RowBox[{"v", "/", "255"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rows", ",", " ", "cols"}], "}"}], " ", "=", " ", 
      RowBox[{"Dimensions", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"options", "[", "verbose", "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Dimensions of v: rows: \>\"", " ", ",", "rows", ",", " ", 
         "\"\<, cols: \>\"", ",", " ", "cols"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Initialize", " ", "h", " ", "and", " ", "other", " ", 
       RowBox[{"variables", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"options", "[", "rank", "]"}], ",", " ", "cols"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"options", "[", "verbose", "]"}], ",", " ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Dimensions of h:\>\"", ",", " ", 
         RowBox[{"Dimensions", "[", "h", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"conn", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"{", "rows", "}"}], ",", 
        RowBox[{"{", "rows", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"connOld", " ", "=", " ", "conn"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Iterate", " ", "to", " ", 
       RowBox[{"convergence", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", " ", 
       RowBox[{"k", "<", 
        RowBox[{"options", "[", "iter", "]"}]}], ",", " ", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"w", "=", 
         RowBox[{"w", "/", 
          RowBox[{"Norm", "[", "w", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"wh", " ", "=", " ", 
         RowBox[{"w", ".", "h"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Minimizing", " ", "the", " ", "L2", " ", 
          RowBox[{"distance", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"hn", "=", 
         RowBox[{"h", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Transpose", "[", "w", "]"}], ".", "v"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Transpose", "[", "w", "]"}], ".", "wh"}], ")"}]}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"w", "=", 
         RowBox[{"(", 
          RowBox[{"w", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"v", ".", 
               RowBox[{"Transpose", "[", "h", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"wh", ".", 
               RowBox[{"Transpose", "[", "h", "]"}]}], ")"}]}], ")"}]}], 
          ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"h", "=", "hn"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Broad", " ", "connectivity", " ", "criterion"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"k", ",", "50"}], "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "connectivity", " ", "calculations", " ", "should", " ", "go", " ",
             "here"}], " ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"inc", " ", ">", " ", 
              RowBox[{"options", "[", "stopConn", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]",
            "\[IndentingNewLine]", 
           RowBox[{"err", "=", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"v", "-", "wh"}], ")"}], "^", "2"}], ",", " ", "2"}],
               "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"rows", "*", "cols"}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"options", "[", "verbose", "]"}], " ", "\[Equal]", " ", 
              "\"\<ReallyVerbose\>\""}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<Time:\>\"", ",", " ", 
               RowBox[{"AbsoluteTime", "[", "]"}], ",", "\"\<, k:\>\"", ",", 
               " ", "k", ",", " ", "\"\<, inc:\>\"", ",", " ", "inc", ",", 
               " ", "\"\<, err:\>\"", ",", " ", "err", ",", " ", 
               "\"\<, Max[w]:\>\"", ",", " ", 
               RowBox[{"Max", "[", "w", "]"}], ",", "\"\<, Max[h]:\>\"", ",", 
               " ", 
               RowBox[{"Max", "[", "h", "]"}]}], "]"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"h", "-", 
       RowBox[{"Min", "[", "h", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"h", "/", 
          RowBox[{"Max", "[", "h", "]"}]}], "*", "255"}], "]"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"w", ",", "h"}], "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4749059078905287`*^9, 3.4749062038039684`*^9}, {
   3.474906481716611*^9, 3.4749065703128867`*^9}, {3.474906655420252*^9, 
   3.474906658733282*^9}, {3.47490730803032*^9, 3.4749073766332893`*^9}, {
   3.4749074086375904`*^9, 3.4749074314844103`*^9}, {3.474907493445546*^9, 
   3.47490756176679*^9}, 3.4749076607169538`*^9, {3.4749076961902437`*^9, 
   3.4749077774193897`*^9}, {3.474907809861042*^9, 3.474907885480095*^9}, {
   3.4749079290169168`*^9, 3.474907943550027*^9}, {3.474907991743695*^9, 
   3.474908097413469*^9}, {3.47490814606032*^9, 3.4749082445573006`*^9}, {
   3.4749082824996567`*^9, 3.474908351727267*^9}, {3.4749084137508297`*^9, 
   3.4749084324407215`*^9}, {3.4749086471400747`*^9, 
   3.4749087042723866`*^9}, {3.474909008873871*^9, 3.474909058724001*^9}, {
   3.4749091203881426`*^9, 3.474909160690176*^9}, {3.4749092068992147`*^9, 
   3.4749093000673885`*^9}, {3.4749093375409346`*^9, 3.474909377858595*^9}, {
   3.4749094443202257`*^9, 3.474909664473402*^9}, {3.474909722058897*^9, 
   3.474909904961933*^9}, {3.474909963991474*^9, 3.474909989392253*^9}, {
   3.4749101000349684`*^9, 3.4749101152990055`*^9}, {3.4749103184449244`*^9, 
   3.474910333506065*^9}, {3.474910438396729*^9, 3.4749104388964443`*^9}, {
   3.4749109047949505`*^9, 3.4749109482173204`*^9}, {3.474911326701317*^9, 
   3.4749113725480714`*^9}, {3.474911413974168*^9, 3.4749114180043087`*^9}, {
   3.4749115926756773`*^9, 3.474911657596138*^9}, {3.474911905656464*^9, 
   3.4749119179501915`*^9}, {3.4749119732016683`*^9, 3.474911976685151*^9}, {
   3.4749122388055315`*^9, 3.4749122416797953`*^9}, {3.474912414822959*^9, 
   3.4749124616390963`*^9}, {3.474912497395565*^9, 3.474912497973542*^9}, {
   3.474912530683916*^9, 3.4749125977917323`*^9}, {3.474912680629895*^9, 
   3.474912683800958*^9}, {3.474916373304386*^9, 3.4749164325311794`*^9}, {
   3.4749164984446163`*^9, 3.4749165680919504`*^9}, 3.4749166116488743`*^9, {
   3.4749166851550894`*^9, 3.474916785548487*^9}, {3.4749169817577443`*^9, 
   3.4749169906003623`*^9}, {3.4749172078850465`*^9, 
   3.4749172230862255`*^9}, {3.4749172897964354`*^9, 3.474917297482951*^9}, 
   3.4749173697393265`*^9, {3.474917766563526*^9, 3.474917771359787*^9}, {
   3.4749178861107225`*^9, 3.4749179745242577`*^9}, {3.4749743574672093`*^9, 
   3.4749743582481146`*^9}, {3.4749744910569444`*^9, 
   3.4749745411320167`*^9}, {3.4749770888549447`*^9, 
   3.4749771355645638`*^9}, {3.47497729265923*^9, 3.4749773627992134`*^9}, 
   3.474977996415964*^9, {3.474978127683422*^9, 3.474978130121827*^9}, 
   3.474978287400484*^9, {3.474994058832608*^9, 3.47499406525436*^9}, {
   3.4749950230640945`*^9, 3.474995034579499*^9}, {3.474995198263856*^9, 
   3.4749952225602646`*^9}, {3.4749973800947037`*^9, 
   3.4749973996630554`*^9}, {3.4749974364259443`*^9, 
   3.4749974564159603`*^9}, {3.47500061051264*^9, 3.4750006658844624`*^9}},
 CellLabel->
  "In[773]:=",ExpressionUUID->"056b4d0b-ccfd-482b-943e-813747eda79c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v", ",", " ", "junk", ",", " ", "junk"}], "}"}], " ", "=", " ", 
   RowBox[{"uniqueImgRows", "[", "img", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4749065857059746`*^9, 3.4749066141480246`*^9}},
 CellLabel->
  "In[774]:=",ExpressionUUID->"1ab25c48-4662-4c16-91ee-a48b2c538d62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"w", ",", "h"}], "}"}], "=", 
   RowBox[{"findWH", "[", "v", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.474906629416092*^9, 3.4749066367766447`*^9}, {
   3.474906719008549*^9, 3.4749067196961594`*^9}, {3.4749096833508177`*^9, 
   3.474909687335703*^9}, 3.474912263049323*^9, {3.475000690393302*^9, 
   3.4750006916296997`*^9}},
 CellLabel->
  "In[775]:=",ExpressionUUID->"6060d26b-79dc-4e6c-8bb6-547ac772e2d6"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Initializing w with published hue values for H&E\"\>"], \
"Print",
 CellChangeTimes->{
  3.474906640339714*^9, {3.4749066835966344`*^9, 3.474906721024497*^9}, 
   3.47490747894369*^9, 3.474907570236624*^9, 3.4749076769690337`*^9, 
   3.4749077862798986`*^9, {3.4749078451780615`*^9, 3.4749078941999607`*^9}, 
   3.474907950769701*^9, 3.474908267654007*^9, {3.4749084404729996`*^9, 
   3.4749084753524637`*^9}, 3.474908511982152*^9, 3.4749090643966017`*^9, 
   3.474909126060744*^9, 3.474909177848622*^9, 3.4749092173849316`*^9, {
   3.474909251404911*^9, 3.474909281143092*^9}, 3.4749093121783137`*^9, {
   3.474909384609459*^9, 3.4749094118473196`*^9}, 3.47490968938284*^9, 
   3.4749097292004356`*^9, 3.4749097915155096`*^9, 3.474909836831746*^9, 
   3.4749099167117414`*^9, 3.474910007016965*^9, 3.474910121916543*^9, 
   3.4749103397810574`*^9, 3.474910445423974*^9, 3.4749113614417534`*^9, {
   3.4749114013838835`*^9, 3.4749114053203*^9}, 3.474911663641426*^9, 
   3.474911932508963*^9, 3.4749119849017973`*^9, 3.474912027406538*^9, {
   3.474912248178131*^9, 3.474912266954573*^9}, {3.4749124783848085`*^9, 
   3.474912503815796*^9}, 3.474912604961771*^9, 3.4749126907679243`*^9, 
   3.474916447747981*^9, 3.4749166338335342`*^9, 3.474917014300453*^9, 
   3.4749172340379486`*^9, 3.474917302294835*^9, 3.474917828477475*^9, 
   3.4749741994276557`*^9, 3.4749745534827695`*^9, 3.474977176392975*^9, 
   3.4749779340334415`*^9, 3.4749784966425543`*^9, 3.474987244764479*^9, 
   3.474989045481475*^9, 3.474999019209494*^9, 3.4749994739754767`*^9, 
   3.4749996922144213`*^9, 3.4750006922870245`*^9, 3.4750007824245033`*^9, 
   3.475001447330854*^9, 3.475002658808709*^9, 3.525011725364454*^9, 
   3.8115220911680927`*^9, 3.811522222506268*^9, 3.811522366071703*^9, 
   3.811522586947798*^9, 3.81152273898829*^9, 3.8115232341883583`*^9},
 CellLabel->
  "During evaluation of \
In[775]:=",ExpressionUUID->"81addbe2-7b7e-42ea-84cf-41729eb61451"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Dimensions of w:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}]}],
  SequenceForm["Dimensions of w:", {3, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.474906640339714*^9, {3.4749066835966344`*^9, 3.474906721024497*^9}, 
   3.47490747894369*^9, 3.474907570236624*^9, 3.4749076769690337`*^9, 
   3.4749077862798986`*^9, {3.4749078451780615`*^9, 3.4749078941999607`*^9}, 
   3.474907950769701*^9, 3.474908267654007*^9, {3.4749084404729996`*^9, 
   3.4749084753524637`*^9}, 3.474908511982152*^9, 3.4749090643966017`*^9, 
   3.474909126060744*^9, 3.474909177848622*^9, 3.4749092173849316`*^9, {
   3.474909251404911*^9, 3.474909281143092*^9}, 3.4749093121783137`*^9, {
   3.474909384609459*^9, 3.4749094118473196`*^9}, 3.47490968938284*^9, 
   3.4749097292004356`*^9, 3.4749097915155096`*^9, 3.474909836831746*^9, 
   3.4749099167117414`*^9, 3.474910007016965*^9, 3.474910121916543*^9, 
   3.4749103397810574`*^9, 3.474910445423974*^9, 3.4749113614417534`*^9, {
   3.4749114013838835`*^9, 3.4749114053203*^9}, 3.474911663641426*^9, 
   3.474911932508963*^9, 3.4749119849017973`*^9, 3.474912027406538*^9, {
   3.474912248178131*^9, 3.474912266954573*^9}, {3.4749124783848085`*^9, 
   3.474912503815796*^9}, 3.474912604961771*^9, 3.4749126907679243`*^9, 
   3.474916447747981*^9, 3.4749166338335342`*^9, 3.474917014300453*^9, 
   3.4749172340379486`*^9, 3.474917302294835*^9, 3.474917828477475*^9, 
   3.4749741994276557`*^9, 3.4749745534827695`*^9, 3.474977176392975*^9, 
   3.4749779340334415`*^9, 3.4749784966425543`*^9, 3.474987244764479*^9, 
   3.474989045481475*^9, 3.474999019209494*^9, 3.4749994739754767`*^9, 
   3.4749996922144213`*^9, 3.4750006922870245`*^9, 3.4750007824245033`*^9, 
   3.475001447330854*^9, 3.475002658808709*^9, 3.525011725364454*^9, 
   3.8115220911680927`*^9, 3.811522222506268*^9, 3.811522366071703*^9, 
   3.811522586947798*^9, 3.81152273898829*^9, 3.811523234190185*^9},
 CellLabel->
  "During evaluation of \
In[775]:=",ExpressionUUID->"702ba2cf-ab47-4578-ba64-0edd5750464a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Dimensions of v: rows: \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\", cols: \"\>", "\[InvisibleSpace]", "2752"}],
  SequenceForm["Dimensions of v: rows: ", 3, ", cols: ", 2752],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.474906640339714*^9, {3.4749066835966344`*^9, 3.474906721024497*^9}, 
   3.47490747894369*^9, 3.474907570236624*^9, 3.4749076769690337`*^9, 
   3.4749077862798986`*^9, {3.4749078451780615`*^9, 3.4749078941999607`*^9}, 
   3.474907950769701*^9, 3.474908267654007*^9, {3.4749084404729996`*^9, 
   3.4749084753524637`*^9}, 3.474908511982152*^9, 3.4749090643966017`*^9, 
   3.474909126060744*^9, 3.474909177848622*^9, 3.4749092173849316`*^9, {
   3.474909251404911*^9, 3.474909281143092*^9}, 3.4749093121783137`*^9, {
   3.474909384609459*^9, 3.4749094118473196`*^9}, 3.47490968938284*^9, 
   3.4749097292004356`*^9, 3.4749097915155096`*^9, 3.474909836831746*^9, 
   3.4749099167117414`*^9, 3.474910007016965*^9, 3.474910121916543*^9, 
   3.4749103397810574`*^9, 3.474910445423974*^9, 3.4749113614417534`*^9, {
   3.4749114013838835`*^9, 3.4749114053203*^9}, 3.474911663641426*^9, 
   3.474911932508963*^9, 3.4749119849017973`*^9, 3.474912027406538*^9, {
   3.474912248178131*^9, 3.474912266954573*^9}, {3.4749124783848085`*^9, 
   3.474912503815796*^9}, 3.474912604961771*^9, 3.4749126907679243`*^9, 
   3.474916447747981*^9, 3.4749166338335342`*^9, 3.474917014300453*^9, 
   3.4749172340379486`*^9, 3.474917302294835*^9, 3.474917828477475*^9, 
   3.4749741994276557`*^9, 3.4749745534827695`*^9, 3.474977176392975*^9, 
   3.4749779340334415`*^9, 3.4749784966425543`*^9, 3.474987244764479*^9, 
   3.474989045481475*^9, 3.474999019209494*^9, 3.4749994739754767`*^9, 
   3.4749996922144213`*^9, 3.4750006922870245`*^9, 3.4750007824245033`*^9, 
   3.475001447330854*^9, 3.475002658808709*^9, 3.525011725364454*^9, 
   3.8115220911680927`*^9, 3.811522222506268*^9, 3.811522366071703*^9, 
   3.811522586947798*^9, 3.81152273898829*^9, 3.811523234194343*^9},
 CellLabel->
  "During evaluation of \
In[775]:=",ExpressionUUID->"99831d3c-3fb9-4154-9b1c-00e720150ddd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Dimensions of h:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2752"}], "}"}]}],
  SequenceForm["Dimensions of h:", {2, 2752}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.474906640339714*^9, {3.4749066835966344`*^9, 3.474906721024497*^9}, 
   3.47490747894369*^9, 3.474907570236624*^9, 3.4749076769690337`*^9, 
   3.4749077862798986`*^9, {3.4749078451780615`*^9, 3.4749078941999607`*^9}, 
   3.474907950769701*^9, 3.474908267654007*^9, {3.4749084404729996`*^9, 
   3.4749084753524637`*^9}, 3.474908511982152*^9, 3.4749090643966017`*^9, 
   3.474909126060744*^9, 3.474909177848622*^9, 3.4749092173849316`*^9, {
   3.474909251404911*^9, 3.474909281143092*^9}, 3.4749093121783137`*^9, {
   3.474909384609459*^9, 3.4749094118473196`*^9}, 3.47490968938284*^9, 
   3.4749097292004356`*^9, 3.4749097915155096`*^9, 3.474909836831746*^9, 
   3.4749099167117414`*^9, 3.474910007016965*^9, 3.474910121916543*^9, 
   3.4749103397810574`*^9, 3.474910445423974*^9, 3.4749113614417534`*^9, {
   3.4749114013838835`*^9, 3.4749114053203*^9}, 3.474911663641426*^9, 
   3.474911932508963*^9, 3.4749119849017973`*^9, 3.474912027406538*^9, {
   3.474912248178131*^9, 3.474912266954573*^9}, {3.4749124783848085`*^9, 
   3.474912503815796*^9}, 3.474912604961771*^9, 3.4749126907679243`*^9, 
   3.474916447747981*^9, 3.4749166338335342`*^9, 3.474917014300453*^9, 
   3.4749172340379486`*^9, 3.474917302294835*^9, 3.474917828477475*^9, 
   3.4749741994276557`*^9, 3.4749745534827695`*^9, 3.474977176392975*^9, 
   3.4749779340334415`*^9, 3.4749784966425543`*^9, 3.474987244764479*^9, 
   3.474989045481475*^9, 3.474999019209494*^9, 3.4749994739754767`*^9, 
   3.4749996922144213`*^9, 3.4750006922870245`*^9, 3.4750007824245033`*^9, 
   3.475001447330854*^9, 3.475002658808709*^9, 3.525011725364454*^9, 
   3.8115220911680927`*^9, 3.811522222506268*^9, 3.811522366071703*^9, 
   3.811522586947798*^9, 3.81152273898829*^9, 3.811523234195396*^9},
 CellLabel->
  "During evaluation of \
In[775]:=",ExpressionUUID->"30a2f843-53e3-4d4d-a552-b2e93aa48af2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.474907631791377*^9, 3.4749076384641056`*^9}},
 CellLabel->
  "In[776]:=",ExpressionUUID->"d5bb5b62-a513-4574-adc3-980a77071874"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.49531859646644943`", "0.0005835590888347156`"},
     {"0.4978414620181865`", "0.6198893353932384`"},
     {"0.3371665326093929`", "0.37033266892551864`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4749076397298927`*^9, 3.4749076807507677`*^9, 3.47490778976472*^9, 
   3.4749078483972235`*^9, 3.474907897528512*^9, 3.474907955114007*^9, 
   3.474908270404359*^9, {3.474908456021865*^9, 3.474908478071562*^9}, 
   3.4749085150762978`*^9, 3.474912028703081*^9, 3.4749164880084524`*^9, 
   3.474917055701403*^9, 3.4749181346265574`*^9, 3.474974240284605*^9, 
   3.4749785391897993`*^9, 3.474987285416788*^9, 3.474992606224438*^9, 
   3.474999065937054*^9, 3.4749995207655067`*^9, 3.4749997400976768`*^9, 
   3.4750007450124273`*^9, 3.4750008297995777`*^9, 3.4750014953787456`*^9, 
   3.4750027058538218`*^9, 3.5250118075151978`*^9, 3.811522739807386*^9, 
   3.811523234996714*^9},
 CellLabel->
  "Out[776]//MatrixForm=",ExpressionUUID->"824a7420-e9d1-436c-a3dc-\
59cdf32350ed"]
}, Open  ]],

Cell[TextData[{
 "A new version of ",
 StyleBox["processImage()", "Code"],
 " can be created using the functionality in ",
 StyleBox["findWH()", "Code"],
 "."
}], "Text",
 CellChangeTimes->{{3.4749785230861983`*^9, 
  3.4749785544187145`*^9}},ExpressionUUID->"6b89599b-1186-4a93-af1f-\
13d66547f3be"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "imgPath", " ", "=", " ", 
   "\"\<~/projects/Color-Deconvolution/Images/TinyTissue.jpg\>\""}], 
  ";"}], "\n", 
 RowBox[{"img", " ", "=", " ", 
  RowBox[{"Import", "[", "imgPath", "]"}]}], "\n", 
 RowBox[{"Dimensions", "[", 
  RowBox[{"ImageData", "[", "img", "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.474987584295407*^9, {3.5250117001392097`*^9, 3.525011703462015*^9}, {
   3.8115229900327873`*^9, 3.811523025610937*^9}},
 CellLabel->
  "In[777]:=",ExpressionUUID->"5bd158e3-3897-4519-88a5-093ced6fe611"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
J/inWg==
    "], {{0, 67.}, {50., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{50., 67.},
  PlotRange->{{0, 50.}, {0, 67.}}]], "Output",
 CellChangeTimes->{3.4749875910634203`*^9, 3.474992612178363*^9, 
  3.4749990659839067`*^9, 3.4749995208279767`*^9, 3.4749997401601467`*^9, 
  3.4750008298621397`*^9, 3.4750014954412875`*^9, 3.475002705916361*^9, 
  3.525011807546398*^9, 3.811522739846408*^9, 3.8115232350224752`*^9},
 CellLabel->
  "Out[778]=",ExpressionUUID->"b6055116-0366-4945-add4-9ccfa3d0c799"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"67", ",", "50", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.4749875910634203`*^9, 3.474992612178363*^9, 
  3.4749990659839067`*^9, 3.4749995208279767`*^9, 3.4749997401601467`*^9, 
  3.4750008298621397`*^9, 3.4750014954412875`*^9, 3.475002705916361*^9, 
  3.525011807546398*^9, 3.811522739846408*^9, 3.81152323502514*^9},
 CellLabel->
  "Out[779]=",ExpressionUUID->"f3fffaed-f391-4cb7-be86-c3ae11e42e48"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"processImageV2", "[", "img_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "w", ",", " ", "h", ",", " ", "j", ",", " ", "v", ",", " ", "reconIdx", 
      ",", "junk"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", " ", "junk", ",", " ", "reconIdx"}], "}"}], " ", "=",
       " ", 
      RowBox[{"uniqueImgRows", "[", "img", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"options", "[", "method", "]"}], " ", "\[Equal]", " ", 
        "\"\<nmf\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"options", "[", "verbose", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "\"\<Deconvolving with nmf\>\"", "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", "h"}], "}"}], "=", 
         RowBox[{"findWH", "[", "v", "]"}]}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"options", "[", "verbose", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "Print", "[", "\"\<Deconvolving with provided color basis\>\"", 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"w", " ", "=", " ", 
         RowBox[{"getW", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"findH", "[", 
          RowBox[{"v", ",", "w"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"options", "[", "verbose", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Color Basis: w:\>\"", ",", " ", 
         RowBox[{"w", "//", "MatrixForm"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"j", " ", "=", " ", 
      RowBox[{"reconIH", "[", 
       RowBox[{"img", ",", " ", "h", ",", " ", "reconIdx", ",", " ", "True"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", 
      RowBox[{"{", 
       RowBox[{"h", ",", " ", "w", ",", " ", "j"}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.474978608133812*^9, 3.474978613241192*^9}, {
   3.474978719730852*^9, 3.474978901113138*^9}, {3.474978994915769*^9, 
   3.4749790273389444`*^9}, {3.47498658933843*^9, 3.474986638443299*^9}, {
   3.474986775173273*^9, 3.474986778213479*^9}, {3.474986921835929*^9, 
   3.4749870220609684`*^9}, {3.4749870848395944`*^9, 3.474987093665402*^9}, {
   3.474987200432727*^9, 3.474987206280215*^9}, 3.4749873867946825`*^9, {
   3.474993074621351*^9, 3.474993120966457*^9}},
 CellLabel->
  "In[780]:=",ExpressionUUID->"2ca5cfb4-5da8-4a42-b91b-ea0cdc3dce8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "chnlWeights", ",", " ", "colorBasis", ",", " ", "deconvImgCalc"}], "}"}],
    "=", 
   RowBox[{"processImageV2", "[", "img", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4749866589049597`*^9, 3.4749866924328976`*^9}, 
   3.4749867678144155`*^9, {3.474987113110247*^9, 3.4749871181312895`*^9}, {
   3.4749871830150113`*^9, 3.474987185977738*^9}, {3.4749993964345894`*^9, 
   3.474999397762077*^9}},
 CellLabel->
  "In[781]:=",ExpressionUUID->"7a2d222c-4ec6-4c02-b6f8-e123cdc255c7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Deconvolving with nmf\"\>"], "Print",
 CellChangeTimes->{
  3.474992623195469*^9, 3.474992892004964*^9, 3.474993131341457*^9, 
   3.4749936641507025`*^9, 3.4749940122710023`*^9, 3.474994089816388*^9, 
   3.4749944877931223`*^9, 3.4749946236655135`*^9, 3.474994975440009*^9, {
   3.474995042813716*^9, 3.474995058938406*^9}, 3.4749952504191046`*^9, 
   3.4749953734323673`*^9, 3.4749957933305554`*^9, 3.474996371113863*^9, 
   3.474996522843975*^9, 3.474996601995294*^9, 3.474996644421692*^9, 
   3.4749968531527443`*^9, 3.474997538953307*^9, 3.4749976750120955`*^9, 
   3.4749990664524317`*^9, 3.4749995212808843`*^9, 3.4749997406130543`*^9, 
   3.4750008303000736`*^9, 3.475001495894717*^9, 3.4750027063541355`*^9, 
   3.5250118077491984`*^9, 3.8115227398938923`*^9, 3.811523235148835*^9},
 CellLabel->
  "During evaluation of \
In[781]:=",ExpressionUUID->"90a9863f-461c-4c1d-bc03-c1659d99d7b1"],

Cell[BoxData["\<\"Initializing w with published hue values for H&E\"\>"], \
"Print",
 CellChangeTimes->{
  3.474992623195469*^9, 3.474992892004964*^9, 3.474993131341457*^9, 
   3.4749936641507025`*^9, 3.4749940122710023`*^9, 3.474994089816388*^9, 
   3.4749944877931223`*^9, 3.4749946236655135`*^9, 3.474994975440009*^9, {
   3.474995042813716*^9, 3.474995058938406*^9}, 3.4749952504191046`*^9, 
   3.4749953734323673`*^9, 3.4749957933305554`*^9, 3.474996371113863*^9, 
   3.474996522843975*^9, 3.474996601995294*^9, 3.474996644421692*^9, 
   3.4749968531527443`*^9, 3.474997538953307*^9, 3.4749976750120955`*^9, 
   3.4749990664524317`*^9, 3.4749995212808843`*^9, 3.4749997406130543`*^9, 
   3.4750008303000736`*^9, 3.475001495894717*^9, 3.4750027063541355`*^9, 
   3.5250118077491984`*^9, 3.8115227398938923`*^9, 3.8115232351506977`*^9},
 CellLabel->
  "During evaluation of \
In[781]:=",ExpressionUUID->"463b32c3-8879-4000-a5e6-f11f9a8170ad"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Dimensions of w:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}]}],
  SequenceForm["Dimensions of w:", {3, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.474992623195469*^9, 3.474992892004964*^9, 3.474993131341457*^9, 
   3.4749936641507025`*^9, 3.4749940122710023`*^9, 3.474994089816388*^9, 
   3.4749944877931223`*^9, 3.4749946236655135`*^9, 3.474994975440009*^9, {
   3.474995042813716*^9, 3.474995058938406*^9}, 3.4749952504191046`*^9, 
   3.4749953734323673`*^9, 3.4749957933305554`*^9, 3.474996371113863*^9, 
   3.474996522843975*^9, 3.474996601995294*^9, 3.474996644421692*^9, 
   3.4749968531527443`*^9, 3.474997538953307*^9, 3.4749976750120955`*^9, 
   3.4749990664524317`*^9, 3.4749995212808843`*^9, 3.4749997406130543`*^9, 
   3.4750008303000736`*^9, 3.475001495894717*^9, 3.4750027063541355`*^9, 
   3.5250118077491984`*^9, 3.8115227398938923`*^9, 3.811523235154771*^9},
 CellLabel->
  "During evaluation of \
In[781]:=",ExpressionUUID->"151d9435-0259-435f-b446-90b481a6a31e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Dimensions of v: rows: \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\", cols: \"\>", "\[InvisibleSpace]", "2752"}],
  SequenceForm["Dimensions of v: rows: ", 3, ", cols: ", 2752],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.474992623195469*^9, 3.474992892004964*^9, 3.474993131341457*^9, 
   3.4749936641507025`*^9, 3.4749940122710023`*^9, 3.474994089816388*^9, 
   3.4749944877931223`*^9, 3.4749946236655135`*^9, 3.474994975440009*^9, {
   3.474995042813716*^9, 3.474995058938406*^9}, 3.4749952504191046`*^9, 
   3.4749953734323673`*^9, 3.4749957933305554`*^9, 3.474996371113863*^9, 
   3.474996522843975*^9, 3.474996601995294*^9, 3.474996644421692*^9, 
   3.4749968531527443`*^9, 3.474997538953307*^9, 3.4749976750120955`*^9, 
   3.4749990664524317`*^9, 3.4749995212808843`*^9, 3.4749997406130543`*^9, 
   3.4750008303000736`*^9, 3.475001495894717*^9, 3.4750027063541355`*^9, 
   3.5250118077491984`*^9, 3.8115227398938923`*^9, 3.8115232351558104`*^9},
 CellLabel->
  "During evaluation of \
In[781]:=",ExpressionUUID->"74572819-6bd3-4641-841a-b788b0be619f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Dimensions of h:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2752"}], "}"}]}],
  SequenceForm["Dimensions of h:", {2, 2752}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.474992623195469*^9, 3.474992892004964*^9, 3.474993131341457*^9, 
   3.4749936641507025`*^9, 3.4749940122710023`*^9, 3.474994089816388*^9, 
   3.4749944877931223`*^9, 3.4749946236655135`*^9, 3.474994975440009*^9, {
   3.474995042813716*^9, 3.474995058938406*^9}, 3.4749952504191046`*^9, 
   3.4749953734323673`*^9, 3.4749957933305554`*^9, 3.474996371113863*^9, 
   3.474996522843975*^9, 3.474996601995294*^9, 3.474996644421692*^9, 
   3.4749968531527443`*^9, 3.474997538953307*^9, 3.4749976750120955`*^9, 
   3.4749990664524317`*^9, 3.4749995212808843`*^9, 3.4749997406130543`*^9, 
   3.4750008303000736`*^9, 3.475001495894717*^9, 3.4750027063541355`*^9, 
   3.5250118077491984`*^9, 3.8115227398938923`*^9, 3.8115232351568527`*^9},
 CellLabel->
  "During evaluation of \
In[781]:=",ExpressionUUID->"31b22c44-e4b2-4c76-aab4-eadd230a9b5c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Color Basis: w:\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.4891758600956302`", "0.0005186540397789471`"},
       {"0.5036822527130456`", "0.6159903412320807`"},
       {"0.3401531092341416`", "0.36800782029186657`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Color Basis: w:", 
   MatrixForm[{{0.4891758600956302, 0.0005186540397789471}, {
    0.5036822527130456, 0.6159903412320807}, {0.3401531092341416, 
    0.36800782029186657`}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.474992623195469*^9, 3.474992892004964*^9, 3.474993131341457*^9, 
   3.4749936641507025`*^9, 3.4749940122710023`*^9, 3.474994089816388*^9, 
   3.4749944877931223`*^9, 3.4749946236655135`*^9, 3.474994975440009*^9, {
   3.474995042813716*^9, 3.474995058938406*^9}, 3.4749952504191046`*^9, 
   3.4749953734323673`*^9, 3.4749957933305554`*^9, 3.474996371113863*^9, 
   3.474996522843975*^9, 3.474996601995294*^9, 3.474996644421692*^9, 
   3.4749968531527443`*^9, 3.474997538953307*^9, 3.4749976750120955`*^9, 
   3.4749990664524317`*^9, 3.4749995212808843`*^9, 3.4749997406130543`*^9, 
   3.4750008303000736`*^9, 3.475001495894717*^9, 3.4750027063541355`*^9, 
   3.5250118077491984`*^9, 3.8115227398938923`*^9, 3.811523235946981*^9},
 CellLabel->
  "During evaluation of \
In[781]:=",ExpressionUUID->"9940da27-e2dc-4772-9e2c-1e4256902f73"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["deconvImgCalc"], "Input",
 CellChangeTimes->{{3.4749867987153807`*^9, 3.474986804951701*^9}, {
  3.4749994012760143`*^9, 3.474999402134977*^9}},
 CellLabel->
  "In[782]:=",ExpressionUUID->"4a414a46-02b3-408e-85f5-61f7b3f53278"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJy1nQnUXVV1xyOgWESNiNpW0FBRSasYUJHK994LUrWK1TBoaUtrmBRb2oZB
pF1dXQECQUQaQ4DggMgcpBghQETUMI9SZB6ChknC1CIioqL2/u69v332e997
H18c3lq4ji/3u/fcc/7nv/f+733O22T3f93xY2tNmTJl/xdW/7Pjbp/adr/9
dvu3nV7A/9lrt33euuU+a1fN7ar/tqz+o/3w6r27PztwQbdqTjnt1FO7tx+3
sG7fs3Jl9/wLFtXt+++7L645bN46vY++6si6fdyxr+h13nFU3b79ttu6H3rl
F+r2N5Zv3X3zVl+q24ceckj3zgPOrdu/fPY/ujs8dVHd/t6Ns7ovftt36vZ/
n/2m7ls2/Fbd/uxRR3UvXLSsbn/zoovi+08fcUR3j5uvqdtXXH55d6eb7orn
XrfD/XWbd9niyZV1+4TFf9j9xn63xPevffkN9j/uee+qVZ1f7Ly0bn/5xBOj
n0d++g96p51/Wt3+v//9367v+L0bb+x+eOm/1+3zl72t+9DxB7f3X91xTD59
xAu7D3/yK3V7yZmbRfuelbvGeH7pi1/snnL7YXV7/uGHdzf50T/X7ccf26e7
19c/UbcvWbGi43PvvOOOjv2pxq1j//ne9/rcgqndbX98XTz3sPOuqttfOWla
vO+xizaMMWccvP4nTx0QY/iti8e6n1rwTDuGizsve+JXcf1bb3y2bv/smWc6
J8x5un3WmZ29vv5w9HnJvg/W7a8vnRHvyFhdceGh4zDG3DkmVf97r/7ro+v2
uV/foifeqnnsHXPbcTFH+z69OO551bGntO94Umfjt58Tc7H/Lcuj7Zxecflf
dA+99YzAoRgDG44DeBBXvKNjwufuHW+q29+9/vru8Qtvi/kSk6edumn32GUX
xDjs9pMlgVvn7hc//3msi1//6lcxJp85cr2euLru2mtj3JhfcfXZo9aPv2VO
xdV/HX101/FhPL2++tvA0jeWL++eMOfAmF+vByfin/m6Zv/L2vbSzhnHXBHr
yPbBc+cG9hhPx7aau07vFWfX7R89MafjGh9cp9+c9ZTzNXbPjCfjuR9e+nPf
q/PrqU84hmOOP1wx/3MPRZ+X7LtXtIe914UXXBDjU41bT8x8/oQ/Cu5a8Z1e
z3E+a8n0+P5bF18cGGNNeR/WdXnHJzpiCe4qvLc8vr/m6r/sfvLcOwKH233v
0Wj7jnzkq0MPWasnX51y8sl9PCm2wZUY4HvX0eOPPdY9+KfzA1ePb7Fbi42X
9MTAwXOn9MTbJStmBqdlrmZduKYYhxd95Mt1+6jPvCjW5o+ffLJ6r13q9kM/
/GHmq+hnxRuxpuC9R3e6pB3PBR3XHWMrfo4/7rhoY2vEJGvKPlT97zjOzK9r
jTX10g1+EPcXJ+BKjMGZfs/4ez39FJ+sr43fvnnM6WHnvTfG2bH92TMHxZjz
XHFSPSv4qloXsZZvv+0jvZc98Z/tO76yJ9dxf/8WLMkV1TumuZ4Z2Mvri7Vp
n+EBsQQ/y8P1XG55Y/usswNLcJf3gR+8P2tHPHzpixuFXfvJU0+FvVv4uZf1
tv3x9nV73qFrRxv76DVwnWNV2cqOY8W4yYFV/7u+73nnbtkTb2ee8caednDx
8a/q3TNjv1gL4oF+ar/gascK3vA+zLs4Of2014cdv/KKd/d87oL/emlwwmHz
5gXfZhtd8X/w3nev/0D4EuDk8S3uDX4WSxU3jmmLj1m4sKu9gDcqbHfa8cFu
1m344cVv67XjfECsoy98/vMxhvhXrruLvvHngavLL9su1vLF39wmcFXxarw7
/XRNMaeOG3izDV/J+XyvXcPuy13YWd+rGvOxPBc+i/7Ln3C++PnqWWcFNrje
+a2eFe1q7nqOAzxz5wFb1u1DDn5eTx578IEH4p5g3jFhDJ13uEK7f8bpp8e7
n/Tl1wa3f/ELr471eO+q2X1rUJ7Bn3E8GUPn4s47dgl7DVZd76t+8NEY/2rN
xrPgYeeUvxXP8Lx9xr+Vx5gLfTb4wTHnI87hTLkU/FdrsNNib5uqnx3xVvls
HefF8WT85e1jFy0Ku1lhI+wgGPN9sY/aUzjfuWbMxQD9KX77+uFzXnP11R39
IjDju4Arr8FP8G+5XrsJP8tF+GDiBA7Z4sldA2N+T3zhnPJe4gS/0fGv/N6e
737qKa/r+e5333VX/G325+Fh3x0ekz/BlX1mrMTMomNe3isxwqzAFe9iG1wl
36zjs+i//YFjxdjVV703sPQ/N3ww5qXCRvAk8Yi+0M033RQczvjIe4ytNpd3
HDb+8KdrBzuyyY8eH2vwvGJs36f/sJPepW6z1iq/pW7Dt2/eauNYR7/cclZw
qe/y6COPBK9ee837Ale8r9/DmY4nYy5X55gFzA/zRfFRnSO+910Yc3FFjCBv
8L28BA+IK3xp54K4zLnD1xX/2H37efJXNun5PW05AV9XXMHJrv3LLr005ojY
wXV03rnnBq7Ap99jB7XXrC95g/e1zfw6nox5xoDruhq34DH4MNsU+0z/nS/8
OscHX8t7En/pM+CHyLFwl/0HP3JUxYd9sWrlE46JPTEGn1fjH7iq5r3T3Gce
OGyxt3f13E2C57ULvK/jXPFerBfiR30PONY5AlfOHbi1/6x38YONFj98Lz/D
XV7PWhBX+JximGscw1tv2TnWZnVNrAU42bUJv8ntaAJiHl5ynFnjjj/z6Lzg
w8gDxDV57rwPPqT3P3/ZssDb1845p5vjZfvD+4or1kVaj9Ef9B/x9oPvfz90
oZ8+/XSscfrg+PPuch3rzvXFc8Un8+scgQ37w5p1zKv+RBssyWmZr4gHtYms
WbFU3ZP5rdvwre2KK4LH6EPnHesnbGwZbecRTcy1A99mjcuxgq8cK+y+Y857
DVsvGYfgJ2kaY44nmBfb3L/4Qif1+UJFcyixKpzv2MKxzhec432w73LU0Z99
cV/M6Pff+fa341nZxsGZPrd6l47vznzZZo07Ptk2YZdTP6MNnl1f+Ev+7S+f
fTbGnPXlu+BjOD7gyn6ypuwnY2U/wXaJuebGmMMPtsHVbj+ZHlwkRxGrVj5z
p+n/oj4sibcHH9iTvtVtYodqHOo2ft2SfR9s/f+rO8abzJdjTgxVYvPl8b6s
Zdtg2/XLmpKv4JPCYwUDtH0vxsf1y/WOIbjSRsBRfo9Nz2NiO/Memm3y2eI+
xIny0jELNwi/C99MHiPG9HrWkbzBs5x3sCRm6L/jwJp1fuEcryde8BpiKHGI
rmsb/9x3gUsdK+Iv28yXOKE/xfbNiD4wRwX/S0NjhMMLr86NNcha0A7yLPmK
+xgnopGKJfwQsQQGvJ51rW/GHPk9PlIVq3aaOZpacfKG7VrYqIphd27n6KAY
c9ZFsUcH9dk77Xj2gble7q2wF++LT+I70gfnke9tg23ni3gk+8niDc4va3nv
4Bw0Lu8PL4k9vteO5Dgxr6OsDdK3wksnRRvb5z1Z4z4XzhHDYFs+/MLn/zjw
jHZtn7GPWXvUd+WeajLwuXoCupa2oJ7Xtg/Me7EdTwQmq7EKHP7PDTcEzlsd
aawZk32q+V23xgA+m/hp+TBiQzmNtZ+x5H1aP3ysHc+OfIgOKadxffWssGXq
ZnCgY4julPgq4nTeUVzl/Au+iu8LV/uOcKbjQ1s8NGthcXC+c82aLXrUrLCh
+DPeh7F1PNGy5BBilmJbr477wPnen+faN/zhgqW5nfy994HfxCrcWGLYtSI+
ha9cp/jqYoxrvCf2Oo+bWg08b/4FH0mdMMfj2IuylqcFd4GrkmO6McaBv63m
d6yZi1WBB/hkh6feGb5W9S7jOKqxKesGL8l7jEl1zZj3n9J+uMZn8b14A4fV
37b3mR12Ex9AO8I8yuf4aWIJ/dN1BJ/LV1knBMPih+cWf2BWYAwuFT+MoXEH
up99AOfiCpw7nvjAtvM12U/me/ED79kH9HnnAjwXnG/ULTmLsYhb4Sjb+OTG
Smhrxub4V/obaFn2gWtcp/j28hVr0FwM726bvuXcX9KlI07Hd9Je4CdkHTtj
QGw0nDM9tCwxlv38HEviS1drc8y+Ve1tvL+44nrb2LWCt9kdeY9YVV8OvV27
ib3T/2c8tVOnnPwnoSdjg4p+VXwSYvbsa2WNq/g2q4If6HPRJ1cFrvDVs38l
TjLm5x/+gqRprxPtq668MvqGv2GfwWeOU3yvrP/Dz9o7YsasYZac9WNdcYX9
FW9oO/YZP1/84xfpV8BdJUe/OnLHzLV5DeyyeRzmzmv43hwTsY/35JqsM8hX
jK1cBB7EEs/1+oZ/5gcOxSfYlpdoZ1yJN3wJ2/C/zwWTPos5Fdv8bYkdpmB/
Y2wdZ/TkZMtinTIvRXMoWhDj5jhzf7mLdeRcMA7OL5wjh3ztnM1DC0KD8lnw
g89iHrVB2Gi5glyhHJt9EvJr2s1GM9w1bLQ4ufWWW4LDefes58hRYMY1iC22
z2DPdUTeMOe29KmwufISHC6umPcrLly755w+M39Kr5mvzSLXzJo1j5NxldvM
b7ZrzjW8NMze5XbGVbaD2eY2flfBkvgBS9VYxd+UXMCU0GnhN/UN1n7FpfW7
3PDdv+qJgZtv2jG0ZcbTsSUXPMy3yTlo+pZ0ntC+yNnp5yy/8B2BK9rJJw+M
wRXpWTnfHXYcn8S1kHNJaPLyD9yYuUjMYGdto6n6t2DG78lV2X9sX44vXEdo
PvIn/m2pkVgcNhHOue2MtXptnzvLrlqnbqMDWP/AuMlj2X41uGqwwXiKn4yB
jJ/mmu3H/W3LdeNw1TxLX252R9tKP9UliG31P7m/41Njq/Xz+RT/f05H/R+f
1r+9/77dI8av1n7oAPDDMM2/iUFKPi7FjClvskvwGLG89yH/7t+St8o+fImP
5gQ/tPF13UbXEp/oyXIOPvY1+29Xt9EHXDvgyjYcaO4SXrJNjsBxQx8r9QCl
PgfdI+cL7D99sG+8r347Y6KvhV9qjRacr31kLrxmMrjKbeyX1+R2w2/bJ19r
vB3EbpY2nNPElU1d1ubBJ9qIE7+0ca/Y7hJb8dHPr5/X6hj4+WLvwgu2Cox9
86J3Bq5Yy65T1nKKZYKvsEFeA2845thf5wVfN/vwck6u3YJLbYNbcfWZI49M
9VRLuyV2WNDNWoEc9eUTX1P5kNODA087//V1mxjQdsYbdWLaTeJZ70ncav8P
P+z5kc+l7ffwle+C3y7GiImcC/CQa5a0m+DHduafNcXVeO66bhyuaDv/2Yfn
I18RtxaeuS9sOu8r3zKe2g60dPV8Puoh9N+4FS5yLuArx5B20tV7+hXYJn1O
/E81DfpTahJOTfrztFR3d2bgB3uUtM3AEpqhcTq48lk5j0OtYPIDw67BgXIR
tW1JA6xs8dTgRt+XuEbfDJzIV831CwKT+mboEvoP2FbXL2vc69ESc4zjOzbx
e8k9pfUylH9G+U6j2qOwl3GV28Sq+lT1+LZjBd9q39EQXBf5HfmYM8IfM5bE
ZuVYQ9sKHly/xODGxdTw6D8wL/oJPLf4FUUDxBfSPsJFOS4QY189608DV/j2
jjlcIVbBsBiDr+wPnCOG0TCdX+qOtGvU7bimwIN8xRoRe6wF3xf/R8xQi5U0
tPATrr9u+2jjd9lGN/Bv6ac+AGsh15i51niW988YyHw1iDH5Z6L2c2Gs37ef
2cl1FNlX1yfno6/OR9sHX1nPk3HF2sm40ufnucaP2DjnkTmSD/FnDvnhq+o2
uY8Kt/qoofkTZ2kvsFOOM1qx4w+W5C5wKzfCP8YI+M+ufTDmNdh6tQi+1z7m
Ojf6LM/kmkDiX9vkSsRGXo/33btb+H5g1fvccvNOoaOyjmyDc3me+/u+YN57
kmuwja+Y8iZrhKVBu/ZcuMrtHGPm2BOe6Y8l58ffev8mZlwyru4CjSK3s2bi
fWqctTkpPq5l/HxrIOGxD77xRTWW8GeMfdCj5HZ8dccZXDkv1GY4F2hBji0Y
Exu5vhF9wDnib13vxGVij9hTfJIH8W/zfhb65pySl9GHxA8sdTvTAhvUX9mf
u+78m766LHEIlvxbONx3wW/0Wdj3jDHbrBf7MAo/WV+aDK5G4TPjapSOkb/P
WGr6UJ5rm+vFGNfY5vscg2Qc6svV49LGknyMF+Dw7FfI53CF83j2V/8s5uLb
3+oErsg1Oy/N/oKiozqn3Me/pQ7ZuTjnv98cbXwzeQlblnNPOQekrcR30uai
o5a63GnxLvg8cil6mn247tr3R3vZeW8NmwtuxQa23mvwCW2jp9lPYkn7j7/h
ffJ8TcbejfKXRvlpo7gLjpJnxmto24/DVdbE8vcNlsZ/32j+w//WZ2GLtZV8
tMXYZbULfHJjf2IHcXL3XX8bGKjipsAGMZ24wqdyjrJ9YX69Bh9J34ncsbYM
TnCOyJ3JFcRlYgn9VhuKPiDvgbdUG9bJNbFZOxVv5LJ9Frqrf4s2kutnfHe0
Zf8218nDsc/FV78rXK0pjzX2qzzX+6MD5GcNa+f+5DxRvibjMPtm6K7WbPBR
2wd7YowYUwyQP9JOsfaTbp98m2fDf0aDck7hKO9D270Y4FZtIe/NIT8rNzIO
ydcKXkVr8nu0kbyPQ1xljIF/8UCNaL5nwlVgCY7yntThi7fLLn1XL/OYff5t
cDWRDe3XsuZP6MMP6mDD8JC1r8ngKt8Hv8s2eNY+okGpS8Dz6mDt/sqIEWyD
Se0mvpBzCs/IG0fMXzc4jWuM9/k+x3TWIaCtWcuBz6YGhX4rxsiVeD39l/fy
PiBitLIPdFnwCe+V9oBEbpEcjX8L/8iHfF/q+jbK9ZDByY88/Inw6269Zefw
+bGDvku2g6N8qt93e7yNa/qQccK6G3ZN1l0Hc5G2sbkFV1MDS+TjxBI2Qq2D
fMoVF67tOOd9JWP6/9gI5wgbZ5wFL4m3vA8RTnB+qSsQbxec//bgKOqZ1RCw
Kert/fnBnYMTyMf5ff+e1ouDM6mxz7pB2RuyYeCHcSu1SR8IjGHH9dmyjsr+
DvuAr2j/iVPUOppc8HNz1G+KmYns5qj7D7t+VD9znmgUxuDzgdxT1CKqXbBm
3X/Es6yVJa9UYoRpHX0weMz5QrdXsyW+K/W6qwJvxJ6ufeI454X9C9pB4i9x
Rb2xax+f3+uxQeIZrJY9s0dHG43C68GYeOZ6eQybnmK6lJveJ9rEI17D3oS0
ly2w1OxVbDS0Hz64V7RHaQuTwcNv2x6GgTXF8CgsjbLLuWaDZxknNrn1f476
nKx9eR8+WU+TH9AMzbdim8zpwyHq+fCYGCM3J2+gC4krNC7XO7pQ5gGxwfyW
vTNb9cr+x4vD5oIf29QTmsuAk/0erck+kC+Ti7i/HIs2UmKQf4ncEDl98b/y
7r/rqQ3++Mn9eqVWc+ka4eq3wcDvA7drqnvkeDO3M97IqxqrgjF9ez7iDT9Z
7QucrPfxl9Z6F/6MZ2JQKyXGqL9SB8M/11bid8ktxIZiALuT/S4xRi2QeCa3
bvxF7sb7EPvnfQQlz3hiYIz4Qn8PbcrrwbB8eMbpbwgsPfboP0Xf8Kn0M9n3
Kq4eXr135JVG+cAZb6PyfaP4YbJ4+H37b6Ni0mE1YFmbzbYSf8M94HxKLdYH
Kv/kJTWW4IoLTts09Hm1enKC5oOYX/NTxPi5jrfU5EyNOeV7/Stif/kBPpG7
mN+iRawIv50+yEXkpMQPvpZ8hW8vTvD3bKOZFBs6FrgCM94Hv937TJkyN9rf
v+fvg3tzvQoxtWsz11wNakHDcPWb6GDDvs/++Zq2B+sJc83hqL+1/7kP+FrW
WuDrukeSuLKcW3JE59QrX1Hjh9it94o31W00eXGFpiSuiOutOclnN1ErmGoG
onYL/cEYEG6RH4gF/B4fTDtF3ULJBRQNgfyUGMMPFxvgTdySW8xahxjDvyr1
Ni+JNjY6x7ZiL7dbvajr+KY9DmPaBWIH/318PdX4+HEy+aBRsefEOBmPyYyN
3B685rnaWe/KuUXeXW7nY3yEzy9foX2ZW+S9rEEi9nS/OTbIsybgsXLuwdbd
cgbXa+JsBDQxMYOfo00Ew+KqqQ0uuoH+Nng2voMb5TTw4/XZryMuEGPoZvIP
eQefRbvEnlunWtaN4nt8gBwvmIdlnLXddb/b9U6NQZ4v278rm5UxNhlc5XbG
UtYWRuEn4y3HmFnjgsMHcgRRf5j3A1rPhk5lPhHtwr1UnHdRzgEre4XgGcec
OZK78O2tf3j0kX/spT2zYfvwu+wDvCpOqO0peyHnBK7AmNeTOyh2bXXEm/Ck
GOM8E7mo5e26jYYvNuBw7wm27Rtt74+WpW9AnOuZbHyyffS7dk9EjLm2ck11
qok4ZFSd/JrcZ5S+OhlNtZ9LZwTG+FhrQW2wejt+b6kV36Wba1yLbr8ichzY
Snkpn+eW9/gQZxk//uD7/xB+PjqqmMl1FPkMLvqQdQMxgG5fapsPCp8t6wbk
KLM+Jl+h6fksdAnxzPh4DbWj2lA05zOOeXeNK/S92S/447oNz/usti4lccu6
nYlwNeh32R6lW47C1aj2eJs4fxz/TAZLuT3Imfn70v+ZYzk2zLU96qt88jV5
b6+2hjPBCp+sTGcszIucMnqX3z9w/x6BsauufE+v1HMuD/wQR+hTwV36VBkb
2Cz7wPxaB8gaUd8gBhQb1BTJY+Qlh52Zwz1dR9k+UpNW3bPdW3FmV1+UXHa2
ieKn/2yQk2JOcx3y4F6JGOOEpf6a5FV91zi/eZ9F054/zifP8UWDz4z/3yx3
kHGbea8fe7PSftuSv0Y7LWttRuiocIv+P7Ulckg+u4l8Yj4DU1+OejCvQZco
+ywuDt8JP1w+RGeQT7BfSR8LLJHTMb+Az2+7OcNhY/kkOA3bKq6oE9PmksNy
jaD3Fl/uCOLBnmOX7aC45ZPz/q5HeCzXq2Q+8drcnsgXyu1huMqYyRzV4GH+
OE4b1EaGYWbinOZ4PX+Utj+q1jqf+4TvYZ6R+M6xXXLmZlGHQ72xuKImOdfh
lzMPz468JD6880vsVs6H2Sx8JHQJOQodQ1yxv1IsMRdqKcQp+pPYO2MW8Flq
GNaJPDv8ZptcfN5DJ1/hT856/p/VbTAvxvDT0h6o2LvHp2BsWuiKo+xd5qWJ
NIFh9m4Up1G/4fc5vsjfZ/uY91yvqe46GY2lH8Mz817LMeu+8KXNd+DPlLOC
N419PcyRuAKH5eyIst+W/RHijZhRjuKcK/PXnMkpfqgRFSfoFc5jc+7c4+Hb
2M/m/KKnQ3fSzmLv9CfhYWMQ8G99Ne9++qlvDzv4i51n9Npn8dy6Tb29sQ/v
Xs5amRq6Ch/9rqZd6oS1BcRc6kLo2NqRRuuePs5nIy7LfJh5zOdkvGXe+33j
ajJaXN5vy/s6Ds25BM08osPrx6Jl6XugVeo70c7nS9um9s/1Tj2Ydqry24Oj
0OTFEnGlOCHPKHeR61FryntP6L9+I7whbvG1yjlgs2IPBRyV997KUeRJbRNH
V2uqbsOxH3rlq+s2ce7Ch14QdtN9JXU/kg6WfdqcU7PPfHINp9e38aZ2ts9v
kRtz/mVwrm1njI2KH0flK3M7+1ej+GqUTWxqX5u10OS+yz5x9xAxp847Pryx
P/F+0czf1Evnm4UPBsb059kHoU2sOCRiOmra9es4O9FnwZPHLtuq/dtl3ZKL
WR3jzzg7d8yF12c9Ci3FNnxV6kvXC8yQ96x8tqjr3u/Bzeo2Wtnmr39z3W7O
QHhj3cYHkNPA50PHP69u47N5xiy22BwZuW85k3py/b3mPOTN27WzYfgh1IQY
T/Fecl2eo+xf5dxN9seynZ2MfzWYMxUno3SJifKnuV2eOyOdR7Gi4zvibySf
p5vP8XCssg6GHpvPGxF77LtxfuErfblLL9k27CO5Zu+Plu732Gj7Q12QuGI8
xSdz5N9Ss2oMmG16c9b6emoLsXcA7pWv0Ge0j8QLVYxQt/Eh513+jmjPXGes
bsPt2lb+9o7D/iT2I3h/9p6rS1MzVvatUJc+PXxF61XyOsrzkvNQbW18p3nf
sucLzOSzSvrjgqY9qt5+MrmDydSAZbs8GCO4XuiP+hicJsZyDQz5ZTkqn3sJ
JtXt8f/L+VR7hw8GltQw4RPtGrgVJ2gX2h3eRXvdnnXQcuYTsScdXS7pD317
wM2/w8Nz1v2Det6xlfISGpq+PTgRS2gyM9b+Kzmqe/zCjwTGqn72Gmw80N3/
lq3rNprMoiveULfBs89Cr/bMHD6OLe+ivcjnGmU9PNfJZyxxTX9+s+GrPL+5
nXlvMrgaZVsno6X01ysWvYL14vvilxqX0U/5nDEs++5XpnNpym9SkHdWw0cH
kNPQJ8t+7VWppnS9vjNDfBbrWmzja2kHiRPFVf5dG2oUyz7Ks7pl7/OMrr4T
udHXbNrt+V6Hn/zX8f1ON/2teTHyR5G7v3b3nQInd+3xrvZciOu76hhwnflZ
NJwXfeS1kfuoMBC4yvyT8yn++0S2xna/nvnc8emo9qh80yg9drIaXe7bwH63
wFU5126jqF/FP5Fz8LuG7UPElslX+CrlvMez+84HyOfuyjns1Sr5nbMDY80Z
wu/sOheZr/IZBd6Tj3VEaLZveu+Le82779Ld/YE/j7No5B/0OvFDXGCbPMLd
O+7oOTbd4055T89+eh/e8cJFb4vY0xiBfKj5NT7a9EE75b9n/OS6KT45Fsi6
t9yV29VYjZV5nD1UuxjU3nONzTC9azBesD2R9uXf5vNVsvbFx35iE/Vz8v4y
9qhqE/FLjcuoOXSfdT5vmfuks+b6zjLKv3cgfqixsQ0mvYa2uGIPo7pos+9s
w7auY2V3o/e8pm5Ta1H1fxzPwKVXz3trYEafCrsprsC2NpGPuKL21etZC4/s
uUU8N+NKu5A5p533scFr6ue1flcz/o3tgIet1cQncT8+OrN2gU+urcq+tN+N
wkO7V3Gonj/s+lH66mB9iO0BnhwbpuFQI6Ftyr8vkGsIyQ+aB4cfrKPAvohD
8KP9wiaKjeyDofmXOodnQ8/HNzamIHazDW6da3hGPiGHZa6QGuwrT3953aam
wviR/Kn+Epp/taaC0yps99rndpcf+hetP7Zp+GbkidZ/91uG6hViJnMUn5QH
HzMuzr+5Rt+sceK8a+MRYhDXDvqwcStaims5P7epEZoeMVHWOvw++2CTqT2b
TPw4SjNBY8xrSvzjm7kueF95g9ot427uaX0OeqaxOeNmDQ/nwqlnEjOqicGB
+mDwiRyF3RFj6Jn6e+Az/c4OZ0zV4wx/yjlcIy+BT+uL4BZ9MPBvDRv562rt
hOZwzf7bxfXGhvCwto/9JtZREBf4+1x88llquZbAOc3nS1Bj5m94UaPrOXJo
Gq4FcmrqIc0e9vVbTp4a++jreyXe0xajz2TtN2tx5cze/n0Zw3NMs+KaJr4o
eUbvl2vABnNVOSebbb2xJPysFspvl8jJrHGxRNsYDR4znwIXeeYecXquB8tn
iZea+Q2jfo8YUI7Cnynnfkzrvuu+vwufXG5h/OWrZk6XxNgak/KxvhFf1PiR
PSnGj9ynwkPdRifRV6etVsba8b34qJG2/sa4uc75AnIB/vYiY1LxQ31P9GQ1
jeb8q+YMQ3xLf0evfZY+cDed4x01ePCA85LPtcv9GdwLJt6aM4QbDMDVasJo
AkV7LLWp+W9bvSXiwX6dJNvEpo2vrt9FTied1d8XlzlW8IC+B3sozKdQlyXX
EbPrh5NXct6pO7X+gT1fZR/Z+r18Ppjziw8mF5GjsW98sk6edUu5lJhC/LAf
5NGdtm39rnmhd+FL6LNRzyOf4I9Zr0vc6hp58kf7hn3P58t959vdnhjAr3Av
DDpMOYdw68ADNl0c1nOTzgApZxpP7d1+3AYRw/oujImaMLztNdh3OZ9Pspvb
OFbted0d58KYnbOMnJfWj404K+2HDV3r3nSOK/ZF3uOTzxP2PoyDvhaxtr9X
Rf2MmiFxmTE4Prb+Z9Yrcq0CZzgYJ2IT1e1Za74L41z2ms0cc23y8T58RuVi
8vf5fHvtCxqINg78WK/LR/w06/dxOTNsGTksY5afPn1g1Hs/+MCeEe9wjqjv
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
    "], {{0, 67.}, {50., 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{50., 67.},
  PlotRange->{{0, 50.}, {0, 67.}}]], "Output",
 CellChangeTimes->{3.474986806760234*^9, 3.474986938533675*^9, 
  3.474995112499878*^9, 3.4749953114023085`*^9, 3.4749954751491647`*^9, 
  3.474995850798202*^9, 3.474996422570026*^9, 3.4749965598280926`*^9, 
  3.4749966263859053`*^9, 3.4749967687827377`*^9, 3.47499690921245*^9, 
  3.474997592411667*^9, 3.4749977290326824`*^9, 3.474999113539194*^9, 
  3.474999567836652*^9, 3.4749997882308116`*^9, 3.475000877565665*^9, 
  3.475001542926301*^9, 3.475002753602501*^9, 3.525011890054943*^9, 
  3.811523235987348*^9},
 CellLabel->
  "Out[782]=",ExpressionUUID->"d5bbef91-c017-499d-917f-017ccff84d52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deconvImgsFromCalcW", "=", 
  RowBox[{"ColorSeparate", "[", "deconvImgCalc", "]"}]}]], "Input",
 CellChangeTimes->{{3.474986843897519*^9, 3.474986889282338*^9}, {
  3.4749993658867593`*^9, 3.474999376319249*^9}, {3.4749995469872894`*^9, 
  3.474999547736929*^9}},
 CellLabel->
  "In[783]:=",ExpressionUUID->"1b64f932-c7c8-4a48-bbdd-83b5cf1617d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyF23m0X9VVB/BnrTTVaiNWxYqa2tahdYgUNcr73ZO2aqlaVxYdVm2rhmoV
laWILoe1/CNAgDCHEIYyPiBAgAABUqA0QJjDUIoQkAKFMJYCpQErpZVW72ef
s3/v5sejvrVu7u/3u+ees4fv/u59hrzlk3+/x1++Zmpq6h/n9f/ssee/vHvf
fff8tw/u4Mun9tz7Xbvs7eF7+2uX/vrKU3t1Z61Z033pwQe7xx59tDtw+WvL
ccf+aPnPe+/tPnvFou6A/ffvvv3yv3f/ceeS7oJ1v9Qdcfjh3eeuvLI7ZMWK
7sYbbui008enT9gp7v373SNbt45OO/XU7tBDXl++9txz/bt3dp/ZsGv//KnR
ISvmdeeu/YV+vE90p5x8cnfwQQd1X3127+7aTZtGX7zvvlE/TtyPXjk/2p0+
s6A7dvWbot///vo/dVdtnO7HOmHk+zdfeml07tq1I+9evH5hjEEXMvXvl0su
/rXSy1XI4tnpMzMjMrhuvOF3Qi8yk1dfvTmmPn/77SHPWWveFjLR83++9a3u
f7/zne6wQ7+/3HbrrR35jjj8DSHbUUceGeP1v/X2uiLkIzd5Ll6/fsQu+y1b
FuP1Mo2e37bPKO3WyzOtXd8PHabZ2Lsu/Vx+2WW9vd9QTvz0T5RN15Ry3rm/
WK7auFE/HTs+v23biE/6cUe3bN69S93occD+rylnnnFG+I0e7l999tnQ46gj
f6jst2yqXLtpcfiYHfR7+GE/UP7rhRe6Lz/5pHfYOfx09MqV4Y/jjzsuMMI2
/fsj8rGN5/TgO+N7j33IZtxvvvSv0a5vU3o79Nj6SDn+uB8rntOh76sjC/uw
GbvyLz0uWLeu4xP2ZZNTTt65x8HXu1VH/3BZfsD3Br74qMfYyDj9+92ll+xS
1p7z8+WE4388bOA9PmZncp591tvLTTf+bll51BvLgcuXh469//tx/jDk5t/e
Z9PHrFoVdu77D/vC30knntiJjys/+1vlhuvfWzZ+brfS+zHeIxt9+MMdTuGu
H3uaDN7n+/PPOy9k6tvwfWH3/ff7nvLE448HpozFxuecfXY3c9rPlJNP+sny
yNal0Te8Vxk/2tFx68N/xo+FX/3G7+KTDOzLhnxH/16n3eiTcXTs6tVkDl3g
i++Nrb0xbtm8eUR2esCt7/wrVtiaLvhBP+Ksj9Oy5sy3lgfuvz/ijV/5hR7G
WH3MjxR40Ac92Nn7fLn55veVL9zxRzBR8MXdd90V/RtTX8bnP7gQK/pgI/5k
Fz585umnu1tveX/RH98ZG3c03cexaGxc4M6uYhgPiVE4PeP0txRXi9Hu+uuu
C0649JJLOvrBFfvoj3zGJms/TviLrt4XR2IE/8A1n1T5F4fuTafwNRxWLn5b
4LH3U/AXX9KDnuwJi+58wgZiz+d7tnxIHIZv+Qe38gNbkgvW8UiN7cW9fzZ0
F114YfhCf+ygLf5/+KGHum+8+GLwgD7ZqXLLXs0PM+wWOtAHX7Fd/yzw0Ns4
dKkcuDByC39WrLwpcKof9vCc/LiQ7p6zORzCKt/zJdvD55FH/GBw1zVXXx3c
wnd9HyEPW/IDHPbvhb7i4dsvv9yxDyzTg22MQWd4YF968AGOg2c6PPH4XwQn
iCN+blwQPM+GdGYb9q7P5nUZH/TgC9jUNz/JnXgGbx2zasfITbiMXWreXDq2
M9vjA1wjj4pvPsQ/5NGe3mTBeXxNZjbQxu9yIVxXf+8asogF8Y2rxDA7uPMB
O/je6xTY1tadzviCbDWH7hW5hB/cyZltKs/OBKbYku3pfNKJby5yMnzJaZ5l
HsFR5MSH/RjdF+64I2QVc2KHv9iSTf1OTnEgr/kOQ9VXt4fs+qo5f0P4mO+S
R/TFdrAD78aUQ3BH3yZ8r514hQ13/uEzWOIPMe4zPBqH38WCMSq3LAg99N84
dMTe8MIXyUn6zufu9IIBWCWXuJH/+Dt5rrZb0uqjtZGnUm+x6jPsuPOT/E5f
4/MPX4htOUd8yCE+i3m20qd32Lby7fKo+VLWavt50SedxbB3PPcdjuiA4+Rz
eDLemWf8bGCFTLhTjMBT2kFsinHy0f3gg3YIrNx8002BZ/rhDXrwL+7ig8Qf
zhf34oBP9E3G5Ep3nJK5LOVNGehF56xDK4aXtRyxdbrWBFMxpnxLNnKIj7QF
u+iX7S+68FciF7Jv5aMNUWPBtvoI9mHxni1bok98T3YYpJM6S80De3xNTrLh
WrajhyttX7l0fVzaJebFSeogzsQb/7DpHZ//QLn7rj3ChmrAfNc7+ErtdMXl
v1lcPXYir+IatSFsw5Pczmd8AHdyI9nVODClb9wvPtP2bI1XjUNuvxvPdzJk
TkvMaUPmlgfj+VT705/YfOzRT5bepoV95YvkCn3CDQ5Vf6pzxLpchR/lEflW
LONXevAVP6gFsr7H0+7a1vy1LeKQ7zOXpR4u+MkawzN2hbOap2ZG7H3qKT9V
jJO6iPvLL/uNPuf/9tiGdM5aMPO0WCAbH9LzsEMPjRwg/nHsaaf+dPgKV9HH
vAXf4bmDDvy+4uIPcY5byNvq9lGds2yvR/qEHokz8uI5curPeHK4373PB/zh
gm2YEX91/rAm8hQ94AVXyl30YHtzLLkx5zxqVD7DI+T2PXkY5thSDkv70qXO
I2bGMZFX6pS64LiKI3OpddGX7+KlYue+EXlxpVqfHNrhKDHAB3jg/PPeUcQ8
G9OVP9herjNPUOeTly3YAP7NQdQpt9/2BxGDjWfDBvTRhqytPnpVXWrcLo45
5NTgjz/okbWadrBEFnhXU9AB78CNHEsHerK/+K1+2xx3NvcuTsN/agz2evSR
PUPHLXd/sLALvTPPZ62W8ZCyD/kqsSZW6Jq5PX8TX7jY5XPqJ+75Bd7lCzFO
DzWzHJC65JwID+E0dYXc6h11iLiCR/OP+7/4xzEPoQNfizP4pAt7pMypS+qR
+iV3pS5DvKUfk7uHuvA1W7LxuvPfWa6+ahQ1orwvL/rdvPbCC365JMdmTdNi
omt1h9qz3Hbr75cNl76r0BNGxZZ8g8PgeWj/1GOoS/qEL1Jev9e6YBaTuf5S
ny0OfeBQbOOEB+7/WI+TRQU3iQ34IJ9YUBOyrZoID8mf+JU+Ylnug81av28J
zq48tVPU6nw5GROTekz6JXN/zSWz7wy5T8xkXUonXKZ+YVM5mTxyBV+46ImH
1He1hl4QOQJn15pOzb0y5oKekYEvzOuvv+49xee59BhirXLVzPh75v2sn/Kd
VhOGvnIFvzf/xDxeDLD7ioNfV3x2F9NyjtiRP9UYzffBRS79kF0twv45h+DL
p7/y16XPXSVxNRdXzXUlbrzT5h7b1WC1Dpkf9RIsqDfUlGpeWIAlfsCdbKuO
vewzv17Md2Gj1lcfinqprs1tjLk8npU3jSPuMi9anxBjeCP5ctIXc+FseM/3
xGbqwt/sKVbZrrZZGLmHX+R5/ERunIaXrB/gH/NZsQ8rdFSP4GK6+A6b6mmc
hi+sGfCnNa4nn/hUGfLUXHpM+mOyTeqQuJudt68f5XpdcpjclfNjflEzyQNy
iTzAruRT46T85lt8K0eohzzH2V977u+iNn3wgY/3uWrfMmn3uWT9bnpOcsKQ
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
HEENQr7cx9I3m8lHeIg+/PJ/DO6s1Q==
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyl23mspmdZBvChhY7SfaURSh1hwIl0memmcL73ZToC6kTamSnFpZFON0Tb
0M50WuEPYinlJMSY2p0QorWUscYYrF2wxhjEUuskBkppWYaYilhrnaSUUkAR
fX/3813nvOfMOcMknuSZ7/ve5Xnu676ve3mWWXXRezdfdsCKFSu2/9jwz+at
167ftm3r+7Yc5MelWy8/bd3lbm4Y2rqhff+aG7snb7upu/+BWzrf3/WKj3ST
s36vO+e4j3Unnfnx7itX39tteuGh7tDT/7Y75Zi/6R685b76vPiLj3ZbHvtq
t2vTN7q1z+/u/mrb492JR/9T3fvv8z5V7919/93V1zs+9f7u6duvq76f2XFn
NePd9eQN3apvXdFd+hfvqec87339rP/2ru6Gv3ykfhvbb2Nde+P3uiOf+2F3
2ud/0H30yheHd5/p7rnqm9XXww9eP4flle/8/cJz8xO3dVe9eEf3yK13dSec
8efd9sc/XbJd/6WdhUW/wfG1zY91t9/0RGG79b4Huq3fuadkogd9w2EcOFyD
Q/9+w/DRK6+p3/A/uv2z3c6bH64GgzH7Y/+sdGm8vz73he7rpz4/9Plf3f8e
8VyNP/sHTw9YLp3rR/9k13/G9dt1fcHATj533PvlbsMXnq2+Yg9jwUxWernu
u7PdnrVbS1Z46Nw9ujn4/D8sne2491fqvvfo5tktnyk9kV+DzbPGpaPDj/rn
khsWn37Dd8IZJw/2e1uNaWxyswcdHvncB8pGrtGxsYLJuzCw6/+s+3xhcN19
8uKRPtZ/e2M13zMGW+kPHrz6+qnbSl78MYbr5M5zxqdXsrATne1Z+1RhwEF8
GDBPBp5NDj29L70Yi56MS4fe1SfdGEdjezxiE/2QwTPsF/nJp+n3K1evK7u4
p29yhqfeoS+y0rvxyGBs+vQ7/IPXu+zCd4wNNxsOupoM700G35kYj53xDH79
4RsZyYqv3ucH+ogf4hkbkHvt8xfUJ9nIbfz0mWv6ZD/vkt27cITTnvE8LH6T
Q598IPEA9zI+naz61p6Zq148fjL0MRl4PjnpzBMGnpw7Zwtj+jQeG7NHfJAs
+oAjNoSDDGSCP9ymWzjolCzRi098pGfNeO5Hj4k7iRfu4S5bep8tfA6+NQPL
MP5kkHMyfJ88s2NV8cC49IHTkSlxmPzsmxgGq7HozCedsTns8Znwzf34Gxw+
PR//TzwLr4wfG8EX30ksYBsYcAuGQb5q7DI565DiNbnoRJzJGMkPiYvGD4/j
A+Sk59jCdbYIzz2T+JGcon/yeS/x0TVjJ7eN30us0LZ+Z82ELQbfLQzwDO8M
NrlzMuSXiXiWPKU/LfkkMSp8MBYu+Ez/8Hk3vkun49gV2fUbX0+O0fQRXMHs
vu9wepeu8Io9xK1g8JvP+Bxi3OT+B44ZYt15Nbb38Akv4WDT5BVyJXYnfkeH
7ieHsw1syVnJ756Dlb3gTf7nk2K7eIsDno1fjXDNXPfdlSV/8/ULCoPrra0p
2wzPVJ4x1tgeybf6SoyGgYxwk8X18Mb7iYPRu0/XU6eIb/QGi3vGEePVH/KW
eOla6gb9DvKVvJteeOPg41dMWhxeOZnaaWYowVa0Z9a4VjzDC/ZOvo09Usck
l4gTnoXDeFr8NpwhQ+ItuTUxRszEZ8/SG3uoQTS5Fx5xEx/okaxkJmfDsqd+
DzrT3rRi9MdOfAjP+D/ehKexQXyTfoMjsZLc4ZznwvdxHNDYBA54ki/wGK/Y
RB2hLvE9tUzD0Lg1xgAfOzR7zL5J85xnGuaH8K/GJX/qTLLG91Kf0PW4rk6s
YEvf8UzeIXfqIbagK+/SC53zjdRDDz94YP+92RW9Gktd0vjTWnA0G41xrJzz
lWGMaRxoeXOwYckaXxhzntz8Fu/hgMu14MBLOoj+NbJryd/j2oj9cAm3nth5
QH/fIy/t1b/sEt3HLsGwGAfOicP8T//8nv/L/66N67FwnsyZz6TeTFxNHIWP
7h/dvqGjE01NphlHv7Fn8gY/5yPmIvjl+xjH2BZjHP7EMT6OCzhJ//xeXIYJ
FjiSa8ka30/MSowKjtSXfJstBnsP766uBg+eJf5mHqEPWMgghuGZNi/3Yhy7
FuBgD7LiJnu2mmAdPVWcI4OxjJG6R2yObwdD8rW46RlYYExtLIZ8/5ojChOf
YY/UZuGv38mf8bOx/he2+bjrj28YAz/pofH9kE4MEyNwjv7EQfzFW59kTn6E
JWMn/3geVvLhEd2wB0yp9b0HT1ryaHKu+4t5lDbGookBfJxv83GcUu8Hx7QG
KLnY64P/9op+wNnL/fER46emSF5M3MavxOrMXWILz7me/MLu+nMvtdBiDPHr
hVyb51zLKy1+wTaO1WobOjRXe/vrD+7FFDY3buQwZmqUzDsS31zLegdf807q
W7pITA63vK95dt4GcsRiHHtjGdsstQsMqQnEMPEgtUfq4OTE8ZpD5GCHxIHk
n8wLk38yn8rcKnVbatCxXGO/XoxjnFsWv7OQj63uxEExWUwld8ZMfE7dm1wR
HY/n5Jlj6iM+7lril2tZ7/nROBbiGT+z1J/70zqzcj4sZE2sInvWUFy3BpFa
is3gZZfUk/GVsS4yV4xd2rrC3jjGvj6fXzYuiF/L/TW/uaLyihiWOUziPhnE
UxjUtWpouQKWzOPJGH1nPSX2giWc9Nvzbb1n3jf2r7Xacfx9/BcMYvRQA3WZ
25BF3Ek9nzUJ8ou18nnslPwXf4qdMlfPPMaz3hejf5TcY77s6/eIixWTrb+Y
Y7IPXyGP3Mkm8IQPeAUHnWbO22JewwRv8kV4lBgOQ/L/4vpjf/EsdV1fS8xl
ZuQb+lXPqU2z3kPPcNAnmZIzsu6iqSF8JgazZXwMfjlLXbQYx3JY9oVjYZze
OIcna0rwyCkvf/fhvbVlWOQVHKNzsrIHLFm3cj28SW06tpdr/A4OdcyYE/tj
l+XjbfJpm6uEY9Yq2xrKYf0Dd7+2crx6RX2DY2oLsvEP+k0MTu4kf+yixX9y
XWNTHKAzuvv/4EieH9tIjWwtTL7+xOeO7ftj3zCHQ+0df4FFrKJfn8mVYyxw
kje2SYsv4ZYaEA/mMbT4tTDnLR3T9sU39mDzthZyWNVc5grWM60Rq73wSw4n
O27BwT7J12zjNwyw0L9nyJ45JBup66Yxez9ssTeWfeOo3FmxynxHvWUNR65W
B2d/QP1L5vg5uZMr4tMwwhI+JS57x32ctbeDX1NbzIRjy/nBvuyyMF7wk10z
bd24zZ3IIc/z5dRSWbtJHh/HWbImxyTvs0fWJbJGtPPmt/QXHvQTvWemHN/L
VxbH1oU18uwyz87nSP4nh8iPvsuLOELmrKOkjs8+VXyDnJ41rxKfycwumVfF
PsO9ng+yU+rw1CLL6Xhe/tm55/flP22tZU3F38xj+D9dZ38rawnJ91lXJDMM
6gNNvcY2cIR7nh/4VLya4pxbS9xfHOM1oqX4t1QfxsiaBfkzj0rtnvWsxKng
EMP5m9jhfjjJnuxx7st+prC0teLju2BZzKml1rX2fmZ5v5nHuGvGPEU9Qe/Z
K8kaHTxsoX7MfJ1cbU/jzspJeJdYYX78yU+cMczZTu2H53oxpe3PmgetnO5T
fWDS9kbWVGvrcPcsWSPub1xOzUWu5PDsqWr0iTdsAQO52USOSB0KJ5/KfJ8t
tEE3/TnHvbK/6emDeusY3jGW2si74pnfsI3W45etZ5bi05ibbGKthZxiKrnj
K/w961r8yDO33nfmtJaaLZn8znydDsg++E6/7Zs/3Z+8+qT++i+9vmzz9O0v
6e1lqoXYrq2zn6zWq3jDRgvXUOMvC+uU5bG0+Za+cIddjIErWVclHx/K/MSn
5+GAzzWxqs11X95bE2AP/BpiQf+hvz+rf/NLZ3qc+/INP1X35eG2B7RGLp5b
K2GnxsHE69RX47WJpW3kHn3IL7DIZ2zBJtnfyNoWHrXcsLL8hBwwZm9c/Xnl
yh8vO/B5GE498JcHW5wvp/TbH//Z/paHX9d7xtq9MfFhuo+QnBkM49pmyfn8
Yiz6aXtHbU8ia/jjsx3Zr2vnBU4u38crOLLGaE2RT7z6tV3/4T9+Z7/lsV/r
h9zT/+NFW/qvXnx2Ly6r7w4+/8R+kLXyPvn2xf+9faZstIxN2roELOaPdJ91
reynZe2e7vkSLDiWtVj3zAve8LZD+4v+9edK/+TXvrZ5c3/bXW+t6w/ecnrF
AvURbo5jVeZNqZmzbzp+JnX8cjWCPjJPSX7Eraw7+sw6ceYemu9trWSWjfpX
vfXV/fB+6f0fPnRa+QYcuAWH3/9xydrCgQfhje8tfu2amONZL8UDcZJcC+Wd
Xx9b3m4t1uMMm+SshroYruR6vsK/s++rkZG+1Vif++TRFXv5w6CbfsDcf/r6
ny+fOeQtp1Q8Do6pDaoOMpcQL+hEnKPD5Ju2p71msngNb2kss2UXeqBncVJ9
L2aq9eU7uYWvpG7PusOQ+0v37GB+wFfauuyZ/ZCHKmbhlLrY+Z7pOkLZgn6c
9bEvRAfitXdxNXG+zT3vmMs3C2uZBdwrTtJP2wffULaFQSxSb9h7YqPx/lXW
u87+l18vnbMH3xLbzM8SvwZ5y8flGP3IhdbYyEY/znQN+q3YbK/LuSj+yHbR
5XR9cC5/Zh0C1vn94TWpsyuG8xO1hThkDJxWb7ARv856T/Z5yMcG0zNEVb+x
Ifmf3bK+8gnfoW/z0fCTPclqDSTrINN96Ak9PnnbUaUDudV3tm+yNvnFTnKQ
15jwxE5tnXhV+YjzOHKXWMn/2IMNxC15PvsLdDZdry8d+2xnVQ4pLpmPkl8/
OCR2NHvtnJuT8hP1AQ7Boe7pXveqsvOJR7+9OGsPDOdzBsT4iZmZW01j3cw0
t9Y4/JxNjM0PxWHv4J39F/lQbU8v8jPfhL2tw66e5u0NJZ/vchAbiB0589b2
hFdXTdnOdbwxvlOxXHzY/I1f6s3V1D143tZE9hSOyEknbX9udpJzVHIJnHSF
H/FzHGVb8ytxjV3a/vQh0z2EA8sHcMA+DFvSNZuHz+YwyVEwkaXt3+4azadW
1nfy4eJgo4rbcip+tvWddnaNbnHa2NO6vcbR6EVOzN65dSI6zNlDssOSvVBy
4Tc/UI8c9ppzyr/lFPaZ7tVNkuumNUldn55JmcvXo/MPxRE6xgny61u/OO49
NqEvMd/Y4vX0rFStQbZzRxeU3XHfviZ75OwN2XNGU+xn27uefFnVUfKeukTu
kAvwhz2mObtswMenciyIneM6d1xzTOeihePiL/5ib01R3cRWcqsaAu+MxyZw
eJc98N6Y5KdTeJIPs3+Q/BG/aHX/iYXHJztGXg3P/v3DR5a/tnNCGyej2D9e
g5/DRiZ9y6swwEL3uMbuP3nAb1QTD8QVfOEbbQ1vd9lDDBJr8ZSPpE5hl/H5
poEfvdiibk/NLh+2PeqW83CKTvGCDHiIX4tqirk1q6zreq/t0a6uWo3e9eFT
3tq9/qKyv1pUbsKT6Zm8GX6eMyz8KGcr2YbvZ08xdVjqp/88e1P/Jx98R9Ui
cjlZcXSalzp5AO/o1PrK9BzgkutaiZvGb3n3qe6UYyY1BhxqBOO6Jkep6/iH
fNZ8bk2dx4Mr+7vjM3I5SwALDGo7/NRgUK8fftS7yj/kd9xiEz4kB7g3yFVy
0AuMbV64cS5OtfN1uydyDrwanoq/cJgfxEfM0cQxeNjb/JMdWm2yu/wj5321
rEFk/xQOPOM3l/zdr5aO8YlvqLVgUlvxh7Z3UfP84sIQU/qrP/sLVYewF35N
bTZ39gmf4WZbfZsHeI89+TZbi6nyrDkPfuGd8cTydn71+LJJ1qngiPxZG/KZ
c8W7Nl1c48hT+v3BhjeXPfSr7suaCd3h8kNbL6mxycP3cxZLbpmeBaq6kT7+
9MIdwzPv6X+46sJePcredM9f+KQa2nP6c13cpLPM3X3Xt7iUcx05d5/zDHTW
zu9eUf3QEf6JLfhKbvlX3hIDjUmn5CEXmw25tDgm16iFM6aYCvNlf/S+wX/f
3dMVW8LhuvFwmc2tCdz8xHG9cyttLr5nbq2ePbKPkDMDwZEzGXyHTYZ8ULzn
d+xBT2KYPCuG4KtzaMY87zO/Vfq947rL+iNe8t6eDuCCB+fpS+5TE+AQe6x7
6vLCQXY4rrnzN+sdcRcGtmNDNYixEvfkdHWbuiM5e3wGP+eJxF++Ty56Tv0u
H6mJ25rxcfUb1z0z5M5q1974O/3AoaFGf3/hwUHywCDeiD382j2N7PjDFsaD
ib+pPTPfxqH5mDE709aX1lXtgxPmsamzgyH/d4Hv6HfDF357sOuVFU9wop2/
fU3ZSFzkq3RP/mBZseJ36zcfxS31Rpsv3VHzBX7GzmT3DC7SBf+SE9m8zX/b
mpr4rGbAYdfUnzBmHS57VTmfkvNDOb9Efo3e2BonrPGI83RIr/yeTnEwfMIZ
fJF7PE8OfZq38S2xD9/ogC/hEl/BNz6Nv/xarBU38395yJk9Wp9tDfjAiiPs
Mt6rylkgvPo/cbBifg==
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztycEJgDAAA8DiQ1zDFXQCcYM6QQV9FYT6ELe3ncM7SCBk3K94diGEe6gV
07OUkt6tb+NIeZ5yO9eaKQAAAAAAAAAAAAAAAAB/9AHf2Qh2
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.4749868931644473`*^9, 3.474986942836736*^9, 
  3.4749951198591113`*^9, 3.4749953167772055`*^9, 3.4749954830083885`*^9, 
  3.47499585976678*^9, 3.474996430063642*^9, 3.474996564792613*^9, 
  3.4749966296026773`*^9, 3.474996772311818*^9, 3.474996913569537*^9, 
  3.474997596191078*^9, 3.4749977305944223`*^9, 3.4749991135548115`*^9, 
  3.474999389781534*^9, 3.4749995678678865`*^9, 3.4749997882464294`*^9, 
  3.4750008775813055`*^9, 3.4750015429419365`*^9, 3.475002753618136*^9, 
  3.5250118900705433`*^9, 3.8115232359942837`*^9},
 CellLabel->
  "Out[783]=",ExpressionUUID->"7433334e-e0aa-49dd-a9cb-8415e81668ad"]
}, Open  ]],

Cell[TextData[{
 "Comparing these images with those obtained from the fixed values for ",
 StyleBox["w", "Code"]
}], "Text",
 CellChangeTimes->{{3.4749987272403316`*^9, 3.4749987538213167`*^9}, 
   3.4750013642594423`*^9},ExpressionUUID->"21cea5ba-4834-41a9-93af-\
9e1b6f58adc1"],

Cell[CellGroupData[{

Cell[BoxData["deconvImgsFromFixedW"], "Input",
 CellChangeTimes->{{3.4749987596778793`*^9, 3.4749987665027266`*^9}, 
   3.4749993344955845`*^9},
 CellLabel->
  "In[784]:=",ExpressionUUID->"a528bb28-53f2-4de7-b2e6-719f4a2473cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyN2w3IXmUdBvAtp1tqZcvPltmyTM2ynDJde87xazLbUnNpuLQ1TR2y5prp
Ej9S/KhkoKFoOAyVZIliZigqDKlUstQstZGWH0NjYDFRWhgpnd99ul5uTu80
4Xie93nOue//9b+u/8d9n7PpJ5957GnvmjBhwllTuv8du3jlIStWLD53wVb+
OHXx0hn7LfXjYd2xX3fs1E5qt1u8Xbv0pOnt9c/u1V795gHtle+d3c569cPt
jdv/o1nz2oZm3qZ1zU+f+HM5L1vzWnPhlC3acy77azNp4xvN6Y+81ezy/aeb
h864t1m76sFmzzlrm0sPeby5/fJt2n13/2x77d/2bWdO/HjrOmNMve3FZjTr
1ebI27dqz/rcDu2hj09t16+f3Lpn07r7myf3uLF5dO7tZRzjrdrtl+V7x/TT
H2mufvPu5plJ15Trtrzm5mbf3X9WvvvDxf9sDjjx302wnHTTQe33PjO3nG+9
7v3FXmMteOq3xb7Dd36p+dOiVwom92dumDdMe3LsuvN2eXf76Nx92sVXzSi+
ueUnO7UvjJ5vjLfNY38v8/1u5h7txFv2bJvnd275i53Gu/7ZW8fsv+CUZ4qP
4DIHP8KxZNma5tbrflDmNmfscrCbD1/fcHD70j4ntPff8Pl23Q4fbMMJ+5zN
wVfm47vm+R82c9Zu2/KJcdgKBy42rZvV7jlnVOzlL1zgc8olH2r32X9mwThj
6ifbDxyzdYsrWIzpjO9tV+xYxjXvnWdvWbjDg7nhwIf74HVm6/zVE4oGNr5x
RDt38lfbw3f+erHD9/G169+6+45m5sRbynw+G5eNbHlm0vbty7+f2NINn6za
7dAyBhxsMBeNuW7tqsPbBU/Naxfe1Zbf2Mrvi6/6efEvPl3z6xP2K/oTA3zN
DnyYFx/06oDdffDz678e3r/d9dtHtxcf+6Uyjzld5/6Fdz1Q9OQwFl58xkHs
Mxccp37nU+30048sfLx196eLbmkKJ3gzFwwONtIdzp2Nha8LTlnY3nPHMYU7
Y295zUfL2OaEGS+JSfoTq/QHC+2KDxhe2foLhXdz33PHE2N2J8YcvuNLnOKe
FsS5cXDhkDue3OMjJd75zHw4+NjxhxVt4Ty5xO8w+h6Gux44vmgcP/TY43+g
6JsmYGGbeHLmU1jYzD+w44QNNOManODdsfGNh8u9xsOp39nDX860xnb88qfx
5ChxDc9zr7+n5AF5EgbYHHTpPv7DFZ2z4Ue/2b1duff7yrh8T9Pxqfn5M/HO
n+IQHlj45PhfzSmcig3z8YUx3OczPLg1lph0v7zieuPJVTCwC881N3iDmy74
gQ/xSZNiynnJsk8U+/nZmM7RNjv4Eo+pBeY0Jvt95lO+waWx2Qevg56MwX/B
JRfA6brkOGMbi918QkewwGVsuNnBD2ykGfzAikMxDgvM/EUPfORvsRYdiCnj
Rc/BkTnCE9tcw1++w6v54WCvORz+dn38izP3skWc0IiD1uFjh3xBm+7DHb/J
dfXBHn7iM3PL6zAnP8JE+zRrDL+ZF17jsplvnfmBNv2dmAh3fOlvc7kPL3Ck
DtBG6oXcJTZcF32zz9h4ghFm18LgXnO75qb7bij3GHP5/Gml73CWz+mH/uRL
ON3je35mCx9HM75nNx+ERza5J/53Pf+4x/XGphU20Un0zh/0qQakXvvNdXQl
xmGGjV9dk9jGvftxx//mjg9T982dXoke/U4nDjy4X53nB7zyAw3ixH1ymftc
aww48W1O+oKFH92Xe/iMZuUkfDx0xoGlrxBPcLmfb3CSOeTb5Njog43Rur+T
19gBe/JarqVFdc18fIiXcJLcnnwGhx6FrvhZnMOBe7pkH3voWd2GAw+O6Eue
oPnkFRjwKEbZw06f/cZGfgyO9JKuYRc84SZ1Ty699JCjylx0KW+4LvpyHe7U
VDVNn8DPvmOzQ27BJ63hmAbVHGPjRz/puOm+XVtxwT44xBW7wrsj+Qcef7Mf
jnzviH25l+/ZsWHagq6OnVj0wr++T74SU66BQU1Vm3GiHsqPtI0HeZ397FY3
cEaD8Or5/IZ/WmQDDPIcm1LLgie1ObY7w+UIDvjyN+743xxTb1tc+n160W8k
xyUvqNt6PtyxE970lenx2Z48QFM+w4sLf8MTHbJt2xXXjumrxhH9pPdnb9YT
yds+07v8Eb+zk25iI9voXdzSCs3AxufsZZu8wrc4oUcY9FD6SmexJPbMZUy6
dcCeOMQHzdT6Sp2v9Qaj6x35LX2B8ZM7+J5t8iTNmJf98oj4ZGf0L/fQOT/Q
uvwgJvTEetsdr/9KF8vHlXHwkf7b79YAuOcTY/NxbfN4fOSza+FIj7x8/uqx
uo0fMScG2CQO0hPxm/pC7/I/3H2/3ftVHmUjHHCxlf1iyMEn4hzX7Me32JL3
8O2o1241Fr7NUWMJX+IJl3VOTp5L3YSR3sUGHOKFPWyHhX74lq9xFZvwCYue
hc0+w2oMcSeX3PbiyUVrOBVvzmJGrhhiqHNSOEo+i44ceMr16dVcYz0gLmgY
HnykbuDFnD6LA1jko/RDfC8n4VPciGe+/sV5TVlnn/utr5WxYMRLegRYav8P
cQyxJGZS21MTU3P8Jj/gzLVqDT5woG6wh71s9ZnfrQnYJUbkPnazH7845R++
sJ4T//KWvkDM0TFOcVlrKTgcQxzprf2W2hAMwZV1VnKbXCKe+Yu25TP28iF9
yMNwZD2CR3nEGHIHPMbVP7pP7CXWfJf6T3/vhGOIJ71JOIim0qclJ9AXHPDT
OD2ohTTjc2oJnsSLGgFz1mp02efz3k9ydNYNMIopPYsxYRsPx1BrNZ7YHl0F
U/hJ/sr+VnpGPqOf9O10JX6Tm+BgNy3xsxxNg/KgseRH46Yv5Au119Hvqzz4
P7lqc0d4qjnL5/TsPmdvpV6/s0d+FZ9wsJuecCLe+ZR2aIbv4aYZePwtdoyL
M9dmv3Depi+XHJD4fDvba47qHBUf1Gt0Wkp8pMf0m7/ZwzZxC0/WuXIon+JF
rfC72p91ASz6EVpTl2Cgp6Nf/mLBcOP2Z7d1nhra+3aaGw9n+pnk6ewJZV+T
trPHJdbxIt7Znn0m8YIjfMl1qXf4oSU5S8744/JvtgfvdUY5H3Di+WN8xJ7N
Ydncb8M8Xfdn4SR1lD8dtKNmpJ7hRKw7q+nqROoC/lwLF/3B6BjNWt71okva
H29xZsGSNXRq8//Dy3jHEEf6fzlML6MnNQ9tiRWxnP2grNud1Qmxrz5mzYoX
mOQGdR0ffznq1K4XPa3geWG0qM2ajf/Sk9d1e3O8DI/xOJW/xKa9gW0e+0b5
To3PHqoawN/soycaww9scpdYyNpDL+86GpQfsn9Hj702e9/Jj/wVTPXadFjv
x7N9+Fuds+esXdXF5xXdWmVR6TXhkzsdap18rNd1qC8wZG8GF2xWK+hOPlBH
stfjyPMYGLIH4TzspWos43EBf40n/ki8sz3rfnXO3/QVe/WR9vatKflWX46v
7LGKcbGRPd7shziMq4dRd7PXmT17vWyNY+jnOo5qLPWRa9NvZV51xcFW9YTO
2Enz+GCrHhEX4ojf+Vveoifc+c1YOGB7vwd3xdgzmuT/4BjP53Us1/4fHvXv
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
rMAE738AbqPtJw==
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyNWw+IXMUZX6Ur9tBwFjfYQ8tFsqKLhq3tSTzuzdukudAuqaxpnthDw0W8
YBe1q2XberRlOThYFgLLwcIRCCyCcOwhhMBBEAJHQJADQYSDIAiLIJQFQQoH
Uih0vvn9vpnZuzMqjO/d2/dmvv/f7/tmcuy1P5+/fG8ul/vL/fZ/5y/97dS7
71567w/3yR9Ll9781bNvyo+/seNZOzYHsybLMpPLLdpRsffzZnOwYEfd/l2z
f1+z9zd4XbPjqr3/0P523d5/bu+/tPfb9nrLXj+xz96315Ybm4MV+3zGXkt2
TBlZS+aW9eRZlhXtezl7Lbi1crmu+z7Lttwam4OBfbbh73W9zcEXdnzlrvKu
0JLLld18mHuBY8WOZTe3XPF3x76z6obwIrzJ95hnnfzc5G91J5csW3J8iGz0
HrLJyN+s/Xua/NWdrDAH6Jc1MXfT0ZDL3bH3e05um4ORkxt4vE0dzLh1QXuL
9C9wvczzozLGO9tuHsz1gb0OKbMVJxuRv1xF3tBH3a8DnjLqIEfdXLPjY3v/
kaNddS9DaIQ+RVdfU/dD6v8j+/enXh4yt+pC6FQZ5nINrtO0922vF6x3h7ys
O7mAny71u5vId7ncpL3P2/ernHOG8hW+etRJxc0LutdoA3WnG+i75eaB3m7z
+aeU4TXSMEysrhJZA3KvUu51t16WXXHPMPdVyg0+owM8Nqi/JdI1SlQvwoc8
g85n+W6T9qp+OO/1r/xCL+/Tzwqi70Sf5XJ9J0vYidjgjuWhlyi/8j7kqTbZ
9TYHWb1Pufcj318hr1P03Zq7Qh812m6TcpoinU2nD5kHfM3z3bKzEdCxRD11
OKfIe4nfdb1vCg2if+FD5Cfvib2KjoItdZ29IZ41aK8b7lvQ0PY+BZspkial
revWwrVCGjPKaS3y6TrlpnzPkKcGaW5yjabnAzL9kLa1TT52ErlHHMx7vWDe
NuereTuGT/So81XaodrDYvSN+tQ89VOh7bXp613Os+wHfmvy3czrFzJWX1Jb
6ZKWrQS84Cr8wLbFb3apn4anFTR2vTyg0yZtYJn2teJjN/hbon1PuIH7Emla
47wN977wBLu97nxT4xveLXGdq9Rx22iuE10gtowS8SPw06fPbJOfAn2k42Wt
dgW5KA3Kz0ok3wV+W/V2jzhcpX2tUi5tfrcWzd8iH1ci2Xep53Xmsx7XrCfw
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
7XwUq6aN7u/+H79nMjQ=
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztycEJgDAAA8DiQ1zDFXQCcYM6QQV9FYT6ELe3ncM7SCBk3K94diGEe6gV
07OUkt6tb+NIeZ5yO9eaKQAAAAAAAAAAAAAAAAB/9AHf2Qh2
      "], {{0, 67.}, {50., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{50., 67.},
    PlotRange->{{0, 50.}, {0, 67.}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.474998769704314*^9, 3.4749991135860467`*^9, {3.474999336822592*^9, 
   3.474999358515299*^9}, 3.4749995678991213`*^9, 3.4749996799234495`*^9, 
   3.474999788277664*^9, 3.4750008776125865`*^9, 3.475001542957572*^9, 
   3.4750027536494055`*^9, 3.5250118900861435`*^9, 3.8115232360206823`*^9},
 CellLabel->
  "Out[784]=",ExpressionUUID->"5b3d1ddb-3ada-4965-ae40-9512a5e8ff9a"]
}, Open  ]],

Cell["\<\
produces surprisingly different images for the first channel and similar \
images for the second channel. Surprising because the fixed color basis \
values obtained from the file differed significantly from those calculated \
and were supposedly for hematoxylin and DAB staining, not H&E. The results \
for the first channel, both supposedly hematoxylin, are very different while \
the results for the second channel, eosin or DAB are so similar.\
\>", "Text",
 CellChangeTimes->{{3.474998904639514*^9, 3.474999008839474*^9}, {
  3.474999215802584*^9, 
  3.474999320845889*^9}},ExpressionUUID->"d9a64b21-954b-40bb-a3ae-\
60add5c19583"],

Cell[CellGroupData[{

Cell["Some Observations", "Subsubsection",
 CellChangeTimes->{{3.4749969400868635`*^9, 
  3.4749969461617985`*^9}},ExpressionUUID->"0ad48cd2-a2ee-4f43-9192-\
01b4d184b429"],

Cell[TextData[{
 "In ",
 StyleBox["findWH()", "Code"],
 ", when initializing the guess at the color basis with random values, the \
channels do not always come out in the same order. For example, sometimes the \
color basis for hematoxylin is in the first column, sometimes in the second."
}], "Text",
 CellChangeTimes->{{3.474996979628601*^9, 3.4749970880872774`*^9}, {
  3.4749977419638896`*^9, 
  3.4749977419951243`*^9}},ExpressionUUID->"729d4deb-786f-4931-b67b-\
fb21834717f5"],

Cell[TextData[{
 "Also, even when the correct channels show up in the correct columns, the \
final values can vary considerably, even after the full 5,000 iterations. \
This behavior was noted by Macenko, ",
 StyleBox["et al",
  FontSlant->"Italic"],
 ". as well and attributed it to the use of spectral data rather than RGB \
data. (A characteristic which their method supposedly corrects.)"
}], "Text",
 CellChangeTimes->{{3.4749977428696985`*^9, 3.47499779614065*^9}, {
  3.4750024714412656`*^9, 3.4750024966758327`*^9}, {3.4750028980211487`*^9, 
  3.4750028980367837`*^9}, {3.4750031649384546`*^9, 
  3.475003200773416*^9}},ExpressionUUID->"e4f6d4e7-adf1-4923-89ed-\
c606511737d9"],

Cell["\<\
It seems that this method could be made to work across multiple slide types \
-- H&E, DAB, Special Stains -- but would work best if good initial guesses \
are provided for the color basis matrix. This is certainly no more difficult \
than the current method based on Ruifrok that requires the basis values \
anyway. What is not yet clear is whether certain images will cause the \
algorithm to mis-assign channels, even when giving good initial guesses. For \
example will some images cause the system to converge with hematoxylin in the \
second channel? That is a question that should be answered before putting \
this method into production.\
\>", "Text",
 CellChangeTimes->{{3.475002898927967*^9, 
  3.4750031455356674`*^9}},ExpressionUUID->"cb2bc0f3-a2b1-4af9-b509-\
153f96cfc570"],

Cell[TextData[{
 "As mentioned somewhere above, an additional nicety would be for the ",
 StyleBox["reconIH[]", "Code"],
 " function to output actual images for each channel. Images with an indexed \
palette with different intensity values of the hue in the corresponding \
channel of the color basis matrix would be intuitive."
}], "Text",
 CellChangeTimes->{{3.475002497989156*^9, 
  3.475002620612892*^9}},ExpressionUUID->"ae71af42-2d33-4e31-81ee-\
85d00d217416"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{987, 1044},
WindowMargins->{{194, Automatic}, {Automatic, 3}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 9, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Article"}, "JournalArticle.nb", CharacterEncoding -> 
       "WindowsANSI"]]], 
   Cell[
    StyleData["Text"], TextAlignment -> Left, TextJustification -> 0., 
    FontFamily -> "Cambria", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Item1"], CellGroupingRules -> "NormalGrouping", FontFamily -> 
    "Cambria", FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Item1Paragraph"], FontFamily -> "Cambria", FontSize -> 12, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Section"], TextAlignment -> Left, FontFamily -> "Calibri", 
    FontSize -> 16, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsection"], TextAlignment -> Left, FontFamily -> "Calibri", 
    FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"], TextAlignment -> Left, TextJustification -> 
    0., FontFamily -> "Calibri", FontSize -> 13, FontWeight -> "Bold", 
    FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Title"], TextAlignment -> Left, TextJustification -> 0., 
    FontFamily -> "Calibri", FontSize -> 22, FontWeight -> "Bold", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Code"], FontFamily -> "Consolas", FontSize -> 12, FontWeight -> 
    "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Program"], CellFrame -> 0.5, 
    CellMargins -> {{75, 50}, {10, 10}}, LineSpacing -> {1, 1}, FontFamily -> 
    "Consolas", FontSize -> 10, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    Background -> RGBColor[0.87, 0.94, 1]]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 9, 2020)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"429d2554-0aa1-42db-8c52-7dab466bb1bf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 377, 6, 109, "Title",ExpressionUUID->"fb470410-9932-4148-9767-d3996f587ffb"],
Cell[947, 30, 760, 15, 75, "Text",ExpressionUUID->"c141aa0d-de15-4c6f-b6d2-879819da1e81"],
Cell[1710, 47, 2288, 53, 120, "Text",ExpressionUUID->"1e9ec965-5a28-4436-b812-cfb2f1d6ad42"],
Cell[CellGroupData[{
Cell[4023, 104, 222, 4, 54, "Section",ExpressionUUID->"92f745ba-b062-47ae-a2ba-14f94a45ff02"],
Cell[4248, 110, 592, 10, 75, "Text",ExpressionUUID->"5bd6001e-e4f5-4a7b-830a-afa72ea67f10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4877, 125, 282, 5, 54, "Section",ExpressionUUID->"92d0f821-9b7e-4e5a-811c-6d721322ec9f"],
Cell[5162, 132, 641, 11, 98, "Text",ExpressionUUID->"c98e1b51-e8af-479b-9ebb-5a6223b52319"],
Cell[5806, 145, 428, 12, 184, "Program",ExpressionUUID->"e09cea28-5c39-4dec-86b2-9ccc99f98cd8"],
Cell[6237, 159, 291, 7, 29, "Text",ExpressionUUID->"bc98d50b-0859-43c8-a508-b5dc897283a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6565, 171, 613, 9, 54, "Section",ExpressionUUID->"3f91b966-5137-41bd-b9f6-511de14214fc"],
Cell[CellGroupData[{
Cell[7203, 184, 455, 10, 38, "Subsection",ExpressionUUID->"73c6aaee-1975-44d4-b4c5-d33db1123455"],
Cell[7661, 196, 539, 9, 52, "Text",ExpressionUUID->"ee56861b-0844-4ea5-8888-0fb91882432a"],
Cell[CellGroupData[{
Cell[8225, 209, 176, 2, 30, "Subsubsection",ExpressionUUID->"4c64ccac-7aae-406a-8021-7644a895ed8d"],
Cell[8404, 213, 669, 12, 62, "Item1Paragraph",ExpressionUUID->"8a976a71-b41d-452d-9026-c0cd2758bc5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9110, 230, 162, 3, 30, "Subsubsection",ExpressionUUID->"eb460d5b-acea-428b-ade5-c7169bf40b4a"],
Cell[CellGroupData[{
Cell[9297, 237, 848, 13, 62, "Item1Paragraph",ExpressionUUID->"dcaca5cc-7e82-4ba6-b920-cc5b6fa4e0a5"],
Cell[10148, 252, 769, 13, 62, "Item1Paragraph",ExpressionUUID->"78e0514c-dd10-4c62-be15-fc6f43dd2a85"]
}, Open  ]],
Cell[10932, 268, 425, 11, 38, "Input",ExpressionUUID->"f07397f5-b1c9-4e14-9a9e-98ffcfec77a5"],
Cell[CellGroupData[{
Cell[11382, 283, 464, 9, 40, "Input",ExpressionUUID->"68e83bdb-117b-4ec9-bb73-0037ff8bb46a"],
Cell[11849, 294, 2341, 44, 57, "Output",ExpressionUUID->"65191060-b372-4eda-b53e-96ffdd2263ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14227, 343, 351, 8, 38, "Input",ExpressionUUID->"57a64c64-0a4c-44ab-8bfd-5856b30c04a6"],
Cell[14581, 353, 1334, 21, 38, "Output",ExpressionUUID->"f48f8b23-b6e2-4325-a34a-ffebd06969ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15952, 379, 317, 7, 38, "Input",ExpressionUUID->"b2570d32-3202-43e0-b92b-0e0051f8aac6"],
Cell[16272, 388, 1272, 19, 38, "Output",ExpressionUUID->"230b5d7f-0b11-4192-b7cf-2b9ec31ab429"]
}, Open  ]],
Cell[17559, 410, 518, 10, 42, "Item1Paragraph",ExpressionUUID->"959a967a-d33e-4475-b0d7-e07802fabe7c"],
Cell[CellGroupData[{
Cell[18102, 424, 453, 11, 38, "Input",ExpressionUUID->"8eecc34e-ec97-44cc-b74c-929cbfb3c811"],
Cell[18558, 437, 2488, 51, 101, "Output",ExpressionUUID->"cecdcff6-97dd-4d98-8c4b-c46ab5435afc"]
}, Open  ]],
Cell[21061, 491, 524, 11, 42, "Item1Paragraph",ExpressionUUID->"a31316e4-62c7-4393-b381-df7a58a1134e"],
Cell[CellGroupData[{
Cell[21610, 506, 602, 14, 38, "Input",ExpressionUUID->"cc6ccf75-02ac-4b3a-b551-1afc64b8afff"],
Cell[22215, 522, 2245, 46, 77, "Output",ExpressionUUID->"78f51f98-e9fa-4621-9263-4efbf70fcf1f"]
}, Open  ]],
Cell[24475, 571, 571, 11, 21, "Item1Paragraph",ExpressionUUID->"97d0726c-4130-4ff1-b150-a7fe6cc0406e"],
Cell[CellGroupData[{
Cell[25071, 586, 833, 17, 38, "Input",ExpressionUUID->"790d316e-cefd-4057-adb3-6dd7d760e74d"],
Cell[25907, 605, 1830, 37, 110, "Output",ExpressionUUID->"a0a6eeb2-61fb-4974-9746-0e96817ccf3a"]
}, Open  ]],
Cell[27752, 645, 717, 13, 42, "Item1Paragraph",ExpressionUUID->"edbe7622-0ab9-4e9f-a979-42fc49c7edb3"],
Cell[28472, 660, 685, 16, 38, "Input",ExpressionUUID->"34d65b76-b33b-40e3-a0c4-5ec6c1b0c0be"],
Cell[CellGroupData[{
Cell[29182, 680, 259, 6, 38, "Input",ExpressionUUID->"5be19611-674a-4030-a4db-7f852fc05103"],
Cell[29444, 688, 1810, 37, 110, "Output",ExpressionUUID->"3fdbe083-00fc-49c6-8654-b65a5e0ce81a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31303, 731, 214, 4, 30, "Subsubsection",ExpressionUUID->"668af8e1-10ed-41e8-8e9b-cf5ac7da32a3"],
Cell[31520, 737, 803, 17, 42, "Item1Paragraph",ExpressionUUID->"353e9ec4-4b46-4e03-9b4f-a71ed8072645"],
Cell[32326, 756, 3566, 64, 947, "Program",ExpressionUUID->"ae361b7a-d9d7-48fc-bb7a-a1525f112837"],
Cell[CellGroupData[{
Cell[35917, 824, 639, 16, 42, "Item1Paragraph",ExpressionUUID->"ef9522e8-ef50-487e-ab85-fa2986842a0f"],
Cell[36559, 842, 1131, 22, 62, "Item1Paragraph",ExpressionUUID->"720ede05-0f65-40f2-be2b-70a24199bfb1"]
}, Open  ]],
Cell[37705, 867, 943, 31, 428, "Program",ExpressionUUID->"cc547938-3f31-493a-82c0-0e0350acb099"],
Cell[38651, 900, 417, 8, 21, "Item1Paragraph",ExpressionUUID->"8d705f98-13d1-4f1b-8509-5ee88cdb9d8f"],
Cell[39071, 910, 1713, 35, 135, "Input",ExpressionUUID->"2d3f0b44-b051-4e1f-8919-48d815e482dd"],
Cell[40787, 947, 315, 6, 21, "Item1Paragraph",ExpressionUUID->"c2a1e50f-44d6-4227-978a-403acca62a46"],
Cell[CellGroupData[{
Cell[41127, 957, 382, 9, 38, "Input",ExpressionUUID->"5b678bc4-0e06-4447-9c2f-e65f459b7133"],
Cell[41512, 968, 1756, 28, 38, "Output",ExpressionUUID->"7d555dc7-00b0-4585-b0af-4c986c595ad8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43305, 1001, 510, 10, 38, "Input",ExpressionUUID->"fe6e1422-ea24-41d7-9445-b41b2f237d2b"],
Cell[43818, 1013, 2249, 40, 38, "Output",ExpressionUUID->"b092def5-6eff-43d6-a234-1bdd4f779825"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46104, 1058, 152, 3, 38, "Input",ExpressionUUID->"8b2d46a4-5d05-4b5b-95f3-5bb18e9102b0"],
Cell[46259, 1063, 1671, 27, 38, "Output",ExpressionUUID->"15ad251c-9c69-4eef-9fa3-ea42f795aea6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47967, 1095, 152, 3, 38, "Input",ExpressionUUID->"84cf5149-874a-4913-998b-37666becae60"],
Cell[48122, 1100, 1669, 27, 38, "Output",ExpressionUUID->"0edba5d4-d0f6-4ff1-92b3-3a8b9d034e4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49828, 1132, 152, 3, 38, "Input",ExpressionUUID->"ff4cab8b-e240-4b96-b4b3-b3a94ad487e0"],
Cell[49983, 1137, 1706, 27, 38, "Output",ExpressionUUID->"3299e251-b408-46a1-8ceb-725e4498fca6"]
}, Open  ]],
Cell[51704, 1167, 323, 7, 29, "Text",ExpressionUUID->"73d868eb-7ddc-4649-a9ac-a2c1c5eedf1e"],
Cell[CellGroupData[{
Cell[52052, 1178, 291, 8, 38, "Input",ExpressionUUID->"c587e611-8586-40c8-a87b-671683371823"],
Cell[52346, 1188, 1425, 23, 38, "Output",ExpressionUUID->"b92109b1-d2f0-4072-bd0e-8cc3568da976"]
}, Open  ]],
Cell[53786, 1214, 224, 5, 29, "Text",ExpressionUUID->"824c92c5-c20b-4d3c-9242-8afafce78271"],
Cell[CellGroupData[{
Cell[54035, 1223, 273, 7, 38, "Input",ExpressionUUID->"36f697e3-41b6-46c7-b5cd-757e1f67c665"],
Cell[54311, 1232, 1412, 23, 38, "Output",ExpressionUUID->"77dc4922-4d9e-42e0-9e14-fdb312802908"]
}, Open  ]],
Cell[55738, 1258, 758, 14, 75, "Text",ExpressionUUID->"153aa176-1a7e-4476-9c0d-d4733e68aba3"],
Cell[56499, 1274, 2322, 49, 159, "Input",ExpressionUUID->"5d303f66-a5ea-4fb0-b0c1-d8724b9d6709"],
Cell[CellGroupData[{
Cell[58846, 1327, 474, 9, 38, "Input",ExpressionUUID->"f7f842af-a085-4f12-9042-8806c4d6a2ab"],
Cell[59323, 1338, 5610, 86, 255, "Output",ExpressionUUID->"86226ea5-68fb-47c4-b223-aa857e8c6176"]
}, Open  ]],
Cell[64948, 1427, 354, 7, 29, "Text",ExpressionUUID->"a4670671-8d3b-4507-8ccb-7c426c0e9d78"],
Cell[CellGroupData[{
Cell[65327, 1438, 718, 18, 38, "Input",ExpressionUUID->"de33b0f3-dd24-416b-8346-561301f04f41"],
Cell[66048, 1458, 1262, 18, 38, "Output",ExpressionUUID->"891a042a-2e56-4ec4-82f0-739e7cb2588f"]
}, Open  ]],
Cell[67325, 1479, 362, 7, 29, "Text",ExpressionUUID->"5166ee90-4d25-4086-834d-6a7530f2c53c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67736, 1492, 407, 6, 38, "Subsection",ExpressionUUID->"0890c8b3-6983-496f-a3ea-fee938c34ceb"],
Cell[68146, 1500, 1476, 33, 166, "Text",ExpressionUUID->"8bb50e21-0d8b-48f0-9f50-da279c3949ce"],
Cell[69625, 1535, 2113, 81, 1221, "Program",ExpressionUUID->"506efbbd-0d61-4170-8bbe-75e1479b6c9d"],
Cell[71741, 1618, 465, 8, 52, "Text",ExpressionUUID->"1f3f129c-910b-44db-b295-8c8a126d77e0"],
Cell[72209, 1628, 359, 8, 29, "Text",ExpressionUUID->"01895980-9203-4516-8440-4134daac59bb"],
Cell[72571, 1638, 422, 11, 38, "Input",ExpressionUUID->"321e5713-832a-4d41-883e-fdc0e3405d44"],
Cell[CellGroupData[{
Cell[73018, 1653, 349, 7, 38, "Input",ExpressionUUID->"4ef9fead-f1f6-4080-b6ce-edd5542e3f9c"],
Cell[73370, 1662, 1762, 31, 38, "Output",ExpressionUUID->"bba0919f-2fd4-4af5-881f-5a211acc4102"]
}, Open  ]],
Cell[75147, 1696, 535, 9, 52, "Text",ExpressionUUID->"53b606ce-c573-4993-9b26-c75cf2d4c3e5"],
Cell[CellGroupData[{
Cell[75707, 1709, 281, 6, 38, "Input",ExpressionUUID->"8300e36c-b9fe-4334-9a09-121a66152284"],
Cell[75991, 1717, 1703, 29, 38, "Output",ExpressionUUID->"6295e26e-b4bf-438b-998d-81a799d5afba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77731, 1751, 216, 4, 38, "Input",ExpressionUUID->"b1a67c4a-b723-463b-891d-45ec0c83f233"],
Cell[77950, 1757, 1900, 36, 90, "Output",ExpressionUUID->"3212c68d-14e9-4779-927d-8e46babc0057"]
}, Open  ]],
Cell[79865, 1796, 259, 7, 29, "Text",ExpressionUUID->"7313be49-7c04-4c7a-9d67-c674c766e2a5"],
Cell[80127, 1805, 784, 20, 111, "Input",ExpressionUUID->"cdc2f622-90e7-429a-811b-0e53fe70b952"],
Cell[CellGroupData[{
Cell[80936, 1829, 278, 6, 38, "Input",ExpressionUUID->"19a2c42c-ab33-458a-b934-10acee9cbf01"],
Cell[81217, 1837, 1241, 23, 38, "Output",ExpressionUUID->"4c3eb5ec-3b0e-463f-bea7-0b07fe231426"]
}, Open  ]],
Cell[82473, 1863, 1754, 36, 143, "Text",ExpressionUUID->"7912cf04-8253-48c3-9b60-1b49229302a4"],
Cell[84230, 1901, 428, 8, 29, "Text",ExpressionUUID->"29c855f3-8f06-44e4-bba0-fe7f2ef6002c"],
Cell[84661, 1911, 433, 10, 38, "Input",ExpressionUUID->"adb02f26-2837-45f5-b1c5-b2411de0fed4"],
Cell[85097, 1923, 203, 3, 29, "Text",ExpressionUUID->"13258a41-c761-4917-9480-82c818c5d7dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85337, 1931, 278, 4, 38, "Subsection",ExpressionUUID->"430d5c3b-c2ff-4764-95bb-fb73658af63c"],
Cell[85618, 1937, 520, 12, 52, "Text",ExpressionUUID->"4b0e46b3-772f-4e0c-b7ad-bbda39da6277"],
Cell[86141, 1951, 561, 20, 276, "Program",ExpressionUUID->"aa05aa96-ff22-477a-934d-5d359487a971"],
Cell[86705, 1973, 706, 16, 52, "Text",ExpressionUUID->"e098e672-65a4-4539-bc72-9f96baa4d456"],
Cell[87414, 1991, 432, 10, 38, "Input",ExpressionUUID->"b6cc9e3d-5be4-449b-a9e3-9b7304886d43"],
Cell[CellGroupData[{
Cell[87871, 2005, 216, 4, 38, "Input",ExpressionUUID->"2b40c717-799f-4163-bcec-2f815fcf58d3"],
Cell[88090, 2011, 1951, 39, 110, "Output",ExpressionUUID->"dd8a917c-cada-458c-b1f1-408804b7d99c"]
}, Open  ]],
Cell[90056, 2053, 213, 5, 29, "Text",ExpressionUUID->"9f05575c-5a1a-4a8b-b79e-afb9ff2c07be"],
Cell[CellGroupData[{
Cell[90294, 2062, 322, 7, 38, "Input",ExpressionUUID->"a80e9684-34bd-497e-a325-b9d221c88554"],
Cell[90619, 2071, 1694, 30, 38, "Output",ExpressionUUID->"65b2c119-44cd-4774-a7c4-dfc170df1327"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92350, 2106, 314, 7, 38, "Input",ExpressionUUID->"57bb07e2-6a05-4b2d-b7af-673ef9571911"],
Cell[92667, 2115, 1704, 30, 38, "Output",ExpressionUUID->"2b9b6672-9a18-495f-9e94-c589101b1c3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94408, 2150, 247, 5, 38, "Input",ExpressionUUID->"d6251995-f2b7-4953-9084-e2379375efd4"],
Cell[94658, 2157, 1667, 30, 38, "Output",ExpressionUUID->"6567ec9f-5612-4098-8afb-04a48ad9f0cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96362, 2192, 242, 5, 38, "Input",ExpressionUUID->"95dad33d-2e94-45e2-a80c-bdae3a6b50fa"],
Cell[96607, 2199, 1556, 29, 38, "Output",ExpressionUUID->"ba3d7917-09c1-4bea-af72-8e510943774c"]
}, Open  ]],
Cell[98178, 2231, 187, 3, 29, "Text",ExpressionUUID->"1da443be-252e-4515-a83c-a77a73da470f"],
Cell[98368, 2236, 1339, 32, 183, "Input",ExpressionUUID->"66122ad4-a826-49c0-aa3a-74fe3171c8b1"],
Cell[CellGroupData[{
Cell[99732, 2272, 271, 6, 38, "Input",ExpressionUUID->"67da1122-bdbc-4177-bcd9-2d3fe0ceea4b"],
Cell[100006, 2280, 670, 14, 29, "Print",ExpressionUUID->"d58292b5-be55-4af3-87d3-1a7f10fcd0be"],
Cell[100679, 2296, 1633, 30, 38, "Output",ExpressionUUID->"61f8388e-3b13-45a3-8629-4cb40dc8fc69"]
}, Open  ]],
Cell[102327, 2329, 421, 11, 29, "Text",ExpressionUUID->"41a4012e-1137-482e-8b3e-82ae66ae5cc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102785, 2345, 795, 11, 38, "Subsection",ExpressionUUID->"0f1b948b-ec54-4bb1-9915-76fa32b5c737"],
Cell[103583, 2358, 2234, 47, 143, "Text",ExpressionUUID->"66a287aa-a836-4fe7-b04e-7403d3f27c30"],
Cell[105820, 2407, 905, 46, 672, "Program",ExpressionUUID->"2c4daee0-544b-43a2-895f-ecdee2f3df7a"],
Cell[106728, 2455, 1023, 18, 98, "Text",ExpressionUUID->"6c7767c9-ff5b-4f2f-86ff-c42ba65a8634"],
Cell[107754, 2475, 456, 10, 52, "Text",ExpressionUUID->"2ac6f400-c977-4cba-86fb-e0d6714c704b"],
Cell[108213, 2487, 436, 11, 38, "Input",ExpressionUUID->"b68faf44-6e03-4914-9c0a-40f049585b49"],
Cell[108652, 2500, 370, 7, 29, "Text",ExpressionUUID->"67b5ddba-721b-4e4a-bb7a-80f8933730b4"],
Cell[109025, 2509, 805, 21, 38, "Input",ExpressionUUID->"a2047c24-f29f-4acf-88d6-db9337e2519e"],
Cell[109833, 2532, 676, 14, 52, "Text",ExpressionUUID->"017baed5-93b2-4401-be4f-2a527f79e9df"],
Cell[110512, 2548, 372, 7, 29, "Text",ExpressionUUID->"1a6c1081-1fa3-443f-8b65-deca002a0193"],
Cell[110887, 2557, 913, 19, 38, "Input",ExpressionUUID->"39bba2c2-5e74-4997-8a5d-b088ab1b64e3"],
Cell[111803, 2578, 176, 3, 29, "Text",ExpressionUUID->"15e519e7-9f5d-4598-a0d5-28d1bc70a548"],
Cell[CellGroupData[{
Cell[112004, 2585, 214, 4, 38, "Input",ExpressionUUID->"47294cac-e80d-4314-9ff3-b8286279edb7"],
Cell[112221, 2591, 1447, 22, 38, "Output",ExpressionUUID->"30da34e3-84de-4240-b8fe-52fe1fecb63a"]
}, Open  ]],
Cell[113683, 2616, 265, 4, 29, "Text",ExpressionUUID->"feabbd99-b38f-4997-8366-a10aa2669308"],
Cell[CellGroupData[{
Cell[113973, 2624, 323, 7, 38, "Input",ExpressionUUID->"f5f9f30e-92f5-45bb-bafc-76223a850cea"],
Cell[114299, 2633, 1811, 32, 42, "Output",ExpressionUUID->"32a44e49-6418-40a0-8874-300ba93792c9"]
}, Open  ]],
Cell[116125, 2668, 201, 3, 29, "Text",ExpressionUUID->"3af63c2c-c93d-4da8-a335-6d3eacee68eb"],
Cell[CellGroupData[{
Cell[116351, 2675, 253, 5, 38, "Input",ExpressionUUID->"6cecba85-a179-4150-9dc7-a3d1d14c2da7"],
Cell[116607, 2682, 2652, 54, 43, "Output",ExpressionUUID->"32640b29-6aba-41f9-b96c-881486162336"]
}, Open  ]],
Cell[119274, 2739, 250, 6, 29, "Text",ExpressionUUID->"ae22334f-7a2d-4669-b21e-d073c3f57234"],
Cell[119527, 2747, 328, 5, 29, "Text",ExpressionUUID->"65d40e5a-87c6-4976-ba30-ed20beaac08b"],
Cell[119858, 2754, 5923, 134, 447, "Input",ExpressionUUID->"2672a8dc-ba22-44e0-a640-b345fc25194f"],
Cell[125784, 2890, 303, 8, 29, "Text",ExpressionUUID->"a88d4480-9d59-4411-a562-34339a332d33"],
Cell[CellGroupData[{
Cell[126112, 2902, 412, 7, 38, "Input",ExpressionUUID->"aa15df25-6db7-48a6-8c54-f7749423ef4c"],
Cell[126527, 2911, 2150, 36, 42, "Output",ExpressionUUID->"f45a05d3-8d1a-4c48-8f96-a69dd233d47f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128714, 2952, 253, 5, 38, "Input",ExpressionUUID->"711a8adb-4e19-4aba-875f-12c45203280d"],
Cell[128970, 2959, 2841, 58, 43, "Output",ExpressionUUID->"3728b500-f9c6-4656-a01e-259acc35ba91"]
}, Open  ]],
Cell[131826, 3020, 291, 8, 29, "Text",ExpressionUUID->"6872f8ad-242c-4a80-9c86-7aa25ed2343e"],
Cell[132120, 3030, 270, 6, 29, "Text",ExpressionUUID->"17883a25-d6bc-431e-9246-63b7bf551455"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132427, 3041, 226, 4, 38, "Subsection",ExpressionUUID->"55b5c618-f7fd-4e58-9558-d454a41b723e"],
Cell[132656, 3047, 411, 12, 29, "Text",ExpressionUUID->"ac5cafea-9bcd-4732-ae29-513d470e18b5"],
Cell[133070, 3061, 1825, 39, 183, "Input",ExpressionUUID->"f6586007-f354-47f0-b825-aed2088bf45f"],
Cell[134898, 3102, 328, 8, 29, "Text",ExpressionUUID->"e85dedc1-1dc4-4841-a2e1-3c8a8bb947a2"],
Cell[CellGroupData[{
Cell[135251, 3114, 583, 13, 38, "Input",ExpressionUUID->"a654401e-f52e-4cd4-b3e8-fc917b1d738d"],
Cell[135837, 3129, 668, 14, 29, "Print",ExpressionUUID->"f5774c66-957f-4244-bfae-66061d2bcba0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136542, 3148, 277, 5, 38, "Input",ExpressionUUID->"4c83d77d-f97c-4e71-816c-f0706703b22c"],
Cell[136822, 3155, 1959, 39, 110, "Output",ExpressionUUID->"6d38a3c1-6e94-448f-8ef1-09ead7e3dc17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138818, 3199, 274, 5, 38, "Input",ExpressionUUID->"a89b69b0-0876-4a95-b691-ed25085a5861"],
Cell[139095, 3206, 2044, 38, 90, "Output",ExpressionUUID->"ef95764e-6d38-449a-80a7-cd4bc4d60b09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141176, 3249, 326, 6, 38, "Input",ExpressionUUID->"0fa72894-9193-4132-a234-25ba46ae5b0f"],
Cell[141505, 3257, 2846, 58, 43, "Output",ExpressionUUID->"6cd50587-716e-4e7d-8514-be73b241d7e0"]
}, Open  ]],
Cell[144366, 3318, 172, 3, 29, "Text",ExpressionUUID->"d651071c-2a71-49a7-bf1f-5ad7176ba3ae"],
Cell[144541, 3323, 376, 10, 38, "Input",ExpressionUUID->"581c6d91-5b12-4830-b613-a4585c615231"],
Cell[CellGroupData[{
Cell[144942, 3337, 225, 5, 38, "Input",ExpressionUUID->"e98112f6-15d2-4500-8bb0-43c343aaa5e9"],
Cell[145170, 3344, 14047, 233, 103, "Output",ExpressionUUID->"7349064b-4fa6-4711-b462-18f5c6d1c48b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159254, 3582, 252, 5, 38, "Input",ExpressionUUID->"d455be22-9865-4903-82f9-e7dc351ac407"],
Cell[159509, 3589, 1318, 21, 38, "Output",ExpressionUUID->"ba82f0c0-4463-49dd-b2ba-4e0a5631687b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160864, 3615, 591, 13, 38, "Input",ExpressionUUID->"ddb1049a-bb61-4050-8bed-03ef51acf705"],
Cell[161458, 3630, 677, 14, 29, "Print",ExpressionUUID->"109adb87-946e-4d10-bdaf-e1480ee2bdba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162172, 3649, 244, 4, 38, "Input",ExpressionUUID->"dc2b9e7d-c129-4720-9a2b-6014662809fe"],
Cell[162419, 3655, 16512, 273, 103, "Output",ExpressionUUID->"f8163f55-4f81-42a1-9c77-98da57cb0f31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178968, 3933, 314, 6, 38, "Input",ExpressionUUID->"8aa76523-2274-418a-8e6d-e3bff35465d5"],
Cell[179285, 3941, 1347, 21, 38, "Output",ExpressionUUID->"471ae1b8-b793-4e8e-866f-5b3250c5c2b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180669, 3967, 446, 8, 38, "Input",ExpressionUUID->"e1a2a199-a77d-410c-b4f4-14a874e6d5bf"],
Cell[181118, 3977, 14421, 250, 105, "Output",ExpressionUUID->"fc4e7432-976a-48bc-b9ae-34b2e29beaae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195588, 4233, 820, 11, 38, "Subsection",ExpressionUUID->"346361df-5a8b-454e-ae6d-f2d5d2f01ff3"],
Cell[196411, 4246, 527, 11, 52, "Text",ExpressionUUID->"47e3c231-39bd-4bef-a360-98d9f73574ca"],
Cell[196941, 4259, 3779, 149, 2258, "Program",ExpressionUUID->"d86620af-c832-43e3-98be-2d1e7f123196"],
Cell[200723, 4410, 181, 3, 29, "Text",ExpressionUUID->"c1d00ddd-fafe-4f18-8da9-355ef1327483"],
Cell[200907, 4415, 1499, 38, 183, "Input",ExpressionUUID->"6923fae7-2a0b-459b-8203-9e88755586d2"],
Cell[CellGroupData[{
Cell[202431, 4457, 201, 4, 38, "Input",ExpressionUUID->"32a52f09-2bb9-4595-b14c-177144408403"],
Cell[202635, 4463, 10306, 255, 284, "Output",ExpressionUUID->"7ee3b860-f13e-4f21-b62e-eca8decf42e9"]
}, Open  ]],
Cell[212956, 4721, 1026, 22, 98, "Text",ExpressionUUID->"578f78b5-3c37-4e11-a65e-1737821dbd70"],
Cell[213985, 4745, 908, 17, 98, "Text",ExpressionUUID->"f8308822-7046-422e-8eb8-bc9be346523d"],
Cell[214896, 4764, 378, 8, 52, "Text",ExpressionUUID->"bef0f3ae-5799-4ceb-b23d-b44e7018443c"],
Cell[215277, 4774, 14391, 316, 1695, "Input",ExpressionUUID->"056b4d0b-ccfd-482b-943e-813747eda79c"],
Cell[229671, 5092, 348, 8, 38, "Input",ExpressionUUID->"1ab25c48-4662-4c16-91ee-a48b2c538d62"],
Cell[CellGroupData[{
Cell[230044, 5104, 479, 11, 38, "Input",ExpressionUUID->"6060d26b-79dc-4e6c-8bb6-547ac772e2d6"],
Cell[CellGroupData[{
Cell[230548, 5119, 1964, 29, 29, "Print",ExpressionUUID->"81addbe2-7b7e-42ea-84cf-41729eb61451"],
Cell[232515, 5150, 2100, 34, 29, "Print",ExpressionUUID->"702ba2cf-ab47-4578-ba64-0edd5750464a"],
Cell[234618, 5186, 2152, 33, 29, "Print",ExpressionUUID->"99831d3c-3fb9-4154-9b1c-00e720150ddd"],
Cell[236773, 5221, 2106, 34, 29, "Print",ExpressionUUID->"30a2f843-53e3-4d4d-a552-b2e93aa48af2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[238928, 5261, 210, 4, 38, "Input",ExpressionUUID->"d5bb5b62-a513-4574-adc3-980a77071874"],
Cell[239141, 5267, 1413, 30, 90, "Output",ExpressionUUID->"824a7420-e9d1-436c-a3dc-59cdf32350ed"]
}, Open  ]],
Cell[240569, 5300, 300, 9, 29, "Text",ExpressionUUID->"6b89599b-1186-4a93-af1f-13d66547f3be"],
Cell[CellGroupData[{
Cell[240894, 5313, 551, 14, 87, "Input",ExpressionUUID->"5bd158e3-3897-4519-88a5-093ced6fe611"],
Cell[241448, 5329, 13072, 219, 103, "Output",ExpressionUUID->"b6055116-0366-4945-add4-9ccfa3d0c799"],
Cell[254523, 5550, 450, 8, 38, "Output",ExpressionUUID->"f3fffaed-f391-4cb7-be86-c3ae11e42e48"]
}, Open  ]],
Cell[254988, 5561, 3024, 71, 423, "Input",ExpressionUUID->"2ca5cfb4-5da8-4a42-b91b-ea0cdc3dce8b"],
Cell[CellGroupData[{
Cell[258037, 5636, 553, 13, 38, "Input",ExpressionUUID->"7a2d222c-4ec6-4c02-b6f8-e123cdc255c7"],
Cell[CellGroupData[{
Cell[258615, 5653, 914, 14, 29, "Print",ExpressionUUID->"90a9863f-461c-4c1d-bc03-c1659d99d7b1"],
Cell[259532, 5669, 945, 15, 29, "Print",ExpressionUUID->"463b32c3-8879-4000-a5e6-f11f9a8170ad"],
Cell[260480, 5686, 1081, 20, 29, "Print",ExpressionUUID->"151d9435-0259-435f-b446-90b481a6a31e"],
Cell[261564, 5708, 1135, 19, 29, "Print",ExpressionUUID->"74572819-6bd3-4641-841a-b788b0be619f"],
Cell[262702, 5729, 1089, 20, 29, "Print",ExpressionUUID->"31b22c44-e4b2-4c76-aab4-eadd230a9b5c"],
Cell[263794, 5751, 1796, 37, 67, "Print",ExpressionUUID->"9940da27-e2dc-4772-9e2c-1e4256902f73"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[265639, 5794, 241, 4, 38, "Input",ExpressionUUID->"4a414a46-02b3-408e-85f5-61f7b3f53278"],
Cell[265883, 5800, 16999, 283, 103, "Output",ExpressionUUID->"d5bbef91-c017-499d-917f-017ccff84d52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282919, 6088, 370, 7, 38, "Input",ExpressionUUID->"1b64f932-c7c8-4a48-bbdd-83b5cf1617d9"],
Cell[283292, 6097, 15683, 269, 105, "Output",ExpressionUUID->"7433334e-e0aa-49dd-a9cb-8415e81668ad"]
}, Open  ]],
Cell[298990, 6369, 279, 6, 29, "Text",ExpressionUUID->"21cea5ba-4834-41a9-93af-9e1b6f58adc1"],
Cell[CellGroupData[{
Cell[299294, 6379, 227, 4, 38, "Input",ExpressionUUID->"a528bb28-53f2-4de7-b2e6-719f4a2473cf"],
Cell[299524, 6385, 14334, 248, 105, "Output",ExpressionUUID->"5b3d1ddb-3ada-4965-ae40-9512a5e8ff9a"]
}, Open  ]],
Cell[313873, 6636, 645, 11, 98, "Text",ExpressionUUID->"d9a64b21-954b-40bb-a3ae-60add5c19583"],
Cell[CellGroupData[{
Cell[314543, 6651, 172, 3, 30, "Subsubsection",ExpressionUUID->"0ad48cd2-a2ee-4f43-9192-01b4d184b429"],
Cell[314718, 6656, 482, 10, 52, "Text",ExpressionUUID->"729d4deb-786f-4931-b67b-fb21834717f5"],
Cell[315203, 6668, 685, 13, 75, "Text",ExpressionUUID->"e4f6d4e7-adf1-4923-89ed-c606511737d9"],
Cell[315891, 6683, 796, 13, 120, "Text",ExpressionUUID->"cb2bc0f3-a2b1-4af9-b509-153f96cfc570"],
Cell[316690, 6698, 466, 9, 52, "Text",ExpressionUUID->"ae71af42-2d33-4e31-81ee-85d00d217416"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

